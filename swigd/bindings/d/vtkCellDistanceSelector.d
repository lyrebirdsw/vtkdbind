/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCellDistanceSelector;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAlgorithmOutput;
static import vtkDataObject;
static import vtkSelection;
static import vtkSelectionAlgorithm;

class vtkCellDistanceSelector : vtkSelectionAlgorithm.vtkSelectionAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCellDistanceSelector_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCellDistanceSelector obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  enum InputPorts {
    INPUT_MESH = 0,
    INPUT_SELECTION = 1
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCellDistanceSelector_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCellDistanceSelector SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCellDistanceSelector_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCellDistanceSelector ret = (cPtr is null) ? null : new vtkCellDistanceSelector(cPtr, false);
    return ret;
  }

  public vtkCellDistanceSelector NewInstance() const {
    void* cPtr = vtkd_im.vtkCellDistanceSelector_NewInstance(cast(void*)swigCPtr);
    vtkCellDistanceSelector ret = (cPtr is null) ? null : new vtkCellDistanceSelector(cPtr, false);
    return ret;
  }

  alias vtkSelectionAlgorithm.vtkSelectionAlgorithm.NewInstance NewInstance;

  public static vtkCellDistanceSelector New() {
    void* cPtr = vtkd_im.vtkCellDistanceSelector_New();
    vtkCellDistanceSelector ret = (cPtr is null) ? null : new vtkCellDistanceSelector(cPtr, false);
    return ret;
  }

  public void SetInputMeshConnection(vtkAlgorithmOutput.vtkAlgorithmOutput arg0) {
    vtkd_im.vtkCellDistanceSelector_SetInputMeshConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(arg0));
  }

  public void SetInputMesh(vtkDataObject.vtkDataObject obj) {
    vtkd_im.vtkCellDistanceSelector_SetInputMesh(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(obj));
  }

  public void SetInputSelectionConnection(vtkAlgorithmOutput.vtkAlgorithmOutput arg0) {
    vtkd_im.vtkCellDistanceSelector_SetInputSelectionConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(arg0));
  }

  public void SetInputSelection(vtkSelection.vtkSelection obj) {
    vtkd_im.vtkCellDistanceSelector_SetInputSelection(cast(void*)swigCPtr, vtkSelection.vtkSelection.swigGetCPtr(obj));
  }

  public void SetDistance(int _arg) {
    vtkd_im.vtkCellDistanceSelector_SetDistance(cast(void*)swigCPtr, _arg);
  }

  public int GetDistance() {
    auto ret = vtkd_im.vtkCellDistanceSelector_GetDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIncludeSeed(int _arg) {
    vtkd_im.vtkCellDistanceSelector_SetIncludeSeed(cast(void*)swigCPtr, _arg);
  }

  public int GetIncludeSeed() {
    auto ret = vtkd_im.vtkCellDistanceSelector_GetIncludeSeed(cast(void*)swigCPtr);
    return ret;
  }

  public void IncludeSeedOn() {
    vtkd_im.vtkCellDistanceSelector_IncludeSeedOn(cast(void*)swigCPtr);
  }

  public void IncludeSeedOff() {
    vtkd_im.vtkCellDistanceSelector_IncludeSeedOff(cast(void*)swigCPtr);
  }

  public void SetAddIntermediate(int _arg) {
    vtkd_im.vtkCellDistanceSelector_SetAddIntermediate(cast(void*)swigCPtr, _arg);
  }

  public int GetAddIntermediate() {
    auto ret = vtkd_im.vtkCellDistanceSelector_GetAddIntermediate(cast(void*)swigCPtr);
    return ret;
  }

  public void AddIntermediateOn() {
    vtkd_im.vtkCellDistanceSelector_AddIntermediateOn(cast(void*)swigCPtr);
  }

  public void AddIntermediateOff() {
    vtkd_im.vtkCellDistanceSelector_AddIntermediateOff(cast(void*)swigCPtr);
  }
}
