/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkStringArray;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkIdList;
static import vtkAbstractArray;
static import vtkStdString;
static import vtkVariant;

class vtkStringArray : vtkAbstractArray.vtkAbstractArray {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkStringArray_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkStringArray obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkStringArray New() {
    void* cPtr = vtkd_im.vtkStringArray_New();
    vtkStringArray ret = (cPtr is null) ? null : new vtkStringArray(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkStringArray_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkStringArray SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkStringArray_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkStringArray ret = (cPtr is null) ? null : new vtkStringArray(cPtr, false);
    return ret;
  }

  public vtkStringArray NewInstance() const {
    void* cPtr = vtkd_im.vtkStringArray_NewInstance(cast(void*)swigCPtr);
    vtkStringArray ret = (cPtr is null) ? null : new vtkStringArray(cPtr, false);
    return ret;
  }

  alias vtkAbstractArray.vtkAbstractArray.NewInstance NewInstance;

  public override void InterpolateTuple(long i, vtkIdList.vtkIdList ptIndices, vtkAbstractArray.vtkAbstractArray source, double* weights) {
    vtkd_im.vtkStringArray_InterpolateTuple__SWIG_0(cast(void*)swigCPtr, i, vtkIdList.vtkIdList.swigGetCPtr(ptIndices), vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source), cast(void*)weights);
  }

  public override void InterpolateTuple(long i, long id1, vtkAbstractArray.vtkAbstractArray source1, long id2, vtkAbstractArray.vtkAbstractArray source2, double t) {
    vtkd_im.vtkStringArray_InterpolateTuple__SWIG_1(cast(void*)swigCPtr, i, id1, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source1), id2, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source2), t);
  }

  public override void GetTuples(vtkIdList.vtkIdList ptIds, vtkAbstractArray.vtkAbstractArray output) {
    vtkd_im.vtkStringArray_GetTuples__SWIG_0(cast(void*)swigCPtr, vtkIdList.vtkIdList.swigGetCPtr(ptIds), vtkAbstractArray.vtkAbstractArray.swigGetCPtr(output));
  }

  public override void GetTuples(long p1, long p2, vtkAbstractArray.vtkAbstractArray output) {
    vtkd_im.vtkStringArray_GetTuples__SWIG_1(cast(void*)swigCPtr, p1, p2, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(output));
  }

  public override int Allocate(long sz, long ext) {
    auto ret = vtkd_im.vtkStringArray_Allocate__SWIG_0(cast(void*)swigCPtr, sz, ext);
    return ret;
  }

  public override int Allocate(long sz) {
    auto ret = vtkd_im.vtkStringArray_Allocate__SWIG_1(cast(void*)swigCPtr, sz);
    return ret;
  }

  public vtkStdString.vtkStdString GetValue(long id) {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkStringArray_GetValue(cast(void*)swigCPtr, id), false);
    return ret;
  }

  public void SetValue(long id, string value) {
    vtkd_im.vtkStringArray_SetValue(cast(void*)swigCPtr, id, (value ? std.string.toStringz(value) : null));
  }

  public void SetNumberOfValues(long number) {
    vtkd_im.vtkStringArray_SetNumberOfValues(cast(void*)swigCPtr, number);
  }

  public long GetNumberOfValues() {
    auto ret = vtkd_im.vtkStringArray_GetNumberOfValues(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfElementComponents() {
    auto ret = vtkd_im.vtkStringArray_GetNumberOfElementComponents(cast(void*)swigCPtr);
    return ret;
  }

  public void InsertValue(long id, string val) {
    vtkd_im.vtkStringArray_InsertValue(cast(void*)swigCPtr, id, (val ? std.string.toStringz(val) : null));
  }

  public long InsertNextValue(string f) {
    auto ret = vtkd_im.vtkStringArray_InsertNextValue(cast(void*)swigCPtr, (f ? std.string.toStringz(f) : null));
    return ret;
  }

  public override long LookupValue(vtkVariant.vtkVariant value) {
    auto ret = vtkd_im.vtkStringArray_LookupValue__SWIG_0(cast(void*)swigCPtr, vtkVariant.vtkVariant.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public override void LookupValue(vtkVariant.vtkVariant value, vtkIdList.vtkIdList ids) {
    vtkd_im.vtkStringArray_LookupValue__SWIG_1(cast(void*)swigCPtr, vtkVariant.vtkVariant.swigGetCPtr(value), vtkIdList.vtkIdList.swigGetCPtr(ids));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public long LookupValue(string value) {
    auto ret = vtkd_im.vtkStringArray_LookupValue__SWIG_2(cast(void*)swigCPtr, (value ? std.string.toStringz(value) : null));
    return ret;
  }

  public void LookupValue(string value, vtkIdList.vtkIdList ids) {
    vtkd_im.vtkStringArray_LookupValue__SWIG_3(cast(void*)swigCPtr, (value ? std.string.toStringz(value) : null), vtkIdList.vtkIdList.swigGetCPtr(ids));
  }

  alias vtkAbstractArray.vtkAbstractArray.LookupValue LookupValue;

  public void DataElementChanged(long id) {
    vtkd_im.vtkStringArray_DataElementChanged(cast(void*)swigCPtr, id);
  }
}
