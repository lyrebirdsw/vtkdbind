/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCylinderSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkCylinderSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCylinderSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCylinderSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkCylinderSource New() {
    void* cPtr = vtkd_im.vtkCylinderSource_New();
    vtkCylinderSource ret = (cPtr is null) ? null : new vtkCylinderSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCylinderSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCylinderSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCylinderSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCylinderSource ret = (cPtr is null) ? null : new vtkCylinderSource(cPtr, false);
    return ret;
  }

  public vtkCylinderSource NewInstance() const {
    void* cPtr = vtkd_im.vtkCylinderSource_NewInstance(cast(void*)swigCPtr);
    vtkCylinderSource ret = (cPtr is null) ? null : new vtkCylinderSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetHeight(double _arg) {
    vtkd_im.vtkCylinderSource_SetHeight(cast(void*)swigCPtr, _arg);
  }

  public double GetHeightMinValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetHeightMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHeightMaxValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetHeightMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHeight() {
    auto ret = vtkd_im.vtkCylinderSource_GetHeight(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRadius(double _arg) {
    vtkd_im.vtkCylinderSource_SetRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetRadiusMinValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRadiusMaxValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRadius() {
    auto ret = vtkd_im.vtkCylinderSource_GetRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCylinderSource_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCylinderSource_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkCylinderSource_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkCylinderSource_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetResolution(int _arg) {
    vtkd_im.vtkCylinderSource_SetResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetResolutionMinValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetResolutionMaxValue() {
    auto ret = vtkd_im.vtkCylinderSource_GetResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetResolution() {
    auto ret = vtkd_im.vtkCylinderSource_GetResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCapping(int _arg) {
    vtkd_im.vtkCylinderSource_SetCapping(cast(void*)swigCPtr, _arg);
  }

  public int GetCapping() {
    auto ret = vtkd_im.vtkCylinderSource_GetCapping(cast(void*)swigCPtr);
    return ret;
  }

  public void CappingOn() {
    vtkd_im.vtkCylinderSource_CappingOn(cast(void*)swigCPtr);
  }

  public void CappingOff() {
    vtkd_im.vtkCylinderSource_CappingOff(cast(void*)swigCPtr);
  }
}
