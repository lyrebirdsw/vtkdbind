/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCubeSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkCubeSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCubeSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCubeSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkCubeSource New() {
    void* cPtr = vtkd_im.vtkCubeSource_New();
    vtkCubeSource ret = (cPtr is null) ? null : new vtkCubeSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCubeSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCubeSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCubeSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCubeSource ret = (cPtr is null) ? null : new vtkCubeSource(cPtr, false);
    return ret;
  }

  public vtkCubeSource NewInstance() const {
    void* cPtr = vtkd_im.vtkCubeSource_NewInstance(cast(void*)swigCPtr);
    vtkCubeSource ret = (cPtr is null) ? null : new vtkCubeSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetXLength(double _arg) {
    vtkd_im.vtkCubeSource_SetXLength(cast(void*)swigCPtr, _arg);
  }

  public double GetXLengthMinValue() {
    auto ret = vtkd_im.vtkCubeSource_GetXLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetXLengthMaxValue() {
    auto ret = vtkd_im.vtkCubeSource_GetXLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetXLength() {
    auto ret = vtkd_im.vtkCubeSource_GetXLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetYLength(double _arg) {
    vtkd_im.vtkCubeSource_SetYLength(cast(void*)swigCPtr, _arg);
  }

  public double GetYLengthMinValue() {
    auto ret = vtkd_im.vtkCubeSource_GetYLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetYLengthMaxValue() {
    auto ret = vtkd_im.vtkCubeSource_GetYLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetYLength() {
    auto ret = vtkd_im.vtkCubeSource_GetYLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZLength(double _arg) {
    vtkd_im.vtkCubeSource_SetZLength(cast(void*)swigCPtr, _arg);
  }

  public double GetZLengthMinValue() {
    auto ret = vtkd_im.vtkCubeSource_GetZLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetZLengthMaxValue() {
    auto ret = vtkd_im.vtkCubeSource_GetZLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetZLength() {
    auto ret = vtkd_im.vtkCubeSource_GetZLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCubeSource_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeSource_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkCubeSource_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkCubeSource_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetBounds(double xMin, double xMax, double yMin, double yMax, double zMin, double zMax) {
    vtkd_im.vtkCubeSource_SetBounds__SWIG_0(cast(void*)swigCPtr, xMin, xMax, yMin, yMax, zMin, zMax);
  }

  public void SetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkCubeSource_SetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }
}
