/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkArrayWriter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStdString;
static import vtkArray;
static import vtkWriter;

class vtkArrayWriter : vtkWriter.vtkWriter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkArrayWriter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkArrayWriter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkArrayWriter New() {
    void* cPtr = vtkd_im.vtkArrayWriter_New();
    vtkArrayWriter ret = (cPtr is null) ? null : new vtkArrayWriter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkArrayWriter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkArrayWriter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkArrayWriter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkArrayWriter ret = (cPtr is null) ? null : new vtkArrayWriter(cPtr, false);
    return ret;
  }

  public vtkArrayWriter NewInstance() const {
    void* cPtr = vtkd_im.vtkArrayWriter_NewInstance(cast(void*)swigCPtr);
    vtkArrayWriter ret = (cPtr is null) ? null : new vtkArrayWriter(cPtr, false);
    return ret;
  }

  alias vtkWriter.vtkWriter.NewInstance NewInstance;

  public void SetFileName(string _arg) {
    vtkd_im.vtkArrayWriter_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkArrayWriter_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetBinary(int _arg) {
    vtkd_im.vtkArrayWriter_SetBinary(cast(void*)swigCPtr, _arg);
  }

  public int GetBinary() {
    auto ret = vtkd_im.vtkArrayWriter_GetBinary(cast(void*)swigCPtr);
    return ret;
  }

  public void BinaryOn() {
    vtkd_im.vtkArrayWriter_BinaryOn(cast(void*)swigCPtr);
  }

  public void BinaryOff() {
    vtkd_im.vtkArrayWriter_BinaryOff(cast(void*)swigCPtr);
  }

  public vtkStdString.vtkStdString GetOutputString() {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkArrayWriter_GetOutputString(cast(void*)swigCPtr), true);
    return ret;
  }

  public void SetWriteToOutputString(bool _arg) {
    vtkd_im.vtkArrayWriter_SetWriteToOutputString(cast(void*)swigCPtr, _arg);
  }

  public bool GetWriteToOutputString() {
    bool ret = vtkd_im.vtkArrayWriter_GetWriteToOutputString(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void WriteToOutputStringOn() {
    vtkd_im.vtkArrayWriter_WriteToOutputStringOn(cast(void*)swigCPtr);
  }

  public void WriteToOutputStringOff() {
    vtkd_im.vtkArrayWriter_WriteToOutputStringOff(cast(void*)swigCPtr);
  }

  public override int Write() {
    auto ret = vtkd_im.vtkArrayWriter_Write__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public bool Write(vtkStdString.vtkStdString FileName, bool WriteBinary) {
    bool ret = vtkd_im.vtkArrayWriter_Write__SWIG_1(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(FileName), WriteBinary) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Write(vtkStdString.vtkStdString FileName) {
    bool ret = vtkd_im.vtkArrayWriter_Write__SWIG_2(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(FileName)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Write(vtkArray.vtkArray array, vtkStdString.vtkStdString file_name, bool WriteBinary) {
    bool ret = vtkd_im.vtkArrayWriter_Write__SWIG_3(vtkArray.vtkArray.swigGetCPtr(array), vtkStdString.vtkStdString.swigGetCPtr(file_name), WriteBinary) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public static bool Write(vtkArray.vtkArray array, vtkStdString.vtkStdString file_name) {
    bool ret = vtkd_im.vtkArrayWriter_Write__SWIG_4(vtkArray.vtkArray.swigGetCPtr(array), vtkStdString.vtkStdString.swigGetCPtr(file_name)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkStdString.vtkStdString Write(bool WriteBinary) {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkArrayWriter_Write__SWIG_5(cast(void*)swigCPtr, WriteBinary), true);
    return ret;
  }

  public static vtkStdString.vtkStdString Write(vtkArray.vtkArray array, bool WriteBinary) {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkArrayWriter_Write__SWIG_6(vtkArray.vtkArray.swigGetCPtr(array), WriteBinary), true);
    return ret;
  }

  public static vtkStdString.vtkStdString Write(vtkArray.vtkArray array) {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkArrayWriter_Write__SWIG_7(vtkArray.vtkArray.swigGetCPtr(array)), true);
    return ret;
  }
}
