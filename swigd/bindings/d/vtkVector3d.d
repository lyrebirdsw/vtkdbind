/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVector3d;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkVector3dNT;

class vtkVector3d : vtkVector3dNT.vtkVector3dNT {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkVector3d_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkVector3d obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkVector3d(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkVector3d__SWIG_0(), true);
  }

  public this(double x, double y, double z) {
    this(vtkd_im.new_vtkVector3d__SWIG_1(x, y, z), true);
  }

  public this(double scalar) {
    this(vtkd_im.new_vtkVector3d__SWIG_2(scalar), true);
  }

  public this(double* init) {
    this(vtkd_im.new_vtkVector3d__SWIG_3(cast(void*)init), true);
  }

  public vtkVector3d Normalized() {
    vtkVector3d ret = new vtkVector3d(vtkd_im.vtkVector3d_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public vtkVector3d Cross(vtkVector3d other) {
    vtkVector3d ret = new vtkVector3d(vtkd_im.vtkVector3d_Cross(cast(void*)swigCPtr, vtkVector3d.swigGetCPtr(other)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkVector3dNT.vtkVector3dNT.Cross Cross;
}
