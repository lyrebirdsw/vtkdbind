/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVolume16Reader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkTransform;
static import vtkVolumeReader;

class vtkVolume16Reader : vtkVolumeReader.vtkVolumeReader {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkVolume16Reader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkVolume16Reader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkVolume16Reader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkVolume16Reader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkVolume16Reader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkVolume16Reader ret = (cPtr is null) ? null : new vtkVolume16Reader(cPtr, false);
    return ret;
  }

  public vtkVolume16Reader NewInstance() const {
    void* cPtr = vtkd_im.vtkVolume16Reader_NewInstance(cast(void*)swigCPtr);
    vtkVolume16Reader ret = (cPtr is null) ? null : new vtkVolume16Reader(cPtr, false);
    return ret;
  }

  alias vtkVolumeReader.vtkVolumeReader.NewInstance NewInstance;

  public static vtkVolume16Reader New() {
    void* cPtr = vtkd_im.vtkVolume16Reader_New();
    vtkVolume16Reader ret = (cPtr is null) ? null : new vtkVolume16Reader(cPtr, false);
    return ret;
  }

  public void SetDataDimensions(int _arg1, int _arg2) {
    vtkd_im.vtkVolume16Reader_SetDataDimensions__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetDataDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVolume16Reader_SetDataDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetDataDimensions() {
    auto ret = cast(int*)vtkd_im.vtkVolume16Reader_GetDataDimensions__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkVolume16Reader_GetDataDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public void SetDataMask(ushort _arg) {
    vtkd_im.vtkVolume16Reader_SetDataMask(cast(void*)swigCPtr, _arg);
  }

  public ushort GetDataMask() {
    auto ret = vtkd_im.vtkVolume16Reader_GetDataMask(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHeaderSize(int _arg) {
    vtkd_im.vtkVolume16Reader_SetHeaderSize(cast(void*)swigCPtr, _arg);
  }

  public int GetHeaderSize() {
    auto ret = vtkd_im.vtkVolume16Reader_GetHeaderSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataByteOrderToBigEndian() {
    vtkd_im.vtkVolume16Reader_SetDataByteOrderToBigEndian(cast(void*)swigCPtr);
  }

  public void SetDataByteOrderToLittleEndian() {
    vtkd_im.vtkVolume16Reader_SetDataByteOrderToLittleEndian(cast(void*)swigCPtr);
  }

  public int GetDataByteOrder() {
    auto ret = vtkd_im.vtkVolume16Reader_GetDataByteOrder(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataByteOrder(int arg0) {
    vtkd_im.vtkVolume16Reader_SetDataByteOrder(cast(void*)swigCPtr, arg0);
  }

  public string GetDataByteOrderAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkVolume16Reader_GetDataByteOrderAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetSwapBytes(int _arg) {
    vtkd_im.vtkVolume16Reader_SetSwapBytes(cast(void*)swigCPtr, _arg);
  }

  public int GetSwapBytes() {
    auto ret = vtkd_im.vtkVolume16Reader_GetSwapBytes(cast(void*)swigCPtr);
    return ret;
  }

  public void SwapBytesOn() {
    vtkd_im.vtkVolume16Reader_SwapBytesOn(cast(void*)swigCPtr);
  }

  public void SwapBytesOff() {
    vtkd_im.vtkVolume16Reader_SwapBytesOff(cast(void*)swigCPtr);
  }

  public void SetTransform(vtkTransform.vtkTransform arg0) {
    vtkd_im.vtkVolume16Reader_SetTransform(cast(void*)swigCPtr, vtkTransform.vtkTransform.swigGetCPtr(arg0));
  }

  public vtkTransform.vtkTransform GetTransform() {
    void* cPtr = vtkd_im.vtkVolume16Reader_GetTransform(cast(void*)swigCPtr);
    vtkTransform.vtkTransform ret = (cPtr is null) ? null : new vtkTransform.vtkTransform(cPtr, false);
    return ret;
  }
}
