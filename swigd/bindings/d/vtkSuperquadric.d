/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSuperquadric;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkImplicitFunction;

class vtkSuperquadric : vtkImplicitFunction.vtkImplicitFunction {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSuperquadric_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSuperquadric obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSuperquadric New() {
    void* cPtr = vtkd_im.vtkSuperquadric_New();
    vtkSuperquadric ret = (cPtr is null) ? null : new vtkSuperquadric(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSuperquadric_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSuperquadric SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSuperquadric_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSuperquadric ret = (cPtr is null) ? null : new vtkSuperquadric(cPtr, false);
    return ret;
  }

  public vtkSuperquadric NewInstance() const {
    void* cPtr = vtkd_im.vtkSuperquadric_NewInstance(cast(void*)swigCPtr);
    vtkSuperquadric ret = (cPtr is null) ? null : new vtkSuperquadric(cPtr, false);
    return ret;
  }

  alias vtkImplicitFunction.vtkImplicitFunction.NewInstance NewInstance;

  public override double EvaluateFunction(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkSuperquadric_EvaluateFunction__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public double EvaluateFunction(double x, double y, double z) {
    auto ret = vtkd_im.vtkSuperquadric_EvaluateFunction__SWIG_1(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  alias vtkImplicitFunction.vtkImplicitFunction.EvaluateFunction EvaluateFunction;

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkSuperquadric_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkSuperquadric_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkSuperquadric_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkSuperquadric_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetScale(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkSuperquadric_SetScale__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetScale(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkSuperquadric_SetScale__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetScale() {
    auto ret = cast(double*)vtkd_im.vtkSuperquadric_GetScale__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScale(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkSuperquadric_GetScale__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double GetThickness() {
    auto ret = vtkd_im.vtkSuperquadric_GetThickness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThickness(double _arg) {
    vtkd_im.vtkSuperquadric_SetThickness(cast(void*)swigCPtr, _arg);
  }

  public double GetThicknessMinValue() {
    auto ret = vtkd_im.vtkSuperquadric_GetThicknessMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetThicknessMaxValue() {
    auto ret = vtkd_im.vtkSuperquadric_GetThicknessMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetPhiRoundness() {
    auto ret = vtkd_im.vtkSuperquadric_GetPhiRoundness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPhiRoundness(double e) {
    vtkd_im.vtkSuperquadric_SetPhiRoundness(cast(void*)swigCPtr, e);
  }

  public double GetThetaRoundness() {
    auto ret = vtkd_im.vtkSuperquadric_GetThetaRoundness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThetaRoundness(double e) {
    vtkd_im.vtkSuperquadric_SetThetaRoundness(cast(void*)swigCPtr, e);
  }

  public void SetSize(double _arg) {
    vtkd_im.vtkSuperquadric_SetSize(cast(void*)swigCPtr, _arg);
  }

  public double GetSize() {
    auto ret = vtkd_im.vtkSuperquadric_GetSize(cast(void*)swigCPtr);
    return ret;
  }

  public void ToroidalOn() {
    vtkd_im.vtkSuperquadric_ToroidalOn(cast(void*)swigCPtr);
  }

  public void ToroidalOff() {
    vtkd_im.vtkSuperquadric_ToroidalOff(cast(void*)swigCPtr);
  }

  public int GetToroidal() {
    auto ret = vtkd_im.vtkSuperquadric_GetToroidal(cast(void*)swigCPtr);
    return ret;
  }

  public void SetToroidal(int _arg) {
    vtkd_im.vtkSuperquadric_SetToroidal(cast(void*)swigCPtr, _arg);
  }
}
