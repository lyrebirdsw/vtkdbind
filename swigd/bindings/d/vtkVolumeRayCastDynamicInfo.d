/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVolumeRayCastDynamicInfo;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_float;

class vtkVolumeRayCastDynamicInfo {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkVolumeRayCastDynamicInfo obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkVolumeRayCastDynamicInfo(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void Color(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_Color_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float Color() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastDynamicInfo_Color_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void ScalarValue(float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_ScalarValue_set(cast(void*)swigCPtr, value);
  }

  public float ScalarValue() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastDynamicInfo_ScalarValue_get(cast(void*)swigCPtr);
    return ret;
  }

  public void TransformedStart(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedStart_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float TransformedStart() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedStart_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void TransformedEnd(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedEnd_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float TransformedEnd() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedEnd_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void TransformedDirection(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedDirection_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float TransformedDirection() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedDirection_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void TransformedIncrement(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedIncrement_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float TransformedIncrement() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastDynamicInfo_TransformedIncrement_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void NumberOfStepsToTake(int value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_NumberOfStepsToTake_set(cast(void*)swigCPtr, value);
  }

  public int NumberOfStepsToTake() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastDynamicInfo_NumberOfStepsToTake_get(cast(void*)swigCPtr);
    return ret;
  }

  public void NumberOfStepsTaken(int value) @property {
    vtkd_im.vtkVolumeRayCastDynamicInfo_NumberOfStepsTaken_set(cast(void*)swigCPtr, value);
  }

  public int NumberOfStepsTaken() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastDynamicInfo_NumberOfStepsTaken_get(cast(void*)swigCPtr);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkVolumeRayCastDynamicInfo(), true);
  }
}
