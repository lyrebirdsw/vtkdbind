/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCutMaterial;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkCutMaterial : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCutMaterial_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCutMaterial obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCutMaterial_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCutMaterial SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCutMaterial_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCutMaterial ret = (cPtr is null) ? null : new vtkCutMaterial(cPtr, false);
    return ret;
  }

  public vtkCutMaterial NewInstance() const {
    void* cPtr = vtkd_im.vtkCutMaterial_NewInstance(cast(void*)swigCPtr);
    vtkCutMaterial ret = (cPtr is null) ? null : new vtkCutMaterial(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkCutMaterial New() {
    void* cPtr = vtkd_im.vtkCutMaterial_New();
    vtkCutMaterial ret = (cPtr is null) ? null : new vtkCutMaterial(cPtr, false);
    return ret;
  }

  public void SetMaterialArrayName(string _arg) {
    vtkd_im.vtkCutMaterial_SetMaterialArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetMaterialArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkCutMaterial_GetMaterialArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetMaterial(int _arg) {
    vtkd_im.vtkCutMaterial_SetMaterial(cast(void*)swigCPtr, _arg);
  }

  public int GetMaterial() {
    auto ret = vtkd_im.vtkCutMaterial_GetMaterial(cast(void*)swigCPtr);
    return ret;
  }

  public void SetArrayName(string _arg) {
    vtkd_im.vtkCutMaterial_SetArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkCutMaterial_GetArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetUpVector(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCutMaterial_SetUpVector__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetUpVector(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCutMaterial_SetUpVector__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetUpVector() {
    auto ret = cast(double*)vtkd_im.vtkCutMaterial_GetUpVector__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetUpVector(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCutMaterial_GetUpVector__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetUpVector(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCutMaterial_GetUpVector__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetMaximumPoint() {
    auto ret = cast(double*)vtkd_im.vtkCutMaterial_GetMaximumPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetMaximumPoint(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCutMaterial_GetMaximumPoint__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetMaximumPoint(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCutMaterial_GetMaximumPoint__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenterPoint() {
    auto ret = cast(double*)vtkd_im.vtkCutMaterial_GetCenterPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenterPoint(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCutMaterial_GetCenterPoint__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCenterPoint(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCutMaterial_GetCenterPoint__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetNormal() {
    auto ret = cast(double*)vtkd_im.vtkCutMaterial_GetNormal__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetNormal(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCutMaterial_GetNormal__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetNormal(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCutMaterial_GetNormal__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }
}
