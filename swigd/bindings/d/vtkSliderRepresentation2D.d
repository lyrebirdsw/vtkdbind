/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSliderRepresentation2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCoordinate;
static import vtkProperty2D;
static import vtkTextProperty;
static import SWIGTYPE_p_double;
static import vtkSliderRepresentation;

class vtkSliderRepresentation2D : vtkSliderRepresentation.vtkSliderRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSliderRepresentation2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSliderRepresentation2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSliderRepresentation2D New() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_New();
    vtkSliderRepresentation2D ret = (cPtr is null) ? null : new vtkSliderRepresentation2D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSliderRepresentation2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSliderRepresentation2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSliderRepresentation2D ret = (cPtr is null) ? null : new vtkSliderRepresentation2D(cPtr, false);
    return ret;
  }

  public vtkSliderRepresentation2D NewInstance() const {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_NewInstance(cast(void*)swigCPtr);
    vtkSliderRepresentation2D ret = (cPtr is null) ? null : new vtkSliderRepresentation2D(cPtr, false);
    return ret;
  }

  alias vtkSliderRepresentation.vtkSliderRepresentation.NewInstance NewInstance;

  public vtkCoordinate.vtkCoordinate GetPoint1Coordinate() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetPoint1Coordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public vtkCoordinate.vtkCoordinate GetPoint2Coordinate() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetPoint2Coordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetSliderProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetSliderProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetTubeProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetTubeProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetCapProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetCapProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetSelectedProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetSelectedProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetLabelProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetLabelProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetTitleProperty() {
    void* cPtr = vtkd_im.vtkSliderRepresentation2D_GetTitleProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkSliderRepresentation2D_PlaceWidget(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }
}
