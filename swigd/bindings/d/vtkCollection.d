/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCollection;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;
static import vtkCollectionIterator;

class vtkCollection : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCollection_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCollection obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCollection_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCollection SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCollection_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCollection ret = (cPtr is null) ? null : new vtkCollection(cPtr, false);
    return ret;
  }

  public vtkCollection NewInstance() const {
    void* cPtr = vtkd_im.vtkCollection_NewInstance(cast(void*)swigCPtr);
    vtkCollection ret = (cPtr is null) ? null : new vtkCollection(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkCollection New() {
    void* cPtr = vtkd_im.vtkCollection_New();
    vtkCollection ret = (cPtr is null) ? null : new vtkCollection(cPtr, false);
    return ret;
  }

  public void AddItem(vtkObject.vtkObject arg0) {
    vtkd_im.vtkCollection_AddItem(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(arg0));
  }

  public void InsertItem(int i, vtkObject.vtkObject arg1) {
    vtkd_im.vtkCollection_InsertItem(cast(void*)swigCPtr, i, vtkObject.vtkObject.swigGetCPtr(arg1));
  }

  public void ReplaceItem(int i, vtkObject.vtkObject arg1) {
    vtkd_im.vtkCollection_ReplaceItem(cast(void*)swigCPtr, i, vtkObject.vtkObject.swigGetCPtr(arg1));
  }

  public void RemoveItem(int i) {
    vtkd_im.vtkCollection_RemoveItem__SWIG_0(cast(void*)swigCPtr, i);
  }

  public void RemoveItem(vtkObject.vtkObject arg0) {
    vtkd_im.vtkCollection_RemoveItem__SWIG_1(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(arg0));
  }

  public void RemoveAllItems() {
    vtkd_im.vtkCollection_RemoveAllItems(cast(void*)swigCPtr);
  }

  public int IsItemPresent(vtkObject.vtkObject a) {
    auto ret = vtkd_im.vtkCollection_IsItemPresent(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(a));
    return ret;
  }

  public int GetNumberOfItems() {
    auto ret = vtkd_im.vtkCollection_GetNumberOfItems(cast(void*)swigCPtr);
    return ret;
  }

  public void InitTraversal() {
    vtkd_im.vtkCollection_InitTraversal(cast(void*)swigCPtr);
  }

  public vtkObject.vtkObject GetNextItemAsObject() {
    void* cPtr = vtkd_im.vtkCollection_GetNextItemAsObject(cast(void*)swigCPtr);
    vtkObject.vtkObject ret = (cPtr is null) ? null : new vtkObject.vtkObject(cPtr, false);
    return ret;
  }

  public vtkObject.vtkObject GetItemAsObject(int i) {
    void* cPtr = vtkd_im.vtkCollection_GetItemAsObject(cast(void*)swigCPtr, i);
    vtkObject.vtkObject ret = (cPtr is null) ? null : new vtkObject.vtkObject(cPtr, false);
    return ret;
  }

  public vtkCollectionIterator.vtkCollectionIterator NewIterator() {
    void* cPtr = vtkd_im.vtkCollection_NewIterator(cast(void*)swigCPtr);
    vtkCollectionIterator.vtkCollectionIterator ret = (cPtr is null) ? null : new vtkCollectionIterator.vtkCollectionIterator(cPtr, false);
    return ret;
  }
}
