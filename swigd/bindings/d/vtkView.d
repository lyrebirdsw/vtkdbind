/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataRepresentation;
static import vtkAlgorithmOutput;
static import vtkDataObject;
static import vtkViewTheme;
static import vtkObject;

class vtkView : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkView(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkView New() {
    void* cPtr = vtkd_im.vtkView_New();
    vtkView ret = (cPtr is null) ? null : new vtkView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkView ret = (cPtr is null) ? null : new vtkView(cPtr, false);
    return ret;
  }

  public vtkView NewInstance() const {
    void* cPtr = vtkd_im.vtkView_NewInstance(cast(void*)swigCPtr);
    vtkView ret = (cPtr is null) ? null : new vtkView(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void AddRepresentation(vtkDataRepresentation.vtkDataRepresentation rep) {
    vtkd_im.vtkView_AddRepresentation(cast(void*)swigCPtr, vtkDataRepresentation.vtkDataRepresentation.swigGetCPtr(rep));
  }

  public void SetRepresentation(vtkDataRepresentation.vtkDataRepresentation rep) {
    vtkd_im.vtkView_SetRepresentation(cast(void*)swigCPtr, vtkDataRepresentation.vtkDataRepresentation.swigGetCPtr(rep));
  }

  public vtkDataRepresentation.vtkDataRepresentation AddRepresentationFromInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    void* cPtr = vtkd_im.vtkView_AddRepresentationFromInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation SetRepresentationFromInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    void* cPtr = vtkd_im.vtkView_SetRepresentationFromInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation AddRepresentationFromInput(vtkDataObject.vtkDataObject input) {
    void* cPtr = vtkd_im.vtkView_AddRepresentationFromInput(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(input));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation SetRepresentationFromInput(vtkDataObject.vtkDataObject input) {
    void* cPtr = vtkd_im.vtkView_SetRepresentationFromInput(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(input));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public void RemoveRepresentation(vtkDataRepresentation.vtkDataRepresentation rep) {
    vtkd_im.vtkView_RemoveRepresentation__SWIG_0(cast(void*)swigCPtr, vtkDataRepresentation.vtkDataRepresentation.swigGetCPtr(rep));
  }

  public void RemoveRepresentation(vtkAlgorithmOutput.vtkAlgorithmOutput rep) {
    vtkd_im.vtkView_RemoveRepresentation__SWIG_1(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(rep));
  }

  public void RemoveAllRepresentations() {
    vtkd_im.vtkView_RemoveAllRepresentations(cast(void*)swigCPtr);
  }

  public int GetNumberOfRepresentations() {
    auto ret = vtkd_im.vtkView_GetNumberOfRepresentations(cast(void*)swigCPtr);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation GetRepresentation(int index) {
    void* cPtr = vtkd_im.vtkView_GetRepresentation__SWIG_0(cast(void*)swigCPtr, index);
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation GetRepresentation() {
    void* cPtr = vtkd_im.vtkView_GetRepresentation__SWIG_1(cast(void*)swigCPtr);
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public bool IsRepresentationPresent(vtkDataRepresentation.vtkDataRepresentation rep) {
    bool ret = vtkd_im.vtkView_IsRepresentationPresent(cast(void*)swigCPtr, vtkDataRepresentation.vtkDataRepresentation.swigGetCPtr(rep)) ? true : false;
    return ret;
  }

  public void Update() {
    vtkd_im.vtkView_Update(cast(void*)swigCPtr);
  }

  public void ApplyViewTheme(vtkViewTheme.vtkViewTheme arg0) {
    vtkd_im.vtkView_ApplyViewTheme(cast(void*)swigCPtr, vtkViewTheme.vtkViewTheme.swigGetCPtr(arg0));
  }

  public void RegisterProgress(vtkObject.vtkObject algorithm, string message) {
    vtkd_im.vtkView_RegisterProgress__SWIG_0(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(algorithm), (message ? std.string.toStringz(message) : null));
  }

  public void RegisterProgress(vtkObject.vtkObject algorithm) {
    vtkd_im.vtkView_RegisterProgress__SWIG_1(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(algorithm));
  }

  public void UnRegisterProgress(vtkObject.vtkObject algorithm) {
    vtkd_im.vtkView_UnRegisterProgress(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(algorithm));
  }

  public this() {
    this(vtkd_im.new_vtkView(), true);
  }
}
