/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRectilinearGrid;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkCell;
static import vtkGenericCell;
static import vtkPoints;
static import SWIGTYPE_p_int;
static import vtkDataArray;
static import vtkDataSet;

class vtkRectilinearGrid : vtkDataSet.vtkDataSet {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRectilinearGrid_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRectilinearGrid obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkRectilinearGrid New() {
    void* cPtr = vtkd_im.vtkRectilinearGrid_New();
    vtkRectilinearGrid ret = (cPtr is null) ? null : new vtkRectilinearGrid(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRectilinearGrid_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRectilinearGrid SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRectilinearGrid_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRectilinearGrid ret = (cPtr is null) ? null : new vtkRectilinearGrid(cPtr, false);
    return ret;
  }

  public vtkRectilinearGrid NewInstance() const {
    void* cPtr = vtkd_im.vtkRectilinearGrid_NewInstance(cast(void*)swigCPtr);
    vtkRectilinearGrid ret = (cPtr is null) ? null : new vtkRectilinearGrid(cPtr, false);
    return ret;
  }

  alias vtkDataSet.vtkDataSet.NewInstance NewInstance;

  public override double* GetPoint(long ptId) {
    auto ret = cast(double*)vtkd_im.vtkRectilinearGrid_GetPoint__SWIG_0(cast(void*)swigCPtr, ptId);
    return ret;
  }

  public override void GetPoint(long id, SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkRectilinearGrid_GetPoint__SWIG_1(cast(void*)swigCPtr, id, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public override vtkCell.vtkCell GetCell(long cellId) {
    void* cPtr = vtkd_im.vtkRectilinearGrid_GetCell__SWIG_0(cast(void*)swigCPtr, cellId);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }

  public override void GetCell(long cellId, vtkGenericCell.vtkGenericCell cell) {
    vtkd_im.vtkRectilinearGrid_GetCell__SWIG_1(cast(void*)swigCPtr, cellId, vtkGenericCell.vtkGenericCell.swigGetCPtr(cell));
  }

  public long FindPoint(double x, double y, double z) {
    auto ret = vtkd_im.vtkRectilinearGrid_FindPoint__SWIG_0(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  public override long FindPoint(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkRectilinearGrid_FindPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public override long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkRectilinearGrid_FindCell__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public override long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, vtkGenericCell.vtkGenericCell gencell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkRectilinearGrid_FindCell__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), vtkGenericCell.vtkGenericCell.swigGetCPtr(gencell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void GetPoints(vtkPoints.vtkPoints pnts) {
    vtkd_im.vtkRectilinearGrid_GetPoints(cast(void*)swigCPtr, vtkPoints.vtkPoints.swigGetCPtr(pnts));
  }

  public void SetDimensions(int i, int j, int k) {
    vtkd_im.vtkRectilinearGrid_SetDimensions__SWIG_0(cast(void*)swigCPtr, i, j, k);
  }

  public void SetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int dim) {
    vtkd_im.vtkRectilinearGrid_SetDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dim));
  }

  public int* GetDimensions() {
    auto ret = cast(int*)vtkd_im.vtkRectilinearGrid_GetDimensions__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkRectilinearGrid_GetDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public int GetDataDimension() {
    auto ret = vtkd_im.vtkRectilinearGrid_GetDataDimension(cast(void*)swigCPtr);
    return ret;
  }

  public int ComputeStructuredCoordinates(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_int.SWIGTYPE_p_int ijk, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    auto ret = vtkd_im.vtkRectilinearGrid_ComputeStructuredCoordinates(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ijk), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
    return ret;
  }

  public long ComputePointId(SWIGTYPE_p_int.SWIGTYPE_p_int ijk) {
    auto ret = vtkd_im.vtkRectilinearGrid_ComputePointId(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ijk));
    return ret;
  }

  public long ComputeCellId(SWIGTYPE_p_int.SWIGTYPE_p_int ijk) {
    auto ret = vtkd_im.vtkRectilinearGrid_ComputeCellId(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ijk));
    return ret;
  }

  public void GetPoint(int i, int j, int k, SWIGTYPE_p_double.SWIGTYPE_p_double p) {
    vtkd_im.vtkRectilinearGrid_GetPoint__SWIG_2(cast(void*)swigCPtr, i, j, k, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(p));
  }

  alias vtkDataSet.vtkDataSet.GetPoint GetPoint;

  public void SetXCoordinates(vtkDataArray.vtkDataArray arg0) {
    vtkd_im.vtkRectilinearGrid_SetXCoordinates(cast(void*)swigCPtr, vtkDataArray.vtkDataArray.swigGetCPtr(arg0));
  }

  public vtkDataArray.vtkDataArray GetXCoordinates() {
    void* cPtr = vtkd_im.vtkRectilinearGrid_GetXCoordinates(cast(void*)swigCPtr);
    vtkDataArray.vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray.vtkDataArray(cPtr, false);
    return ret;
  }

  public void SetYCoordinates(vtkDataArray.vtkDataArray arg0) {
    vtkd_im.vtkRectilinearGrid_SetYCoordinates(cast(void*)swigCPtr, vtkDataArray.vtkDataArray.swigGetCPtr(arg0));
  }

  public vtkDataArray.vtkDataArray GetYCoordinates() {
    void* cPtr = vtkd_im.vtkRectilinearGrid_GetYCoordinates(cast(void*)swigCPtr);
    vtkDataArray.vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray.vtkDataArray(cPtr, false);
    return ret;
  }

  public void SetZCoordinates(vtkDataArray.vtkDataArray arg0) {
    vtkd_im.vtkRectilinearGrid_SetZCoordinates(cast(void*)swigCPtr, vtkDataArray.vtkDataArray.swigGetCPtr(arg0));
  }

  public vtkDataArray.vtkDataArray GetZCoordinates() {
    void* cPtr = vtkd_im.vtkRectilinearGrid_GetZCoordinates(cast(void*)swigCPtr);
    vtkDataArray.vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray.vtkDataArray(cPtr, false);
    return ret;
  }

  public void SetExtent(SWIGTYPE_p_int.SWIGTYPE_p_int extent) {
    vtkd_im.vtkRectilinearGrid_SetExtent__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(extent));
  }

  public void SetExtent(int x1, int x2, int y1, int y2, int z1, int z2) {
    vtkd_im.vtkRectilinearGrid_SetExtent__SWIG_1(cast(void*)swigCPtr, x1, x2, y1, y2, z1, z2);
  }

  public int* GetExtent() {
    auto ret = cast(int*)vtkd_im.vtkRectilinearGrid_GetExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkRectilinearGrid_GetExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkRectilinearGrid_GetExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }
}
