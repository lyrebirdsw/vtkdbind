/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataSetSurfaceFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSet;
static import vtkPolyData;
static import SWIGTYPE_p_bool;
static import vtkPolyDataAlgorithm;

class vtkDataSetSurfaceFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataSetSurfaceFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataSetSurfaceFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDataSetSurfaceFilter New() {
    void* cPtr = vtkd_im.vtkDataSetSurfaceFilter_New();
    vtkDataSetSurfaceFilter ret = (cPtr is null) ? null : new vtkDataSetSurfaceFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataSetSurfaceFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataSetSurfaceFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataSetSurfaceFilter ret = (cPtr is null) ? null : new vtkDataSetSurfaceFilter(cPtr, false);
    return ret;
  }

  public vtkDataSetSurfaceFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkDataSetSurfaceFilter_NewInstance(cast(void*)swigCPtr);
    vtkDataSetSurfaceFilter ret = (cPtr is null) ? null : new vtkDataSetSurfaceFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetUseStrips(int _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetUseStrips(cast(void*)swigCPtr, _arg);
  }

  public int GetUseStrips() {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_GetUseStrips(cast(void*)swigCPtr);
    return ret;
  }

  public void UseStripsOn() {
    vtkd_im.vtkDataSetSurfaceFilter_UseStripsOn(cast(void*)swigCPtr);
  }

  public void UseStripsOff() {
    vtkd_im.vtkDataSetSurfaceFilter_UseStripsOff(cast(void*)swigCPtr);
  }

  public void SetPieceInvariant(int _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetPieceInvariant(cast(void*)swigCPtr, _arg);
  }

  public int GetPieceInvariant() {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_GetPieceInvariant(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPassThroughCellIds(int _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetPassThroughCellIds(cast(void*)swigCPtr, _arg);
  }

  public int GetPassThroughCellIds() {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_GetPassThroughCellIds(cast(void*)swigCPtr);
    return ret;
  }

  public void PassThroughCellIdsOn() {
    vtkd_im.vtkDataSetSurfaceFilter_PassThroughCellIdsOn(cast(void*)swigCPtr);
  }

  public void PassThroughCellIdsOff() {
    vtkd_im.vtkDataSetSurfaceFilter_PassThroughCellIdsOff(cast(void*)swigCPtr);
  }

  public void SetPassThroughPointIds(int _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetPassThroughPointIds(cast(void*)swigCPtr, _arg);
  }

  public int GetPassThroughPointIds() {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_GetPassThroughPointIds(cast(void*)swigCPtr);
    return ret;
  }

  public void PassThroughPointIdsOn() {
    vtkd_im.vtkDataSetSurfaceFilter_PassThroughPointIdsOn(cast(void*)swigCPtr);
  }

  public void PassThroughPointIdsOff() {
    vtkd_im.vtkDataSetSurfaceFilter_PassThroughPointIdsOff(cast(void*)swigCPtr);
  }

  public void SetOriginalCellIdsName(string _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetOriginalCellIdsName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetOriginalCellIdsName() {
    string ret = std.conv.to!string(vtkd_im.vtkDataSetSurfaceFilter_GetOriginalCellIdsName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetOriginalPointIdsName(string _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetOriginalPointIdsName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetOriginalPointIdsName() {
    string ret = std.conv.to!string(vtkd_im.vtkDataSetSurfaceFilter_GetOriginalPointIdsName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetNonlinearSubdivisionLevel(int _arg) {
    vtkd_im.vtkDataSetSurfaceFilter_SetNonlinearSubdivisionLevel(cast(void*)swigCPtr, _arg);
  }

  public int GetNonlinearSubdivisionLevel() {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_GetNonlinearSubdivisionLevel(cast(void*)swigCPtr);
    return ret;
  }

  public int StructuredExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output, long* ext, long* wholeExt) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_StructuredExecute__SWIG_0(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output), cast(void*)ext, cast(void*)wholeExt);
    return ret;
  }

  public int StructuredExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output, int* ext32, int* wholeExt32) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_StructuredExecute__SWIG_1(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output), cast(void*)ext32, cast(void*)wholeExt32);
    return ret;
  }

  public int UnstructuredGridExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output, int updateghostlevel) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_UnstructuredGridExecute(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output), updateghostlevel);
    return ret;
  }

  public int DataSetExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_DataSetExecute(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output));
    return ret;
  }

  public int UniformGridExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output, long* ext, long* wholeExt, SWIGTYPE_p_bool.SWIGTYPE_p_bool extractface) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_UniformGridExecute__SWIG_0(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output), cast(void*)ext, cast(void*)wholeExt, SWIGTYPE_p_bool.SWIGTYPE_p_bool.swigGetCPtr(extractface));
    return ret;
  }

  public int UniformGridExecute(vtkDataSet.vtkDataSet input, vtkPolyData.vtkPolyData output, int* ext32, int* wholeExt32, SWIGTYPE_p_bool.SWIGTYPE_p_bool extractface) {
    auto ret = vtkd_im.vtkDataSetSurfaceFilter_UniformGridExecute__SWIG_1(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input), vtkPolyData.vtkPolyData.swigGetCPtr(output), cast(void*)ext32, cast(void*)wholeExt32, SWIGTYPE_p_bool.SWIGTYPE_p_bool.swigGetCPtr(extractface));
    return ret;
  }
}
