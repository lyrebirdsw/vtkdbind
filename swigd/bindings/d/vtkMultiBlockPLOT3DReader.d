/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMultiBlockPLOT3DReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkMultiBlockDataSetAlgorithm;

class vtkMultiBlockPLOT3DReader : vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMultiBlockPLOT3DReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMultiBlockPLOT3DReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkMultiBlockPLOT3DReader New() {
    void* cPtr = vtkd_im.vtkMultiBlockPLOT3DReader_New();
    vtkMultiBlockPLOT3DReader ret = (cPtr is null) ? null : new vtkMultiBlockPLOT3DReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMultiBlockPLOT3DReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMultiBlockPLOT3DReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMultiBlockPLOT3DReader ret = (cPtr is null) ? null : new vtkMultiBlockPLOT3DReader(cPtr, false);
    return ret;
  }

  public vtkMultiBlockPLOT3DReader NewInstance() const {
    void* cPtr = vtkd_im.vtkMultiBlockPLOT3DReader_NewInstance(cast(void*)swigCPtr);
    vtkMultiBlockPLOT3DReader ret = (cPtr is null) ? null : new vtkMultiBlockPLOT3DReader(cPtr, false);
    return ret;
  }

  alias vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm.NewInstance NewInstance;

  public void SetFileName(string name) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetFileName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkMultiBlockPLOT3DReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetXYZFileName(string arg0) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetXYZFileName(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public string GetXYZFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkMultiBlockPLOT3DReader_GetXYZFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetQFileName(string _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetQFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetQFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkMultiBlockPLOT3DReader_GetQFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFunctionFileName(string _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetFunctionFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFunctionFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkMultiBlockPLOT3DReader_GetFunctionFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetAutoDetectFormat(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetAutoDetectFormat(cast(void*)swigCPtr, _arg);
  }

  public int GetAutoDetectFormat() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetAutoDetectFormat(cast(void*)swigCPtr);
    return ret;
  }

  public void AutoDetectFormatOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_AutoDetectFormatOn(cast(void*)swigCPtr);
  }

  public void AutoDetectFormatOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_AutoDetectFormatOff(cast(void*)swigCPtr);
  }

  public void SetBinaryFile(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetBinaryFile(cast(void*)swigCPtr, _arg);
  }

  public int GetBinaryFile() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetBinaryFile(cast(void*)swigCPtr);
    return ret;
  }

  public void BinaryFileOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_BinaryFileOn(cast(void*)swigCPtr);
  }

  public void BinaryFileOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_BinaryFileOff(cast(void*)swigCPtr);
  }

  public void SetMultiGrid(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetMultiGrid(cast(void*)swigCPtr, _arg);
  }

  public int GetMultiGrid() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetMultiGrid(cast(void*)swigCPtr);
    return ret;
  }

  public void MultiGridOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_MultiGridOn(cast(void*)swigCPtr);
  }

  public void MultiGridOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_MultiGridOff(cast(void*)swigCPtr);
  }

  public void SetHasByteCount(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetHasByteCount(cast(void*)swigCPtr, _arg);
  }

  public int GetHasByteCount() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetHasByteCount(cast(void*)swigCPtr);
    return ret;
  }

  public void HasByteCountOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_HasByteCountOn(cast(void*)swigCPtr);
  }

  public void HasByteCountOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_HasByteCountOff(cast(void*)swigCPtr);
  }

  public void SetIBlanking(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetIBlanking(cast(void*)swigCPtr, _arg);
  }

  public int GetIBlanking() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetIBlanking(cast(void*)swigCPtr);
    return ret;
  }

  public void IBlankingOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_IBlankingOn(cast(void*)swigCPtr);
  }

  public void IBlankingOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_IBlankingOff(cast(void*)swigCPtr);
  }

  public void SetTwoDimensionalGeometry(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetTwoDimensionalGeometry(cast(void*)swigCPtr, _arg);
  }

  public int GetTwoDimensionalGeometry() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetTwoDimensionalGeometry(cast(void*)swigCPtr);
    return ret;
  }

  public void TwoDimensionalGeometryOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_TwoDimensionalGeometryOn(cast(void*)swigCPtr);
  }

  public void TwoDimensionalGeometryOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_TwoDimensionalGeometryOff(cast(void*)swigCPtr);
  }

  public void SetDoublePrecision(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetDoublePrecision(cast(void*)swigCPtr, _arg);
  }

  public int GetDoublePrecision() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetDoublePrecision(cast(void*)swigCPtr);
    return ret;
  }

  public void DoublePrecisionOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_DoublePrecisionOn(cast(void*)swigCPtr);
  }

  public void DoublePrecisionOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_DoublePrecisionOff(cast(void*)swigCPtr);
  }

  public void SetForceRead(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetForceRead(cast(void*)swigCPtr, _arg);
  }

  public int GetForceRead() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetForceRead(cast(void*)swigCPtr);
    return ret;
  }

  public void ForceReadOn() {
    vtkd_im.vtkMultiBlockPLOT3DReader_ForceReadOn(cast(void*)swigCPtr);
  }

  public void ForceReadOff() {
    vtkd_im.vtkMultiBlockPLOT3DReader_ForceReadOff(cast(void*)swigCPtr);
  }

  public void SetByteOrderToBigEndian() {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetByteOrderToBigEndian(cast(void*)swigCPtr);
  }

  public void SetByteOrderToLittleEndian() {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetByteOrderToLittleEndian(cast(void*)swigCPtr);
  }

  public void SetByteOrder(int _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetByteOrder(cast(void*)swigCPtr, _arg);
  }

  public int GetByteOrder() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetByteOrder(cast(void*)swigCPtr);
    return ret;
  }

  public string GetByteOrderAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkMultiBlockPLOT3DReader_GetByteOrderAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetR(double _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetR(cast(void*)swigCPtr, _arg);
  }

  public double GetR() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetR(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGamma(double _arg) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetGamma(cast(void*)swigCPtr, _arg);
  }

  public double GetGamma() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetGamma(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScalarFunctionNumber(int num) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetScalarFunctionNumber(cast(void*)swigCPtr, num);
  }

  public int GetScalarFunctionNumber() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetScalarFunctionNumber(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVectorFunctionNumber(int num) {
    vtkd_im.vtkMultiBlockPLOT3DReader_SetVectorFunctionNumber(cast(void*)swigCPtr, num);
  }

  public int GetVectorFunctionNumber() {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_GetVectorFunctionNumber(cast(void*)swigCPtr);
    return ret;
  }

  public void AddFunction(int functionNumber) {
    vtkd_im.vtkMultiBlockPLOT3DReader_AddFunction(cast(void*)swigCPtr, functionNumber);
  }

  public void RemoveFunction(int arg0) {
    vtkd_im.vtkMultiBlockPLOT3DReader_RemoveFunction(cast(void*)swigCPtr, arg0);
  }

  public void RemoveAllFunctions() {
    vtkd_im.vtkMultiBlockPLOT3DReader_RemoveAllFunctions(cast(void*)swigCPtr);
  }

  public int CanReadBinaryFile(string fname) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReader_CanReadBinaryFile(cast(void*)swigCPtr, (fname ? std.string.toStringz(fname) : null));
    return ret;
  }
}
