/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGL2PSExporter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPropCollection;
static import vtkExporter;

class vtkGL2PSExporter : vtkExporter.vtkExporter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGL2PSExporter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGL2PSExporter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGL2PSExporter New() {
    void* cPtr = vtkd_im.vtkGL2PSExporter_New();
    vtkGL2PSExporter ret = (cPtr is null) ? null : new vtkGL2PSExporter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGL2PSExporter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGL2PSExporter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGL2PSExporter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGL2PSExporter ret = (cPtr is null) ? null : new vtkGL2PSExporter(cPtr, false);
    return ret;
  }

  public vtkGL2PSExporter NewInstance() const {
    void* cPtr = vtkd_im.vtkGL2PSExporter_NewInstance(cast(void*)swigCPtr);
    vtkGL2PSExporter ret = (cPtr is null) ? null : new vtkGL2PSExporter(cPtr, false);
    return ret;
  }

  alias vtkExporter.vtkExporter.NewInstance NewInstance;

  public void SetFilePrefix(string _arg) {
    vtkd_im.vtkGL2PSExporter_SetFilePrefix(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFilePrefix() {
    string ret = std.conv.to!string(vtkd_im.vtkGL2PSExporter_GetFilePrefix(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTitle(string _arg) {
    vtkd_im.vtkGL2PSExporter_SetTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkGL2PSExporter_GetTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileFormat(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetFileFormat(cast(void*)swigCPtr, _arg);
  }

  public int GetFileFormatMinValue() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetFileFormatMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFileFormatMaxValue() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetFileFormatMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFileFormat() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetFileFormat(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFileFormatToPS() {
    vtkd_im.vtkGL2PSExporter_SetFileFormatToPS(cast(void*)swigCPtr);
  }

  public void SetFileFormatToEPS() {
    vtkd_im.vtkGL2PSExporter_SetFileFormatToEPS(cast(void*)swigCPtr);
  }

  public void SetFileFormatToPDF() {
    vtkd_im.vtkGL2PSExporter_SetFileFormatToPDF(cast(void*)swigCPtr);
  }

  public void SetFileFormatToTeX() {
    vtkd_im.vtkGL2PSExporter_SetFileFormatToTeX(cast(void*)swigCPtr);
  }

  public void SetFileFormatToSVG() {
    vtkd_im.vtkGL2PSExporter_SetFileFormatToSVG(cast(void*)swigCPtr);
  }

  public string GetFileFormatAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGL2PSExporter_GetFileFormatAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetSort(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetSort(cast(void*)swigCPtr, _arg);
  }

  public int GetSortMinValue() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetSortMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSortMaxValue() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetSortMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSort() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetSort(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSortToOff() {
    vtkd_im.vtkGL2PSExporter_SetSortToOff(cast(void*)swigCPtr);
  }

  public void SetSortToSimple() {
    vtkd_im.vtkGL2PSExporter_SetSortToSimple(cast(void*)swigCPtr);
  }

  public void SetSortToBSP() {
    vtkd_im.vtkGL2PSExporter_SetSortToBSP(cast(void*)swigCPtr);
  }

  public string GetSortAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGL2PSExporter_GetSortAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetCompress(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetCompress(cast(void*)swigCPtr, _arg);
  }

  public int GetCompress() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetCompress(cast(void*)swigCPtr);
    return ret;
  }

  public void CompressOn() {
    vtkd_im.vtkGL2PSExporter_CompressOn(cast(void*)swigCPtr);
  }

  public void CompressOff() {
    vtkd_im.vtkGL2PSExporter_CompressOff(cast(void*)swigCPtr);
  }

  public void SetDrawBackground(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetDrawBackground(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawBackground() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetDrawBackground(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawBackgroundOn() {
    vtkd_im.vtkGL2PSExporter_DrawBackgroundOn(cast(void*)swigCPtr);
  }

  public void DrawBackgroundOff() {
    vtkd_im.vtkGL2PSExporter_DrawBackgroundOff(cast(void*)swigCPtr);
  }

  public void SetSimpleLineOffset(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetSimpleLineOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetSimpleLineOffset() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetSimpleLineOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SimpleLineOffsetOn() {
    vtkd_im.vtkGL2PSExporter_SimpleLineOffsetOn(cast(void*)swigCPtr);
  }

  public void SimpleLineOffsetOff() {
    vtkd_im.vtkGL2PSExporter_SimpleLineOffsetOff(cast(void*)swigCPtr);
  }

  public void SetSilent(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetSilent(cast(void*)swigCPtr, _arg);
  }

  public int GetSilent() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetSilent(cast(void*)swigCPtr);
    return ret;
  }

  public void SilentOn() {
    vtkd_im.vtkGL2PSExporter_SilentOn(cast(void*)swigCPtr);
  }

  public void SilentOff() {
    vtkd_im.vtkGL2PSExporter_SilentOff(cast(void*)swigCPtr);
  }

  public void SetBestRoot(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetBestRoot(cast(void*)swigCPtr, _arg);
  }

  public int GetBestRoot() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetBestRoot(cast(void*)swigCPtr);
    return ret;
  }

  public void BestRootOn() {
    vtkd_im.vtkGL2PSExporter_BestRootOn(cast(void*)swigCPtr);
  }

  public void BestRootOff() {
    vtkd_im.vtkGL2PSExporter_BestRootOff(cast(void*)swigCPtr);
  }

  public void SetText(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetText(cast(void*)swigCPtr, _arg);
  }

  public int GetText() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetText(cast(void*)swigCPtr);
    return ret;
  }

  public void TextOn() {
    vtkd_im.vtkGL2PSExporter_TextOn(cast(void*)swigCPtr);
  }

  public void TextOff() {
    vtkd_im.vtkGL2PSExporter_TextOff(cast(void*)swigCPtr);
  }

  public void SetLandscape(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetLandscape(cast(void*)swigCPtr, _arg);
  }

  public int GetLandscape() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetLandscape(cast(void*)swigCPtr);
    return ret;
  }

  public void LandscapeOn() {
    vtkd_im.vtkGL2PSExporter_LandscapeOn(cast(void*)swigCPtr);
  }

  public void LandscapeOff() {
    vtkd_im.vtkGL2PSExporter_LandscapeOff(cast(void*)swigCPtr);
  }

  public void SetPS3Shading(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetPS3Shading(cast(void*)swigCPtr, _arg);
  }

  public int GetPS3Shading() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetPS3Shading(cast(void*)swigCPtr);
    return ret;
  }

  public void PS3ShadingOn() {
    vtkd_im.vtkGL2PSExporter_PS3ShadingOn(cast(void*)swigCPtr);
  }

  public void PS3ShadingOff() {
    vtkd_im.vtkGL2PSExporter_PS3ShadingOff(cast(void*)swigCPtr);
  }

  public void SetOcclusionCull(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetOcclusionCull(cast(void*)swigCPtr, _arg);
  }

  public int GetOcclusionCull() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetOcclusionCull(cast(void*)swigCPtr);
    return ret;
  }

  public void OcclusionCullOn() {
    vtkd_im.vtkGL2PSExporter_OcclusionCullOn(cast(void*)swigCPtr);
  }

  public void OcclusionCullOff() {
    vtkd_im.vtkGL2PSExporter_OcclusionCullOff(cast(void*)swigCPtr);
  }

  public void SetWrite3DPropsAsRasterImage(int _arg) {
    vtkd_im.vtkGL2PSExporter_SetWrite3DPropsAsRasterImage(cast(void*)swigCPtr, _arg);
  }

  public int GetWrite3DPropsAsRasterImage() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetWrite3DPropsAsRasterImage(cast(void*)swigCPtr);
    return ret;
  }

  public void Write3DPropsAsRasterImageOn() {
    vtkd_im.vtkGL2PSExporter_Write3DPropsAsRasterImageOn(cast(void*)swigCPtr);
  }

  public void Write3DPropsAsRasterImageOff() {
    vtkd_im.vtkGL2PSExporter_Write3DPropsAsRasterImageOff(cast(void*)swigCPtr);
  }

  public void SetTextAsPath(bool _arg) {
    vtkd_im.vtkGL2PSExporter_SetTextAsPath(cast(void*)swigCPtr, _arg);
  }

  public bool GetTextAsPath() {
    bool ret = vtkd_im.vtkGL2PSExporter_GetTextAsPath(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void TextAsPathOn() {
    vtkd_im.vtkGL2PSExporter_TextAsPathOn(cast(void*)swigCPtr);
  }

  public void TextAsPathOff() {
    vtkd_im.vtkGL2PSExporter_TextAsPathOff(cast(void*)swigCPtr);
  }

  public void SetRasterExclusions(vtkPropCollection.vtkPropCollection arg0) {
    vtkd_im.vtkGL2PSExporter_SetRasterExclusions(cast(void*)swigCPtr, vtkPropCollection.vtkPropCollection.swigGetCPtr(arg0));
  }

  public vtkPropCollection.vtkPropCollection GetRasterExclusions() {
    void* cPtr = vtkd_im.vtkGL2PSExporter_GetRasterExclusions(cast(void*)swigCPtr);
    vtkPropCollection.vtkPropCollection ret = (cPtr is null) ? null : new vtkPropCollection.vtkPropCollection(cPtr, false);
    return ret;
  }

  public void SetPointSizeFactor(float _arg) {
    vtkd_im.vtkGL2PSExporter_SetPointSizeFactor(cast(void*)swigCPtr, _arg);
  }

  public float GetPointSizeFactor() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetPointSizeFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLineWidthFactor(float _arg) {
    vtkd_im.vtkGL2PSExporter_SetLineWidthFactor(cast(void*)swigCPtr, _arg);
  }

  public float GetLineWidthFactor() {
    auto ret = vtkd_im.vtkGL2PSExporter_GetLineWidthFactor(cast(void*)swigCPtr);
    return ret;
  }
}
