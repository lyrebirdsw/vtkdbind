/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMath;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_float;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_a_3__float;
static import SWIGTYPE_p_a_3__double;
static import SWIGTYPE_p_a_2__float;
static import SWIGTYPE_p_a_2__double;
static import SWIGTYPE_p_int;
static import vtkDataArray;
static import vtkObject;

class vtkMath : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMath_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMath obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkMath New() {
    void* cPtr = vtkd_im.vtkMath_New();
    vtkMath ret = (cPtr is null) ? null : new vtkMath(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMath_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMath SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMath_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMath ret = (cPtr is null) ? null : new vtkMath(cPtr, false);
    return ret;
  }

  public vtkMath NewInstance() const {
    void* cPtr = vtkd_im.vtkMath_NewInstance(cast(void*)swigCPtr);
    vtkMath ret = (cPtr is null) ? null : new vtkMath(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static double Pi() {
    auto ret = vtkd_im.vtkMath_Pi();
    return ret;
  }

  public static double DoublePi() {
    auto ret = vtkd_im.vtkMath_DoublePi();
    return ret;
  }

  public static double DoubleTwoPi() {
    auto ret = vtkd_im.vtkMath_DoubleTwoPi();
    return ret;
  }

  public static float RadiansFromDegrees(float degrees) {
    auto ret = vtkd_im.vtkMath_RadiansFromDegrees__SWIG_0(degrees);
    return ret;
  }

  public static double RadiansFromDegrees(double degrees) {
    auto ret = vtkd_im.vtkMath_RadiansFromDegrees__SWIG_1(degrees);
    return ret;
  }

  public static float DegreesFromRadians(float radians) {
    auto ret = vtkd_im.vtkMath_DegreesFromRadians__SWIG_0(radians);
    return ret;
  }

  public static double DegreesFromRadians(double radians) {
    auto ret = vtkd_im.vtkMath_DegreesFromRadians__SWIG_1(radians);
    return ret;
  }

  public static int Round(float f) {
    auto ret = vtkd_im.vtkMath_Round__SWIG_0(f);
    return ret;
  }

  public static int Round(double f) {
    auto ret = vtkd_im.vtkMath_Round__SWIG_1(f);
    return ret;
  }

  public static int Floor(double x) {
    auto ret = vtkd_im.vtkMath_Floor(x);
    return ret;
  }

  public static int Ceil(double x) {
    auto ret = vtkd_im.vtkMath_Ceil(x);
    return ret;
  }

  public static int CeilLog2(ulong x) {
    auto ret = vtkd_im.vtkMath_CeilLog2(x);
    return ret;
  }

  public static bool IsPowerOfTwo(ulong x) {
    bool ret = vtkd_im.vtkMath_IsPowerOfTwo(x) ? true : false;
    return ret;
  }

  public static int NearestPowerOfTwo(int x) {
    auto ret = vtkd_im.vtkMath_NearestPowerOfTwo(x);
    return ret;
  }

  public static long Factorial(int N) {
    auto ret = vtkd_im.vtkMath_Factorial(N);
    return ret;
  }

  public static long Binomial(int m, int n) {
    auto ret = vtkd_im.vtkMath_Binomial(m, n);
    return ret;
  }

  public static int* BeginCombination(int m, int n) {
    auto ret = cast(int*)vtkd_im.vtkMath_BeginCombination(m, n);
    return ret;
  }

  public static int NextCombination(int m, int n, int* combination) {
    auto ret = vtkd_im.vtkMath_NextCombination(m, n, cast(void*)combination);
    return ret;
  }

  public static void FreeCombination(int* combination) {
    vtkd_im.vtkMath_FreeCombination(cast(void*)combination);
  }

  public static void RandomSeed(int s) {
    vtkd_im.vtkMath_RandomSeed(s);
  }

  public static int GetSeed() {
    auto ret = vtkd_im.vtkMath_GetSeed();
    return ret;
  }

  public static double Random() {
    auto ret = vtkd_im.vtkMath_Random__SWIG_0();
    return ret;
  }

  public static double Random(double min, double max) {
    auto ret = vtkd_im.vtkMath_Random__SWIG_1(min, max);
    return ret;
  }

  public static double Gaussian() {
    auto ret = vtkd_im.vtkMath_Gaussian__SWIG_0();
    return ret;
  }

  public static double Gaussian(double mean, double std) {
    auto ret = vtkd_im.vtkMath_Gaussian__SWIG_1(mean, std);
    return ret;
  }

  public static void Add(SWIGTYPE_p_float.SWIGTYPE_p_float a, SWIGTYPE_p_float.SWIGTYPE_p_float b, SWIGTYPE_p_float.SWIGTYPE_p_float c) {
    vtkd_im.vtkMath_Add__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(b), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c));
  }

  public static void Add(SWIGTYPE_p_double.SWIGTYPE_p_double a, SWIGTYPE_p_double.SWIGTYPE_p_double b, SWIGTYPE_p_double.SWIGTYPE_p_double c) {
    vtkd_im.vtkMath_Add__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(b), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c));
  }

  public static void Subtract(SWIGTYPE_p_float.SWIGTYPE_p_float a, SWIGTYPE_p_float.SWIGTYPE_p_float b, SWIGTYPE_p_float.SWIGTYPE_p_float c) {
    vtkd_im.vtkMath_Subtract__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(b), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c));
  }

  public static void Subtract(SWIGTYPE_p_double.SWIGTYPE_p_double a, SWIGTYPE_p_double.SWIGTYPE_p_double b, SWIGTYPE_p_double.SWIGTYPE_p_double c) {
    vtkd_im.vtkMath_Subtract__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(b), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c));
  }

  public static void MultiplyScalar(SWIGTYPE_p_float.SWIGTYPE_p_float a, float s) {
    vtkd_im.vtkMath_MultiplyScalar__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), s);
  }

  public static void MultiplyScalar2D(SWIGTYPE_p_float.SWIGTYPE_p_float a, float s) {
    vtkd_im.vtkMath_MultiplyScalar2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), s);
  }

  public static void MultiplyScalar(SWIGTYPE_p_double.SWIGTYPE_p_double a, double s) {
    vtkd_im.vtkMath_MultiplyScalar__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), s);
  }

  public static void MultiplyScalar2D(SWIGTYPE_p_double.SWIGTYPE_p_double a, double s) {
    vtkd_im.vtkMath_MultiplyScalar2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), s);
  }

  public static float Dot(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y) {
    auto ret = vtkd_im.vtkMath_Dot__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y));
    return ret;
  }

  public static double Dot(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y) {
    auto ret = vtkd_im.vtkMath_Dot__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y));
    return ret;
  }

  public static void Outer(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) {
    vtkd_im.vtkMath_Outer__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
  }

  public static void Outer(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A) {
    vtkd_im.vtkMath_Outer__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A));
  }

  public static void Cross(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y, SWIGTYPE_p_float.SWIGTYPE_p_float z) {
    vtkd_im.vtkMath_Cross__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(z));
  }

  public static void Cross(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y, SWIGTYPE_p_double.SWIGTYPE_p_double z) {
    vtkd_im.vtkMath_Cross__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(z));
  }

  public static float Norm(float* x, int n) {
    auto ret = vtkd_im.vtkMath_Norm__SWIG_0(cast(void*)x, n);
    return ret;
  }

  public static double Norm(double* x, int n) {
    auto ret = vtkd_im.vtkMath_Norm__SWIG_1(cast(void*)x, n);
    return ret;
  }

  public static float Norm(SWIGTYPE_p_float.SWIGTYPE_p_float x) {
    auto ret = vtkd_im.vtkMath_Norm__SWIG_2(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x));
    return ret;
  }

  public static double Norm(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkMath_Norm__SWIG_3(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public static float Normalize(SWIGTYPE_p_float.SWIGTYPE_p_float x) {
    auto ret = vtkd_im.vtkMath_Normalize__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x));
    return ret;
  }

  public static double Normalize(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkMath_Normalize__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public static void Perpendiculars(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y, SWIGTYPE_p_double.SWIGTYPE_p_double z, double theta) {
    vtkd_im.vtkMath_Perpendiculars__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(z), theta);
  }

  public static void Perpendiculars(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y, SWIGTYPE_p_float.SWIGTYPE_p_float z, double theta) {
    vtkd_im.vtkMath_Perpendiculars__SWIG_1(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(z), theta);
  }

  public static bool ProjectVector(SWIGTYPE_p_float.SWIGTYPE_p_float a, SWIGTYPE_p_float.SWIGTYPE_p_float b, SWIGTYPE_p_float.SWIGTYPE_p_float projection) {
    bool ret = vtkd_im.vtkMath_ProjectVector__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(b), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(projection)) ? true : false;
    return ret;
  }

  public static bool ProjectVector(SWIGTYPE_p_double.SWIGTYPE_p_double a, SWIGTYPE_p_double.SWIGTYPE_p_double b, SWIGTYPE_p_double.SWIGTYPE_p_double projection) {
    bool ret = vtkd_im.vtkMath_ProjectVector__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(b), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(projection)) ? true : false;
    return ret;
  }

  public static bool ProjectVector2D(SWIGTYPE_p_float.SWIGTYPE_p_float a, SWIGTYPE_p_float.SWIGTYPE_p_float b, SWIGTYPE_p_float.SWIGTYPE_p_float projection) {
    bool ret = vtkd_im.vtkMath_ProjectVector2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(a), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(b), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(projection)) ? true : false;
    return ret;
  }

  public static bool ProjectVector2D(SWIGTYPE_p_double.SWIGTYPE_p_double a, SWIGTYPE_p_double.SWIGTYPE_p_double b, SWIGTYPE_p_double.SWIGTYPE_p_double projection) {
    bool ret = vtkd_im.vtkMath_ProjectVector2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(b), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(projection)) ? true : false;
    return ret;
  }

  public static float Distance2BetweenPoints(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y) {
    auto ret = vtkd_im.vtkMath_Distance2BetweenPoints__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y));
    return ret;
  }

  public static double Distance2BetweenPoints(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y) {
    auto ret = vtkd_im.vtkMath_Distance2BetweenPoints__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y));
    return ret;
  }

  public static double GaussianAmplitude(double variance, double distanceFromMean) {
    auto ret = vtkd_im.vtkMath_GaussianAmplitude__SWIG_0(variance, distanceFromMean);
    return ret;
  }

  public static double GaussianAmplitude(double mean, double variance, double position) {
    auto ret = vtkd_im.vtkMath_GaussianAmplitude__SWIG_1(mean, variance, position);
    return ret;
  }

  public static double GaussianWeight(double variance, double distanceFromMean) {
    auto ret = vtkd_im.vtkMath_GaussianWeight__SWIG_0(variance, distanceFromMean);
    return ret;
  }

  public static double GaussianWeight(double mean, double variance, double position) {
    auto ret = vtkd_im.vtkMath_GaussianWeight__SWIG_1(mean, variance, position);
    return ret;
  }

  public static float Dot2D(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y) {
    auto ret = vtkd_im.vtkMath_Dot2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y));
    return ret;
  }

  public static double Dot2D(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y) {
    auto ret = vtkd_im.vtkMath_Dot2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y));
    return ret;
  }

  public static void Outer2D(SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y, SWIGTYPE_p_a_2__float.SWIGTYPE_p_a_2__float A) {
    vtkd_im.vtkMath_Outer2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y), SWIGTYPE_p_a_2__float.SWIGTYPE_p_a_2__float.swigGetCPtr(A));
  }

  public static void Outer2D(SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y, SWIGTYPE_p_a_2__double.SWIGTYPE_p_a_2__double A) {
    vtkd_im.vtkMath_Outer2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y), SWIGTYPE_p_a_2__double.SWIGTYPE_p_a_2__double.swigGetCPtr(A));
  }

  public static float Norm2D(SWIGTYPE_p_float.SWIGTYPE_p_float x) {
    auto ret = vtkd_im.vtkMath_Norm2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x));
    return ret;
  }

  public static double Norm2D(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkMath_Norm2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public static float Normalize2D(SWIGTYPE_p_float.SWIGTYPE_p_float x) {
    auto ret = vtkd_im.vtkMath_Normalize2D__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x));
    return ret;
  }

  public static double Normalize2D(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkMath_Normalize2D__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public static float Determinant2x2(SWIGTYPE_p_float.SWIGTYPE_p_float c1, SWIGTYPE_p_float.SWIGTYPE_p_float c2) {
    auto ret = vtkd_im.vtkMath_Determinant2x2__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c1), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c2));
    return ret;
  }

  public static double Determinant2x2(double a, double b, double c, double d) {
    auto ret = vtkd_im.vtkMath_Determinant2x2__SWIG_1(a, b, c, d);
    return ret;
  }

  public static double Determinant2x2(SWIGTYPE_p_double.SWIGTYPE_p_double c1, SWIGTYPE_p_double.SWIGTYPE_p_double c2) {
    auto ret = vtkd_im.vtkMath_Determinant2x2__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c2));
    return ret;
  }

  public static void LUFactor3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_int.SWIGTYPE_p_int index) {
    vtkd_im.vtkMath_LUFactor3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(index));
  }

  public static void LUFactor3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_int.SWIGTYPE_p_int index) {
    vtkd_im.vtkMath_LUFactor3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(index));
  }

  public static void LUSolve3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_int.SWIGTYPE_p_int index, SWIGTYPE_p_float.SWIGTYPE_p_float x) {
    vtkd_im.vtkMath_LUSolve3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(index), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x));
  }

  public static void LUSolve3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_int.SWIGTYPE_p_int index, SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkMath_LUSolve3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(index), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public static void LinearSolve3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_float.SWIGTYPE_p_float x, SWIGTYPE_p_float.SWIGTYPE_p_float y) {
    vtkd_im.vtkMath_LinearSolve3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(x), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(y));
  }

  public static void LinearSolve3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_double.SWIGTYPE_p_double y) {
    vtkd_im.vtkMath_LinearSolve3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(y));
  }

  public static void Multiply3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_float.SWIGTYPE_p_float arg1, SWIGTYPE_p_float.SWIGTYPE_p_float arg2) {
    vtkd_im.vtkMath_Multiply3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg1), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg2));
  }

  public static void Multiply3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_double.SWIGTYPE_p_double arg1, SWIGTYPE_p_double.SWIGTYPE_p_double arg2) {
    vtkd_im.vtkMath_Multiply3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg2));
  }

  public static void Multiply3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float B, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float C) {
    vtkd_im.vtkMath_Multiply3x3__SWIG_2(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(B), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(C));
  }

  public static void Multiply3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double B, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double C) {
    vtkd_im.vtkMath_Multiply3x3__SWIG_3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(B), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(C));
  }

  public static void MultiplyMatrix(double** A, double** B, uint rowA, uint colA, uint rowB, uint colB, double** C) {
    vtkd_im.vtkMath_MultiplyMatrix(cast(void*)A, cast(void*)B, rowA, colA, rowB, colB, cast(void*)C);
  }

  public static void Transpose3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float AT) {
    vtkd_im.vtkMath_Transpose3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(AT));
  }

  public static void Transpose3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double AT) {
    vtkd_im.vtkMath_Transpose3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(AT));
  }

  public static void Invert3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float AI) {
    vtkd_im.vtkMath_Invert3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(AI));
  }

  public static void Invert3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double AI) {
    vtkd_im.vtkMath_Invert3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(AI));
  }

  public static void Identity3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) {
    vtkd_im.vtkMath_Identity3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
  }

  public static void Identity3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A) {
    vtkd_im.vtkMath_Identity3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A));
  }

  public static double Determinant3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) {
    auto ret = vtkd_im.vtkMath_Determinant3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
    return ret;
  }

  public static double Determinant3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A) {
    auto ret = vtkd_im.vtkMath_Determinant3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A));
    return ret;
  }

  public static float Determinant3x3(SWIGTYPE_p_float.SWIGTYPE_p_float c1, SWIGTYPE_p_float.SWIGTYPE_p_float c2, SWIGTYPE_p_float.SWIGTYPE_p_float c3) {
    auto ret = vtkd_im.vtkMath_Determinant3x3__SWIG_2(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c1), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c2), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(c3));
    return ret;
  }

  public static double Determinant3x3(SWIGTYPE_p_double.SWIGTYPE_p_double c1, SWIGTYPE_p_double.SWIGTYPE_p_double c2, SWIGTYPE_p_double.SWIGTYPE_p_double c3) {
    auto ret = vtkd_im.vtkMath_Determinant3x3__SWIG_3(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c2), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(c3));
    return ret;
  }

  public static double Determinant3x3(double a1, double a2, double a3, double b1, double b2, double b3, double c1, double c2, double c3) {
    auto ret = vtkd_im.vtkMath_Determinant3x3__SWIG_4(a1, a2, a3, b1, b2, b3, c1, c2, c3);
    return ret;
  }

  public static void QuaternionToMatrix3x3(SWIGTYPE_p_float.SWIGTYPE_p_float quat, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) {
    vtkd_im.vtkMath_QuaternionToMatrix3x3__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(quat), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
  }

  public static void QuaternionToMatrix3x3(SWIGTYPE_p_double.SWIGTYPE_p_double quat, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A) {
    vtkd_im.vtkMath_QuaternionToMatrix3x3__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(quat), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A));
  }

  public static void Matrix3x3ToQuaternion(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_float.SWIGTYPE_p_float quat) {
    vtkd_im.vtkMath_Matrix3x3ToQuaternion__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(quat));
  }

  public static void Matrix3x3ToQuaternion(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_double.SWIGTYPE_p_double quat) {
    vtkd_im.vtkMath_Matrix3x3ToQuaternion__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(quat));
  }

  public static void MultiplyQuaternion(SWIGTYPE_p_float.SWIGTYPE_p_float q1, SWIGTYPE_p_float.SWIGTYPE_p_float q2, SWIGTYPE_p_float.SWIGTYPE_p_float q) {
    vtkd_im.vtkMath_MultiplyQuaternion__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(q1), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(q2), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(q));
  }

  public static void MultiplyQuaternion(SWIGTYPE_p_double.SWIGTYPE_p_double q1, SWIGTYPE_p_double.SWIGTYPE_p_double q2, SWIGTYPE_p_double.SWIGTYPE_p_double q) {
    vtkd_im.vtkMath_MultiplyQuaternion__SWIG_1(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q2), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q));
  }

  public static void Orthogonalize3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float B) {
    vtkd_im.vtkMath_Orthogonalize3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(B));
  }

  public static void Orthogonalize3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double B) {
    vtkd_im.vtkMath_Orthogonalize3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(B));
  }

  public static void Diagonalize3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_float.SWIGTYPE_p_float w, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float V) {
    vtkd_im.vtkMath_Diagonalize3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(w), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(V));
  }

  public static void Diagonalize3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_double.SWIGTYPE_p_double w, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double V) {
    vtkd_im.vtkMath_Diagonalize3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(w), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(V));
  }

  public static void SingularValueDecomposition3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float U, SWIGTYPE_p_float.SWIGTYPE_p_float w, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float VT) {
    vtkd_im.vtkMath_SingularValueDecomposition3x3__SWIG_0(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(U), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(w), SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(VT));
  }

  public static void SingularValueDecomposition3x3(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double A, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double U, SWIGTYPE_p_double.SWIGTYPE_p_double w, SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double VT) {
    vtkd_im.vtkMath_SingularValueDecomposition3x3__SWIG_1(SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(A), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(U), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(w), SWIGTYPE_p_a_3__double.SWIGTYPE_p_a_3__double.swigGetCPtr(VT));
  }

  public static int SolveLinearSystem(double** A, double* x, int size) {
    auto ret = vtkd_im.vtkMath_SolveLinearSystem(cast(void*)A, cast(void*)x, size);
    return ret;
  }

  public static int InvertMatrix(double** A, double** AI, int size) {
    auto ret = vtkd_im.vtkMath_InvertMatrix__SWIG_0(cast(void*)A, cast(void*)AI, size);
    return ret;
  }

  public static int InvertMatrix(double** A, double** AI, int size, int* tmp1Size, double* tmp2Size) {
    auto ret = vtkd_im.vtkMath_InvertMatrix__SWIG_1(cast(void*)A, cast(void*)AI, size, cast(void*)tmp1Size, cast(void*)tmp2Size);
    return ret;
  }

  public static int LUFactorLinearSystem(double** A, int* index, int size) {
    auto ret = vtkd_im.vtkMath_LUFactorLinearSystem__SWIG_0(cast(void*)A, cast(void*)index, size);
    return ret;
  }

  public static int LUFactorLinearSystem(double** A, int* index, int size, double* tmpSize) {
    auto ret = vtkd_im.vtkMath_LUFactorLinearSystem__SWIG_1(cast(void*)A, cast(void*)index, size, cast(void*)tmpSize);
    return ret;
  }

  public static void LUSolveLinearSystem(double** A, int* index, double* x, int size) {
    vtkd_im.vtkMath_LUSolveLinearSystem(cast(void*)A, cast(void*)index, cast(void*)x, size);
  }

  public static double EstimateMatrixCondition(double** A, int size) {
    auto ret = vtkd_im.vtkMath_EstimateMatrixCondition(cast(void*)A, size);
    return ret;
  }

  public static int Jacobi(float** a, float* w, float** v) {
    auto ret = vtkd_im.vtkMath_Jacobi__SWIG_0(cast(void*)a, cast(void*)w, cast(void*)v);
    return ret;
  }

  public static int Jacobi(double** a, double* w, double** v) {
    auto ret = vtkd_im.vtkMath_Jacobi__SWIG_1(cast(void*)a, cast(void*)w, cast(void*)v);
    return ret;
  }

  public static int JacobiN(float** a, int n, float* w, float** v) {
    auto ret = vtkd_im.vtkMath_JacobiN__SWIG_0(cast(void*)a, n, cast(void*)w, cast(void*)v);
    return ret;
  }

  public static int JacobiN(double** a, int n, double* w, double** v) {
    auto ret = vtkd_im.vtkMath_JacobiN__SWIG_1(cast(void*)a, n, cast(void*)w, cast(void*)v);
    return ret;
  }

  public static int SolveHomogeneousLeastSquares(int numberOfSamples, double** xt, int xOrder, double** mt) {
    auto ret = vtkd_im.vtkMath_SolveHomogeneousLeastSquares(numberOfSamples, cast(void*)xt, xOrder, cast(void*)mt);
    return ret;
  }

  public static int SolveLeastSquares(int numberOfSamples, double** xt, int xOrder, double** yt, int yOrder, double** mt, int checkHomogeneous) {
    auto ret = vtkd_im.vtkMath_SolveLeastSquares__SWIG_0(numberOfSamples, cast(void*)xt, xOrder, cast(void*)yt, yOrder, cast(void*)mt, checkHomogeneous);
    return ret;
  }

  public static int SolveLeastSquares(int numberOfSamples, double** xt, int xOrder, double** yt, int yOrder, double** mt) {
    auto ret = vtkd_im.vtkMath_SolveLeastSquares__SWIG_1(numberOfSamples, cast(void*)xt, xOrder, cast(void*)yt, yOrder, cast(void*)mt);
    return ret;
  }

  public static void RGBToHSV(SWIGTYPE_p_float.SWIGTYPE_p_float rgb, SWIGTYPE_p_float.SWIGTYPE_p_float hsv) {
    vtkd_im.vtkMath_RGBToHSV__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(rgb), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(hsv));
  }

  public static void RGBToHSV(float r, float g, float b, float* h, float* s, float* v) {
    vtkd_im.vtkMath_RGBToHSV__SWIG_1(r, g, b, cast(void*)h, cast(void*)s, cast(void*)v);
  }

  public static double* RGBToHSV(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    auto ret = cast(double*)vtkd_im.vtkMath_RGBToHSV__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
    return ret;
  }

  public static double* RGBToHSV(double r, double g, double b) {
    auto ret = cast(double*)vtkd_im.vtkMath_RGBToHSV__SWIG_3(r, g, b);
    return ret;
  }

  public static void RGBToHSV(SWIGTYPE_p_double.SWIGTYPE_p_double rgb, SWIGTYPE_p_double.SWIGTYPE_p_double hsv) {
    vtkd_im.vtkMath_RGBToHSV__SWIG_4(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(hsv));
  }

  public static void RGBToHSV(double r, double g, double b, double* h, double* s, double* v) {
    vtkd_im.vtkMath_RGBToHSV__SWIG_5(r, g, b, cast(void*)h, cast(void*)s, cast(void*)v);
  }

  public static void HSVToRGB(SWIGTYPE_p_float.SWIGTYPE_p_float hsv, SWIGTYPE_p_float.SWIGTYPE_p_float rgb) {
    vtkd_im.vtkMath_HSVToRGB__SWIG_0(SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(hsv), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(rgb));
  }

  public static void HSVToRGB(float h, float s, float v, float* r, float* g, float* b) {
    vtkd_im.vtkMath_HSVToRGB__SWIG_1(h, s, v, cast(void*)r, cast(void*)g, cast(void*)b);
  }

  public static double* HSVToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double hsv) {
    auto ret = cast(double*)vtkd_im.vtkMath_HSVToRGB__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(hsv));
    return ret;
  }

  public static double* HSVToRGB(double h, double s, double v) {
    auto ret = cast(double*)vtkd_im.vtkMath_HSVToRGB__SWIG_3(h, s, v);
    return ret;
  }

  public static void HSVToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double hsv, SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkMath_HSVToRGB__SWIG_4(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(hsv), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public static void HSVToRGB(double h, double s, double v, double* r, double* g, double* b) {
    vtkd_im.vtkMath_HSVToRGB__SWIG_5(h, s, v, cast(void*)r, cast(void*)g, cast(void*)b);
  }

  public static void LabToXYZ(SWIGTYPE_p_double.SWIGTYPE_p_double lab, SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkMath_LabToXYZ__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public static void LabToXYZ(double L, double a, double b, double* x, double* y, double* z) {
    vtkd_im.vtkMath_LabToXYZ__SWIG_1(L, a, b, cast(void*)x, cast(void*)y, cast(void*)z);
  }

  public static double* LabToXYZ(SWIGTYPE_p_double.SWIGTYPE_p_double lab) {
    auto ret = cast(double*)vtkd_im.vtkMath_LabToXYZ__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab));
    return ret;
  }

  public static void XYZToLab(SWIGTYPE_p_double.SWIGTYPE_p_double xyz, SWIGTYPE_p_double.SWIGTYPE_p_double lab) {
    vtkd_im.vtkMath_XYZToLab__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab));
  }

  public static void XYZToLab(double x, double y, double z, double* L, double* a, double* b) {
    vtkd_im.vtkMath_XYZToLab__SWIG_1(x, y, z, cast(void*)L, cast(void*)a, cast(void*)b);
  }

  public static double* XYZToLab(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    auto ret = cast(double*)vtkd_im.vtkMath_XYZToLab__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
    return ret;
  }

  public static void XYZToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double xyz, SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkMath_XYZToRGB__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public static void XYZToRGB(double x, double y, double z, double* r, double* g, double* b) {
    vtkd_im.vtkMath_XYZToRGB__SWIG_1(x, y, z, cast(void*)r, cast(void*)g, cast(void*)b);
  }

  public static double* XYZToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    auto ret = cast(double*)vtkd_im.vtkMath_XYZToRGB__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
    return ret;
  }

  public static void RGBToXYZ(SWIGTYPE_p_double.SWIGTYPE_p_double rgb, SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkMath_RGBToXYZ__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public static void RGBToXYZ(double r, double g, double b, double* x, double* y, double* z) {
    vtkd_im.vtkMath_RGBToXYZ__SWIG_1(r, g, b, cast(void*)x, cast(void*)y, cast(void*)z);
  }

  public static double* RGBToXYZ(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    auto ret = cast(double*)vtkd_im.vtkMath_RGBToXYZ__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
    return ret;
  }

  public static void RGBToLab(SWIGTYPE_p_double.SWIGTYPE_p_double rgb, SWIGTYPE_p_double.SWIGTYPE_p_double lab) {
    vtkd_im.vtkMath_RGBToLab__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab));
  }

  public static void RGBToLab(double red, double green, double blue, double* L, double* a, double* b) {
    vtkd_im.vtkMath_RGBToLab__SWIG_1(red, green, blue, cast(void*)L, cast(void*)a, cast(void*)b);
  }

  public static double* RGBToLab(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    auto ret = cast(double*)vtkd_im.vtkMath_RGBToLab__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
    return ret;
  }

  public static void LabToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double lab, SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkMath_LabToRGB__SWIG_0(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public static void LabToRGB(double L, double a, double b, double* red, double* green, double* blue) {
    vtkd_im.vtkMath_LabToRGB__SWIG_1(L, a, b, cast(void*)red, cast(void*)green, cast(void*)blue);
  }

  public static double* LabToRGB(SWIGTYPE_p_double.SWIGTYPE_p_double lab) {
    auto ret = cast(double*)vtkd_im.vtkMath_LabToRGB__SWIG_2(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(lab));
    return ret;
  }

  public static void UninitializeBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkMath_UninitializeBounds(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public static int AreBoundsInitialized(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    auto ret = vtkd_im.vtkMath_AreBoundsInitialized(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
    return ret;
  }

  public static void ClampValue(double* value, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkMath_ClampValue__SWIG_0(cast(void*)value, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public static void ClampValue(double value, SWIGTYPE_p_double.SWIGTYPE_p_double range, double* clamped_value) {
    vtkd_im.vtkMath_ClampValue__SWIG_1(value, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range), cast(void*)clamped_value);
  }

  public static void ClampValues(double* values, int nb_values, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkMath_ClampValues__SWIG_0(cast(void*)values, nb_values, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public static void ClampValues(double* values, int nb_values, SWIGTYPE_p_double.SWIGTYPE_p_double range, double* clamped_values) {
    vtkd_im.vtkMath_ClampValues__SWIG_1(cast(void*)values, nb_values, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range), cast(void*)clamped_values);
  }

  public static double ClampAndNormalizeValue(double value, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkMath_ClampAndNormalizeValue(value, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public static int GetScalarTypeFittingRange(double range_min, double range_max, double scale, double shift) {
    auto ret = vtkd_im.vtkMath_GetScalarTypeFittingRange__SWIG_0(range_min, range_max, scale, shift);
    return ret;
  }

  public static int GetScalarTypeFittingRange(double range_min, double range_max, double scale) {
    auto ret = vtkd_im.vtkMath_GetScalarTypeFittingRange__SWIG_1(range_min, range_max, scale);
    return ret;
  }

  public static int GetScalarTypeFittingRange(double range_min, double range_max) {
    auto ret = vtkd_im.vtkMath_GetScalarTypeFittingRange__SWIG_2(range_min, range_max);
    return ret;
  }

  public static int GetAdjustedScalarRange(vtkDataArray.vtkDataArray array, int comp, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkMath_GetAdjustedScalarRange(vtkDataArray.vtkDataArray.swigGetCPtr(array), comp, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public static int ExtentIsWithinOtherExtent(SWIGTYPE_p_int.SWIGTYPE_p_int extent1, SWIGTYPE_p_int.SWIGTYPE_p_int extent2) {
    auto ret = vtkd_im.vtkMath_ExtentIsWithinOtherExtent(SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(extent1), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(extent2));
    return ret;
  }

  public static int BoundsIsWithinOtherBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds1, SWIGTYPE_p_double.SWIGTYPE_p_double bounds2, SWIGTYPE_p_double.SWIGTYPE_p_double delta) {
    auto ret = vtkd_im.vtkMath_BoundsIsWithinOtherBounds(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds2), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(delta));
    return ret;
  }

  public static int PointIsWithinBounds(SWIGTYPE_p_double.SWIGTYPE_p_double point, SWIGTYPE_p_double.SWIGTYPE_p_double bounds, SWIGTYPE_p_double.SWIGTYPE_p_double delta) {
    auto ret = vtkd_im.vtkMath_PointIsWithinBounds(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(delta));
    return ret;
  }

  public static double Solve3PointCircle(SWIGTYPE_p_double.SWIGTYPE_p_double p1, SWIGTYPE_p_double.SWIGTYPE_p_double p2, SWIGTYPE_p_double.SWIGTYPE_p_double p3, SWIGTYPE_p_double.SWIGTYPE_p_double center) {
    auto ret = vtkd_im.vtkMath_Solve3PointCircle(SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(p1), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(p2), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(p3), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(center));
    return ret;
  }

  public static double Inf() {
    auto ret = vtkd_im.vtkMath_Inf();
    return ret;
  }

  public static double NegInf() {
    auto ret = vtkd_im.vtkMath_NegInf();
    return ret;
  }

  public static double Nan() {
    auto ret = vtkd_im.vtkMath_Nan();
    return ret;
  }

  public static int IsInf(double x) {
    auto ret = vtkd_im.vtkMath_IsInf(x);
    return ret;
  }

  public static int IsNan(double x) {
    auto ret = vtkd_im.vtkMath_IsNan(x);
    return ret;
  }

  public static bool IsFinite(double x) {
    bool ret = vtkd_im.vtkMath_IsFinite(x) ? true : false;
    return ret;
  }
}
