/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkXMLTreeReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTreeAlgorithm;

class vtkXMLTreeReader : vtkTreeAlgorithm.vtkTreeAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkXMLTreeReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkXMLTreeReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkXMLTreeReader New() {
    void* cPtr = vtkd_im.vtkXMLTreeReader_New();
    vtkXMLTreeReader ret = (cPtr is null) ? null : new vtkXMLTreeReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkXMLTreeReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkXMLTreeReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkXMLTreeReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkXMLTreeReader ret = (cPtr is null) ? null : new vtkXMLTreeReader(cPtr, false);
    return ret;
  }

  public vtkXMLTreeReader NewInstance() const {
    void* cPtr = vtkd_im.vtkXMLTreeReader_NewInstance(cast(void*)swigCPtr);
    vtkXMLTreeReader ret = (cPtr is null) ? null : new vtkXMLTreeReader(cPtr, false);
    return ret;
  }

  alias vtkTreeAlgorithm.vtkTreeAlgorithm.NewInstance NewInstance;

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileName(string _arg) {
    vtkd_im.vtkXMLTreeReader_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXMLString() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_GetXMLString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetXMLString(string _arg) {
    vtkd_im.vtkXMLTreeReader_SetXMLString(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetEdgePedigreeIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_GetEdgePedigreeIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetEdgePedigreeIdArrayName(string _arg) {
    vtkd_im.vtkXMLTreeReader_SetEdgePedigreeIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetVertexPedigreeIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_GetVertexPedigreeIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetVertexPedigreeIdArrayName(string _arg) {
    vtkd_im.vtkXMLTreeReader_SetVertexPedigreeIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public void SetGenerateEdgePedigreeIds(bool _arg) {
    vtkd_im.vtkXMLTreeReader_SetGenerateEdgePedigreeIds(cast(void*)swigCPtr, _arg);
  }

  public bool GetGenerateEdgePedigreeIds() {
    bool ret = vtkd_im.vtkXMLTreeReader_GetGenerateEdgePedigreeIds(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GenerateEdgePedigreeIdsOn() {
    vtkd_im.vtkXMLTreeReader_GenerateEdgePedigreeIdsOn(cast(void*)swigCPtr);
  }

  public void GenerateEdgePedigreeIdsOff() {
    vtkd_im.vtkXMLTreeReader_GenerateEdgePedigreeIdsOff(cast(void*)swigCPtr);
  }

  public void SetGenerateVertexPedigreeIds(bool _arg) {
    vtkd_im.vtkXMLTreeReader_SetGenerateVertexPedigreeIds(cast(void*)swigCPtr, _arg);
  }

  public bool GetGenerateVertexPedigreeIds() {
    bool ret = vtkd_im.vtkXMLTreeReader_GetGenerateVertexPedigreeIds(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GenerateVertexPedigreeIdsOn() {
    vtkd_im.vtkXMLTreeReader_GenerateVertexPedigreeIdsOn(cast(void*)swigCPtr);
  }

  public void GenerateVertexPedigreeIdsOff() {
    vtkd_im.vtkXMLTreeReader_GenerateVertexPedigreeIdsOff(cast(void*)swigCPtr);
  }

  public bool GetMaskArrays() {
    bool ret = vtkd_im.vtkXMLTreeReader_GetMaskArrays(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetMaskArrays(bool _arg) {
    vtkd_im.vtkXMLTreeReader_SetMaskArrays(cast(void*)swigCPtr, _arg);
  }

  public void MaskArraysOn() {
    vtkd_im.vtkXMLTreeReader_MaskArraysOn(cast(void*)swigCPtr);
  }

  public void MaskArraysOff() {
    vtkd_im.vtkXMLTreeReader_MaskArraysOff(cast(void*)swigCPtr);
  }

  public bool GetReadCharData() {
    bool ret = vtkd_im.vtkXMLTreeReader_GetReadCharData(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetReadCharData(bool _arg) {
    vtkd_im.vtkXMLTreeReader_SetReadCharData(cast(void*)swigCPtr, _arg);
  }

  public void ReadCharDataOn() {
    vtkd_im.vtkXMLTreeReader_ReadCharDataOn(cast(void*)swigCPtr);
  }

  public void ReadCharDataOff() {
    vtkd_im.vtkXMLTreeReader_ReadCharDataOff(cast(void*)swigCPtr);
  }

  public bool GetReadTagName() {
    bool ret = vtkd_im.vtkXMLTreeReader_GetReadTagName(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetReadTagName(bool _arg) {
    vtkd_im.vtkXMLTreeReader_SetReadTagName(cast(void*)swigCPtr, _arg);
  }

  public void ReadTagNameOn() {
    vtkd_im.vtkXMLTreeReader_ReadTagNameOn(cast(void*)swigCPtr);
  }

  public void ReadTagNameOff() {
    vtkd_im.vtkXMLTreeReader_ReadTagNameOff(cast(void*)swigCPtr);
  }

  public static void TagNameField(string value) @property {
    vtkd_im.vtkXMLTreeReader_TagNameField_set((value ? std.string.toStringz(value) : null));
  }

  public static string TagNameField() @property {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_TagNameField_get());
    return ret;
  }

  public static void CharDataField(string value) @property {
    vtkd_im.vtkXMLTreeReader_CharDataField_set((value ? std.string.toStringz(value) : null));
  }

  public static string CharDataField() @property {
    string ret = std.conv.to!string(vtkd_im.vtkXMLTreeReader_CharDataField_get());
    return ret;
  }
}
