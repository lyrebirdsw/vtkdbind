/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkProbeFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataObject;
static import vtkAlgorithmOutput;
static import vtkIdTypeArray;
static import vtkDataSetAlgorithm;

class vtkProbeFilter : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkProbeFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkProbeFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkProbeFilter(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkProbeFilter New() {
    void* cPtr = vtkd_im.vtkProbeFilter_New();
    vtkProbeFilter ret = (cPtr is null) ? null : new vtkProbeFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkProbeFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkProbeFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkProbeFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkProbeFilter ret = (cPtr is null) ? null : new vtkProbeFilter(cPtr, false);
    return ret;
  }

  public vtkProbeFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkProbeFilter_NewInstance(cast(void*)swigCPtr);
    vtkProbeFilter ret = (cPtr is null) ? null : new vtkProbeFilter(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public void SetSourceData(vtkDataObject.vtkDataObject source) {
    vtkd_im.vtkProbeFilter_SetSourceData(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(source));
  }

  public vtkDataObject.vtkDataObject GetSource() {
    void* cPtr = vtkd_im.vtkProbeFilter_GetSource(cast(void*)swigCPtr);
    vtkDataObject.vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject.vtkDataObject(cPtr, false);
    return ret;
  }

  public void SetSourceConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkProbeFilter_SetSourceConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetSpatialMatch(int _arg) {
    vtkd_im.vtkProbeFilter_SetSpatialMatch(cast(void*)swigCPtr, _arg);
  }

  public int GetSpatialMatch() {
    auto ret = vtkd_im.vtkProbeFilter_GetSpatialMatch(cast(void*)swigCPtr);
    return ret;
  }

  public void SpatialMatchOn() {
    vtkd_im.vtkProbeFilter_SpatialMatchOn(cast(void*)swigCPtr);
  }

  public void SpatialMatchOff() {
    vtkd_im.vtkProbeFilter_SpatialMatchOff(cast(void*)swigCPtr);
  }

  public vtkIdTypeArray.vtkIdTypeArray GetValidPoints() {
    void* cPtr = vtkd_im.vtkProbeFilter_GetValidPoints(cast(void*)swigCPtr);
    vtkIdTypeArray.vtkIdTypeArray ret = (cPtr is null) ? null : new vtkIdTypeArray.vtkIdTypeArray(cPtr, false);
    return ret;
  }

  public void SetValidPointMaskArrayName(string _arg) {
    vtkd_im.vtkProbeFilter_SetValidPointMaskArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetValidPointMaskArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkProbeFilter_GetValidPointMaskArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetPassCellArrays(int _arg) {
    vtkd_im.vtkProbeFilter_SetPassCellArrays(cast(void*)swigCPtr, _arg);
  }

  public int GetPassCellArrays() {
    auto ret = vtkd_im.vtkProbeFilter_GetPassCellArrays(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPassPointArrays(int _arg) {
    vtkd_im.vtkProbeFilter_SetPassPointArrays(cast(void*)swigCPtr, _arg);
  }

  public int GetPassPointArrays() {
    auto ret = vtkd_im.vtkProbeFilter_GetPassPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkProbeFilter(), true);
  }
}
