/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTableToGraph;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkMutableDirectedGraph;
static import vtkStringArray;
static import vtkBitArray;
static import vtkAlgorithmOutput;
static import vtkGraphAlgorithm;

class vtkTableToGraph : vtkGraphAlgorithm.vtkGraphAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTableToGraph_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTableToGraph obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTableToGraph New() {
    void* cPtr = vtkd_im.vtkTableToGraph_New();
    vtkTableToGraph ret = (cPtr is null) ? null : new vtkTableToGraph(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTableToGraph_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTableToGraph SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTableToGraph_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTableToGraph ret = (cPtr is null) ? null : new vtkTableToGraph(cPtr, false);
    return ret;
  }

  public vtkTableToGraph NewInstance() const {
    void* cPtr = vtkd_im.vtkTableToGraph_NewInstance(cast(void*)swigCPtr);
    vtkTableToGraph ret = (cPtr is null) ? null : new vtkTableToGraph(cPtr, false);
    return ret;
  }

  alias vtkGraphAlgorithm.vtkGraphAlgorithm.NewInstance NewInstance;

  public void AddLinkVertex(string column, string domain, int hidden) {
    vtkd_im.vtkTableToGraph_AddLinkVertex__SWIG_0(cast(void*)swigCPtr, (column ? std.string.toStringz(column) : null), (domain ? std.string.toStringz(domain) : null), hidden);
  }

  public void AddLinkVertex(string column, string domain) {
    vtkd_im.vtkTableToGraph_AddLinkVertex__SWIG_1(cast(void*)swigCPtr, (column ? std.string.toStringz(column) : null), (domain ? std.string.toStringz(domain) : null));
  }

  public void AddLinkVertex(string column) {
    vtkd_im.vtkTableToGraph_AddLinkVertex__SWIG_2(cast(void*)swigCPtr, (column ? std.string.toStringz(column) : null));
  }

  public void ClearLinkVertices() {
    vtkd_im.vtkTableToGraph_ClearLinkVertices(cast(void*)swigCPtr);
  }

  public void AddLinkEdge(string column1, string column2) {
    vtkd_im.vtkTableToGraph_AddLinkEdge(cast(void*)swigCPtr, (column1 ? std.string.toStringz(column1) : null), (column2 ? std.string.toStringz(column2) : null));
  }

  public void ClearLinkEdges() {
    vtkd_im.vtkTableToGraph_ClearLinkEdges(cast(void*)swigCPtr);
  }

  public vtkMutableDirectedGraph.vtkMutableDirectedGraph GetLinkGraph() {
    void* cPtr = vtkd_im.vtkTableToGraph_GetLinkGraph(cast(void*)swigCPtr);
    vtkMutableDirectedGraph.vtkMutableDirectedGraph ret = (cPtr is null) ? null : new vtkMutableDirectedGraph.vtkMutableDirectedGraph(cPtr, false);
    return ret;
  }

  public void SetLinkGraph(vtkMutableDirectedGraph.vtkMutableDirectedGraph g) {
    vtkd_im.vtkTableToGraph_SetLinkGraph(cast(void*)swigCPtr, vtkMutableDirectedGraph.vtkMutableDirectedGraph.swigGetCPtr(g));
  }

  public void LinkColumnPath(vtkStringArray.vtkStringArray column, vtkStringArray.vtkStringArray domain, vtkBitArray.vtkBitArray hidden) {
    vtkd_im.vtkTableToGraph_LinkColumnPath__SWIG_0(cast(void*)swigCPtr, vtkStringArray.vtkStringArray.swigGetCPtr(column), vtkStringArray.vtkStringArray.swigGetCPtr(domain), vtkBitArray.vtkBitArray.swigGetCPtr(hidden));
  }

  public void LinkColumnPath(vtkStringArray.vtkStringArray column, vtkStringArray.vtkStringArray domain) {
    vtkd_im.vtkTableToGraph_LinkColumnPath__SWIG_1(cast(void*)swigCPtr, vtkStringArray.vtkStringArray.swigGetCPtr(column), vtkStringArray.vtkStringArray.swigGetCPtr(domain));
  }

  public void LinkColumnPath(vtkStringArray.vtkStringArray column) {
    vtkd_im.vtkTableToGraph_LinkColumnPath__SWIG_2(cast(void*)swigCPtr, vtkStringArray.vtkStringArray.swigGetCPtr(column));
  }

  public void SetDirected(bool _arg) {
    vtkd_im.vtkTableToGraph_SetDirected(cast(void*)swigCPtr, _arg);
  }

  public bool GetDirected() {
    bool ret = vtkd_im.vtkTableToGraph_GetDirected(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void DirectedOn() {
    vtkd_im.vtkTableToGraph_DirectedOn(cast(void*)swigCPtr);
  }

  public void DirectedOff() {
    vtkd_im.vtkTableToGraph_DirectedOff(cast(void*)swigCPtr);
  }

  public void SetVertexTableConnection(vtkAlgorithmOutput.vtkAlgorithmOutput arg0) {
    vtkd_im.vtkTableToGraph_SetVertexTableConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(arg0));
  }
}
