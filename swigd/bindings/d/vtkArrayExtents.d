/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkArrayExtents;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkArrayRange;
static import vtkArrayCoordinates;

class vtkArrayExtents {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkArrayExtents obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkArrayExtents(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkArrayExtents__SWIG_0(), true);
  }

  public this(long i) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_1(i), true);
  }

  public this(vtkArrayRange.vtkArrayRange i) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_2(vtkArrayRange.vtkArrayRange.swigGetCPtr(i)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(long i, long j) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_3(i, j), true);
  }

  public this(vtkArrayRange.vtkArrayRange i, vtkArrayRange.vtkArrayRange j) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_4(vtkArrayRange.vtkArrayRange.swigGetCPtr(i), vtkArrayRange.vtkArrayRange.swigGetCPtr(j)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(long i, long j, long k) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_5(i, j, k), true);
  }

  public this(vtkArrayRange.vtkArrayRange i, vtkArrayRange.vtkArrayRange j, vtkArrayRange.vtkArrayRange k) {
    this(vtkd_im.new_vtkArrayExtents__SWIG_6(vtkArrayRange.vtkArrayRange.swigGetCPtr(i), vtkArrayRange.vtkArrayRange.swigGetCPtr(j), vtkArrayRange.vtkArrayRange.swigGetCPtr(k)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static vtkArrayExtents Uniform(long n, long m) {
    vtkArrayExtents ret = new vtkArrayExtents(vtkd_im.vtkArrayExtents_Uniform(n, m), true);
    return ret;
  }

  public void Append(vtkArrayRange.vtkArrayRange extent) {
    vtkd_im.vtkArrayExtents_Append(cast(void*)swigCPtr, vtkArrayRange.vtkArrayRange.swigGetCPtr(extent));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public long GetDimensions() const {
    auto ret = vtkd_im.vtkArrayExtents_GetDimensions(cast(void*)swigCPtr);
    return ret;
  }

  public ulong GetSize() const {
    auto ret = vtkd_im.vtkArrayExtents_GetSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDimensions(long dimensions) {
    vtkd_im.vtkArrayExtents_SetDimensions(cast(void*)swigCPtr, dimensions);
  }

  public vtkArrayRange.vtkArrayRange opIndex(long i) {
    vtkArrayRange.vtkArrayRange ret = new vtkArrayRange.vtkArrayRange(vtkd_im.vtkArrayExtents_opIndex__SWIG_0(cast(void*)swigCPtr, i), false);
    return ret;
  }

  public vtkArrayRange.vtkArrayRange GetExtent(long i) const {
    vtkArrayRange.vtkArrayRange ret = new vtkArrayRange.vtkArrayRange(vtkd_im.vtkArrayExtents_GetExtent(cast(void*)swigCPtr, i), true);
    return ret;
  }

  public void SetExtent(long i, vtkArrayRange.vtkArrayRange arg1) {
    vtkd_im.vtkArrayExtents_SetExtent(cast(void*)swigCPtr, i, vtkArrayRange.vtkArrayRange.swigGetCPtr(arg1));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public bool swigOpEquals(vtkArrayExtents rhs) const {
    bool ret = vtkd_im.vtkArrayExtents_swigOpEquals(cast(void*)swigCPtr, vtkArrayExtents.swigGetCPtr(rhs)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool NotEqual(vtkArrayExtents rhs) const {
    bool ret = vtkd_im.vtkArrayExtents_NotEqual(cast(void*)swigCPtr, vtkArrayExtents.swigGetCPtr(rhs)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool ZeroBased() const {
    bool ret = vtkd_im.vtkArrayExtents_ZeroBased(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool SameShape(vtkArrayExtents rhs) const {
    bool ret = vtkd_im.vtkArrayExtents_SameShape(cast(void*)swigCPtr, vtkArrayExtents.swigGetCPtr(rhs)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void GetLeftToRightCoordinatesN(ulong n, vtkArrayCoordinates.vtkArrayCoordinates coordinates) const {
    vtkd_im.vtkArrayExtents_GetLeftToRightCoordinatesN(cast(void*)swigCPtr, n, vtkArrayCoordinates.vtkArrayCoordinates.swigGetCPtr(coordinates));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetRightToLeftCoordinatesN(ulong n, vtkArrayCoordinates.vtkArrayCoordinates coordinates) const {
    vtkd_im.vtkArrayExtents_GetRightToLeftCoordinatesN(cast(void*)swigCPtr, n, vtkArrayCoordinates.vtkArrayCoordinates.swigGetCPtr(coordinates));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public bool Contains(vtkArrayExtents extents) const {
    bool ret = vtkd_im.vtkArrayExtents_Contains__SWIG_0(cast(void*)swigCPtr, vtkArrayExtents.swigGetCPtr(extents)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Contains(vtkArrayCoordinates.vtkArrayCoordinates coordinates) const {
    bool ret = vtkd_im.vtkArrayExtents_Contains__SWIG_1(cast(void*)swigCPtr, vtkArrayCoordinates.vtkArrayCoordinates.swigGetCPtr(coordinates)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }
}
