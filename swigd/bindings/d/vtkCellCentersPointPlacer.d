/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCellCentersPointPlacer;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkProp;
static import vtkRenderer;
static import SWIGTYPE_p_double;
static import vtkCellPicker;
static import vtkPointPlacer;

class vtkCellCentersPointPlacer : vtkPointPlacer.vtkPointPlacer {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCellCentersPointPlacer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCellCentersPointPlacer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  enum {
    ParametricCenter = 0,
    CellPointsMean,
    None
  }

  public static vtkCellCentersPointPlacer New() {
    void* cPtr = vtkd_im.vtkCellCentersPointPlacer_New();
    vtkCellCentersPointPlacer ret = (cPtr is null) ? null : new vtkCellCentersPointPlacer(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCellCentersPointPlacer SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCellCentersPointPlacer_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCellCentersPointPlacer ret = (cPtr is null) ? null : new vtkCellCentersPointPlacer(cPtr, false);
    return ret;
  }

  public vtkCellCentersPointPlacer NewInstance() const {
    void* cPtr = vtkd_im.vtkCellCentersPointPlacer_NewInstance(cast(void*)swigCPtr);
    vtkCellCentersPointPlacer ret = (cPtr is null) ? null : new vtkCellCentersPointPlacer(cPtr, false);
    return ret;
  }

  alias vtkPointPlacer.vtkPointPlacer.NewInstance NewInstance;

  public void AddProp(vtkProp.vtkProp arg0) {
    vtkd_im.vtkCellCentersPointPlacer_AddProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(arg0));
  }

  public void RemoveViewProp(vtkProp.vtkProp prop) {
    vtkd_im.vtkCellCentersPointPlacer_RemoveViewProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(prop));
  }

  public void RemoveAllProps() {
    vtkd_im.vtkCellCentersPointPlacer_RemoveAllProps(cast(void*)swigCPtr);
  }

  public int HasProp(vtkProp.vtkProp arg0) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_HasProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(arg0));
    return ret;
  }

  public int GetNumberOfProps() {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_GetNumberOfProps(cast(void*)swigCPtr);
    return ret;
  }

  public override int ComputeWorldPosition(vtkRenderer.vtkRenderer ren, SWIGTYPE_p_double.SWIGTYPE_p_double displayPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldOrient) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_ComputeWorldPosition__SWIG_0(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(displayPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldOrient));
    return ret;
  }

  public override int ComputeWorldPosition(vtkRenderer.vtkRenderer ren, SWIGTYPE_p_double.SWIGTYPE_p_double displayPos, SWIGTYPE_p_double.SWIGTYPE_p_double refWorldPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldOrient) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_ComputeWorldPosition__SWIG_1(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(displayPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(refWorldPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldOrient));
    return ret;
  }

  public override int ValidateWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double worldPos) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_ValidateWorldPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos));
    return ret;
  }

  public override int ValidateWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double worldPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldOrient) {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_ValidateWorldPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldOrient));
    return ret;
  }

  public vtkCellPicker.vtkCellPicker GetCellPicker() {
    void* cPtr = vtkd_im.vtkCellCentersPointPlacer_GetCellPicker(cast(void*)swigCPtr);
    vtkCellPicker.vtkCellPicker ret = (cPtr is null) ? null : new vtkCellPicker.vtkCellPicker(cPtr, false);
    return ret;
  }

  public void SetMode(int _arg) {
    vtkd_im.vtkCellCentersPointPlacer_SetMode(cast(void*)swigCPtr, _arg);
  }

  public int GetMode() {
    auto ret = vtkd_im.vtkCellCentersPointPlacer_GetMode(cast(void*)swigCPtr);
    return ret;
  }
}
