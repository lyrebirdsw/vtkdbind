/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTemporalFractal;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAlgorithm;

class vtkTemporalFractal : vtkAlgorithm.vtkAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTemporalFractal_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTemporalFractal obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTemporalFractal New() {
    void* cPtr = vtkd_im.vtkTemporalFractal_New();
    vtkTemporalFractal ret = (cPtr is null) ? null : new vtkTemporalFractal(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTemporalFractal_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTemporalFractal SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTemporalFractal_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTemporalFractal ret = (cPtr is null) ? null : new vtkTemporalFractal(cPtr, false);
    return ret;
  }

  public vtkTemporalFractal NewInstance() const {
    void* cPtr = vtkd_im.vtkTemporalFractal_NewInstance(cast(void*)swigCPtr);
    vtkTemporalFractal ret = (cPtr is null) ? null : new vtkTemporalFractal(cPtr, false);
    return ret;
  }

  alias vtkAlgorithm.vtkAlgorithm.NewInstance NewInstance;

  public void SetFractalValue(float _arg) {
    vtkd_im.vtkTemporalFractal_SetFractalValue(cast(void*)swigCPtr, _arg);
  }

  public float GetFractalValue() {
    auto ret = vtkd_im.vtkTemporalFractal_GetFractalValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumLevel(int _arg) {
    vtkd_im.vtkTemporalFractal_SetMaximumLevel(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumLevel() {
    auto ret = vtkd_im.vtkTemporalFractal_GetMaximumLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDimensions(int _arg) {
    vtkd_im.vtkTemporalFractal_SetDimensions(cast(void*)swigCPtr, _arg);
  }

  public int GetDimensions() {
    auto ret = vtkd_im.vtkTemporalFractal_GetDimensions(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGhostLevels(int _arg) {
    vtkd_im.vtkTemporalFractal_SetGhostLevels(cast(void*)swigCPtr, _arg);
  }

  public int GetGhostLevels() {
    auto ret = vtkd_im.vtkTemporalFractal_GetGhostLevels(cast(void*)swigCPtr);
    return ret;
  }

  public void GhostLevelsOn() {
    vtkd_im.vtkTemporalFractal_GhostLevelsOn(cast(void*)swigCPtr);
  }

  public void GhostLevelsOff() {
    vtkd_im.vtkTemporalFractal_GhostLevelsOff(cast(void*)swigCPtr);
  }

  public void SetGenerateRectilinearGrids(int _arg) {
    vtkd_im.vtkTemporalFractal_SetGenerateRectilinearGrids(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateRectilinearGrids() {
    auto ret = vtkd_im.vtkTemporalFractal_GetGenerateRectilinearGrids(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateRectilinearGridsOn() {
    vtkd_im.vtkTemporalFractal_GenerateRectilinearGridsOn(cast(void*)swigCPtr);
  }

  public void GenerateRectilinearGridsOff() {
    vtkd_im.vtkTemporalFractal_GenerateRectilinearGridsOff(cast(void*)swigCPtr);
  }

  public void SetDiscreteTimeSteps(int _arg) {
    vtkd_im.vtkTemporalFractal_SetDiscreteTimeSteps(cast(void*)swigCPtr, _arg);
  }

  public int GetDiscreteTimeSteps() {
    auto ret = vtkd_im.vtkTemporalFractal_GetDiscreteTimeSteps(cast(void*)swigCPtr);
    return ret;
  }

  public void DiscreteTimeStepsOn() {
    vtkd_im.vtkTemporalFractal_DiscreteTimeStepsOn(cast(void*)swigCPtr);
  }

  public void DiscreteTimeStepsOff() {
    vtkd_im.vtkTemporalFractal_DiscreteTimeStepsOff(cast(void*)swigCPtr);
  }

  public void SetTwoDimensional(int _arg) {
    vtkd_im.vtkTemporalFractal_SetTwoDimensional(cast(void*)swigCPtr, _arg);
  }

  public int GetTwoDimensional() {
    auto ret = vtkd_im.vtkTemporalFractal_GetTwoDimensional(cast(void*)swigCPtr);
    return ret;
  }

  public void TwoDimensionalOn() {
    vtkd_im.vtkTemporalFractal_TwoDimensionalOn(cast(void*)swigCPtr);
  }

  public void TwoDimensionalOff() {
    vtkd_im.vtkTemporalFractal_TwoDimensionalOff(cast(void*)swigCPtr);
  }

  public void SetAsymetric(int _arg) {
    vtkd_im.vtkTemporalFractal_SetAsymetric(cast(void*)swigCPtr, _arg);
  }

  public int GetAsymetric() {
    auto ret = vtkd_im.vtkTemporalFractal_GetAsymetric(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAdaptiveSubdivision(int _arg) {
    vtkd_im.vtkTemporalFractal_SetAdaptiveSubdivision(cast(void*)swigCPtr, _arg);
  }

  public int GetAdaptiveSubdivision() {
    auto ret = vtkd_im.vtkTemporalFractal_GetAdaptiveSubdivision(cast(void*)swigCPtr);
    return ret;
  }

  public void AdaptiveSubdivisionOn() {
    vtkd_im.vtkTemporalFractal_AdaptiveSubdivisionOn(cast(void*)swigCPtr);
  }

  public void AdaptiveSubdivisionOff() {
    vtkd_im.vtkTemporalFractal_AdaptiveSubdivisionOff(cast(void*)swigCPtr);
  }
}
