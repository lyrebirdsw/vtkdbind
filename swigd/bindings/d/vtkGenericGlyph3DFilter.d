/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericGlyph3DFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkGenericGlyph3DFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericGlyph3DFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericGlyph3DFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericGlyph3DFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericGlyph3DFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericGlyph3DFilter ret = (cPtr is null) ? null : new vtkGenericGlyph3DFilter(cPtr, false);
    return ret;
  }

  public vtkGenericGlyph3DFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericGlyph3DFilter_NewInstance(cast(void*)swigCPtr);
    vtkGenericGlyph3DFilter ret = (cPtr is null) ? null : new vtkGenericGlyph3DFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkGenericGlyph3DFilter New() {
    void* cPtr = vtkd_im.vtkGenericGlyph3DFilter_New();
    vtkGenericGlyph3DFilter ret = (cPtr is null) ? null : new vtkGenericGlyph3DFilter(cPtr, false);
    return ret;
  }

  public void SetSourceData(vtkPolyData.vtkPolyData pd) {
    vtkd_im.vtkGenericGlyph3DFilter_SetSourceData__SWIG_0(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(pd));
  }

  public void SetSourceData(int id, vtkPolyData.vtkPolyData pd) {
    vtkd_im.vtkGenericGlyph3DFilter_SetSourceData__SWIG_1(cast(void*)swigCPtr, id, vtkPolyData.vtkPolyData.swigGetCPtr(pd));
  }

  public vtkPolyData.vtkPolyData GetSource(int id) {
    void* cPtr = vtkd_im.vtkGenericGlyph3DFilter_GetSource__SWIG_0(cast(void*)swigCPtr, id);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public vtkPolyData.vtkPolyData GetSource() {
    void* cPtr = vtkd_im.vtkGenericGlyph3DFilter_GetSource__SWIG_1(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetScaling(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaling(cast(void*)swigCPtr, _arg);
  }

  public void ScalingOn() {
    vtkd_im.vtkGenericGlyph3DFilter_ScalingOn(cast(void*)swigCPtr);
  }

  public void ScalingOff() {
    vtkd_im.vtkGenericGlyph3DFilter_ScalingOff(cast(void*)swigCPtr);
  }

  public int GetScaling() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetScaling(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScaleMode(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleMode(cast(void*)swigCPtr, _arg);
  }

  public int GetScaleMode() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetScaleMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScaleModeToScaleByScalar() {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleModeToScaleByScalar(cast(void*)swigCPtr);
  }

  public void SetScaleModeToScaleByVector() {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleModeToScaleByVector(cast(void*)swigCPtr);
  }

  public void SetScaleModeToScaleByVectorComponents() {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleModeToScaleByVectorComponents(cast(void*)swigCPtr);
  }

  public void SetScaleModeToDataScalingOff() {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleModeToDataScalingOff(cast(void*)swigCPtr);
  }

  public string GetScaleModeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetScaleModeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetColorMode(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetColorMode(cast(void*)swigCPtr, _arg);
  }

  public int GetColorMode() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetColorMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetColorModeToColorByScale() {
    vtkd_im.vtkGenericGlyph3DFilter_SetColorModeToColorByScale(cast(void*)swigCPtr);
  }

  public void SetColorModeToColorByScalar() {
    vtkd_im.vtkGenericGlyph3DFilter_SetColorModeToColorByScalar(cast(void*)swigCPtr);
  }

  public void SetColorModeToColorByVector() {
    vtkd_im.vtkGenericGlyph3DFilter_SetColorModeToColorByVector(cast(void*)swigCPtr);
  }

  public string GetColorModeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetColorModeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetScaleFactor(double _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetScaleFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetScaleFactor() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetScaleFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRange(double _arg1, double _arg2) {
    vtkd_im.vtkGenericGlyph3DFilter_SetRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetRange() {
    auto ret = cast(double*)vtkd_im.vtkGenericGlyph3DFilter_GetRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRange(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkGenericGlyph3DFilter_GetRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetOrient(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetOrient(cast(void*)swigCPtr, _arg);
  }

  public void OrientOn() {
    vtkd_im.vtkGenericGlyph3DFilter_OrientOn(cast(void*)swigCPtr);
  }

  public void OrientOff() {
    vtkd_im.vtkGenericGlyph3DFilter_OrientOff(cast(void*)swigCPtr);
  }

  public int GetOrient() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetOrient(cast(void*)swigCPtr);
    return ret;
  }

  public void SetClamping(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetClamping(cast(void*)swigCPtr, _arg);
  }

  public void ClampingOn() {
    vtkd_im.vtkGenericGlyph3DFilter_ClampingOn(cast(void*)swigCPtr);
  }

  public void ClampingOff() {
    vtkd_im.vtkGenericGlyph3DFilter_ClampingOff(cast(void*)swigCPtr);
  }

  public int GetClamping() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetClamping(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVectorMode(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetVectorMode(cast(void*)swigCPtr, _arg);
  }

  public int GetVectorMode() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetVectorMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVectorModeToUseVector() {
    vtkd_im.vtkGenericGlyph3DFilter_SetVectorModeToUseVector(cast(void*)swigCPtr);
  }

  public void SetVectorModeToUseNormal() {
    vtkd_im.vtkGenericGlyph3DFilter_SetVectorModeToUseNormal(cast(void*)swigCPtr);
  }

  public void SetVectorModeToVectorRotationOff() {
    vtkd_im.vtkGenericGlyph3DFilter_SetVectorModeToVectorRotationOff(cast(void*)swigCPtr);
  }

  public string GetVectorModeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetVectorModeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetIndexMode(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetIndexMode(cast(void*)swigCPtr, _arg);
  }

  public int GetIndexMode() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetIndexMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIndexModeToScalar() {
    vtkd_im.vtkGenericGlyph3DFilter_SetIndexModeToScalar(cast(void*)swigCPtr);
  }

  public void SetIndexModeToVector() {
    vtkd_im.vtkGenericGlyph3DFilter_SetIndexModeToVector(cast(void*)swigCPtr);
  }

  public void SetIndexModeToOff() {
    vtkd_im.vtkGenericGlyph3DFilter_SetIndexModeToOff(cast(void*)swigCPtr);
  }

  public string GetIndexModeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetIndexModeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetGeneratePointIds(int _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetGeneratePointIds(cast(void*)swigCPtr, _arg);
  }

  public int GetGeneratePointIds() {
    auto ret = vtkd_im.vtkGenericGlyph3DFilter_GetGeneratePointIds(cast(void*)swigCPtr);
    return ret;
  }

  public void GeneratePointIdsOn() {
    vtkd_im.vtkGenericGlyph3DFilter_GeneratePointIdsOn(cast(void*)swigCPtr);
  }

  public void GeneratePointIdsOff() {
    vtkd_im.vtkGenericGlyph3DFilter_GeneratePointIdsOff(cast(void*)swigCPtr);
  }

  public void SetPointIdsName(string _arg) {
    vtkd_im.vtkGenericGlyph3DFilter_SetPointIdsName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetPointIdsName() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetPointIdsName(cast(void*)swigCPtr));
    return ret;
  }

  public string GetInputScalarsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetInputScalarsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectInputScalars(string fieldName) {
    vtkd_im.vtkGenericGlyph3DFilter_SelectInputScalars(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }

  public string GetInputVectorsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetInputVectorsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectInputVectors(string fieldName) {
    vtkd_im.vtkGenericGlyph3DFilter_SelectInputVectors(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }

  public string GetInputNormalsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericGlyph3DFilter_GetInputNormalsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectInputNormals(string fieldName) {
    vtkd_im.vtkGenericGlyph3DFilter_SelectInputNormals(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }
}
