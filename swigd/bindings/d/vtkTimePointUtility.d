/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTimePointUtility;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;

class vtkTimePointUtility : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTimePointUtility_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTimePointUtility obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTimePointUtility New() {
    void* cPtr = vtkd_im.vtkTimePointUtility_New();
    vtkTimePointUtility ret = (cPtr is null) ? null : new vtkTimePointUtility(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTimePointUtility_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTimePointUtility SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTimePointUtility_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTimePointUtility ret = (cPtr is null) ? null : new vtkTimePointUtility(cPtr, false);
    return ret;
  }

  public vtkTimePointUtility NewInstance() const {
    void* cPtr = vtkd_im.vtkTimePointUtility_NewInstance(cast(void*)swigCPtr);
    vtkTimePointUtility ret = (cPtr is null) ? null : new vtkTimePointUtility(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static ulong DateToTimePoint(int year, int month, int day) {
    auto ret = vtkd_im.vtkTimePointUtility_DateToTimePoint(year, month, day);
    return ret;
  }

  public static ulong TimeToTimePoint(int hour, int minute, int second, int millis) {
    auto ret = vtkd_im.vtkTimePointUtility_TimeToTimePoint__SWIG_0(hour, minute, second, millis);
    return ret;
  }

  public static ulong TimeToTimePoint(int hour, int minute, int second) {
    auto ret = vtkd_im.vtkTimePointUtility_TimeToTimePoint__SWIG_1(hour, minute, second);
    return ret;
  }

  public static ulong DateTimeToTimePoint(int year, int month, int day, int hour, int minute, int sec, int millis) {
    auto ret = vtkd_im.vtkTimePointUtility_DateTimeToTimePoint__SWIG_0(year, month, day, hour, minute, sec, millis);
    return ret;
  }

  public static ulong DateTimeToTimePoint(int year, int month, int day, int hour, int minute, int sec) {
    auto ret = vtkd_im.vtkTimePointUtility_DateTimeToTimePoint__SWIG_1(year, month, day, hour, minute, sec);
    return ret;
  }

  public static void GetDate(ulong time, int* year, int* month, int* day) {
    vtkd_im.vtkTimePointUtility_GetDate(time, cast(void*)year, cast(void*)month, cast(void*)day);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static void GetTime(ulong time, int* hour, int* minute, int* second, int* millis) {
    vtkd_im.vtkTimePointUtility_GetTime(time, cast(void*)hour, cast(void*)minute, cast(void*)second, cast(void*)millis);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static void GetDateTime(ulong time, int* year, int* month, int* day, int* hour, int* minute, int* second, int* millis) {
    vtkd_im.vtkTimePointUtility_GetDateTime(time, cast(void*)year, cast(void*)month, cast(void*)day, cast(void*)hour, cast(void*)minute, cast(void*)second, cast(void*)millis);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static int GetYear(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetYear(time);
    return ret;
  }

  public static int GetMonth(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetMonth(time);
    return ret;
  }

  public static int GetDay(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetDay(time);
    return ret;
  }

  public static int GetHour(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetHour(time);
    return ret;
  }

  public static int GetMinute(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetMinute(time);
    return ret;
  }

  public static int GetSecond(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetSecond(time);
    return ret;
  }

  public static int GetMillisecond(ulong time) {
    auto ret = vtkd_im.vtkTimePointUtility_GetMillisecond(time);
    return ret;
  }

  public static string TimePointToISO8601(ulong arg0, int format) {
    string ret = std.conv.to!string(vtkd_im.vtkTimePointUtility_TimePointToISO8601__SWIG_0(arg0, format));
    return ret;
  }

  public static string TimePointToISO8601(ulong arg0) {
    string ret = std.conv.to!string(vtkd_im.vtkTimePointUtility_TimePointToISO8601__SWIG_1(arg0));
    return ret;
  }
}
