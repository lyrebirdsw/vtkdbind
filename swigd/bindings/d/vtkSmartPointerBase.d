/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSmartPointerBase;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGarbageCollector;

class vtkSmartPointerBase {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkSmartPointerBase obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkSmartPointerBase(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkSmartPointerBase__SWIG_0(), true);
  }

  public this(vtkObjectBase.vtkObjectBase r) {
    this(vtkd_im.new_vtkSmartPointerBase__SWIG_1(vtkObjectBase.vtkObjectBase.swigGetCPtr(r)), true);
  }

  public this(vtkSmartPointerBase r) {
    this(vtkd_im.new_vtkSmartPointerBase__SWIG_2(vtkSmartPointerBase.swigGetCPtr(r)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkSmartPointerBase Equal(vtkObjectBase.vtkObjectBase r) {
    vtkSmartPointerBase ret = new vtkSmartPointerBase(vtkd_im.vtkSmartPointerBase_Equal__SWIG_0(cast(void*)swigCPtr, vtkObjectBase.vtkObjectBase.swigGetCPtr(r)), false);
    return ret;
  }

  public vtkSmartPointerBase Equal(vtkSmartPointerBase r) {
    vtkSmartPointerBase ret = new vtkSmartPointerBase(vtkd_im.vtkSmartPointerBase_Equal__SWIG_1(cast(void*)swigCPtr, vtkSmartPointerBase.swigGetCPtr(r)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkObjectBase.vtkObjectBase GetPointer() const {
    void* cPtr = vtkd_im.vtkSmartPointerBase_GetPointer(cast(void*)swigCPtr);
    vtkObjectBase.vtkObjectBase ret = (cPtr is null) ? null : new vtkObjectBase.vtkObjectBase(cPtr, false);
    return ret;
  }

  public void Report(vtkGarbageCollector.vtkGarbageCollector collector, string desc) {
    vtkd_im.vtkSmartPointerBase_Report(cast(void*)swigCPtr, vtkGarbageCollector.vtkGarbageCollector.swigGetCPtr(collector), (desc ? std.string.toStringz(desc) : null));
  }
}
