/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSelectVisiblePoints;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkSelectVisiblePoints : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSelectVisiblePoints_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSelectVisiblePoints obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSelectVisiblePoints_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSelectVisiblePoints SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSelectVisiblePoints_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSelectVisiblePoints ret = (cPtr is null) ? null : new vtkSelectVisiblePoints(cPtr, false);
    return ret;
  }

  public vtkSelectVisiblePoints NewInstance() const {
    void* cPtr = vtkd_im.vtkSelectVisiblePoints_NewInstance(cast(void*)swigCPtr);
    vtkSelectVisiblePoints ret = (cPtr is null) ? null : new vtkSelectVisiblePoints(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkSelectVisiblePoints New() {
    void* cPtr = vtkd_im.vtkSelectVisiblePoints_New();
    vtkSelectVisiblePoints ret = (cPtr is null) ? null : new vtkSelectVisiblePoints(cPtr, false);
    return ret;
  }

  public void SetRenderer(vtkRenderer.vtkRenderer ren) {
    vtkd_im.vtkSelectVisiblePoints_SetRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren));
  }

  public vtkRenderer.vtkRenderer GetRenderer() {
    void* cPtr = vtkd_im.vtkSelectVisiblePoints_GetRenderer(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }

  public void SetSelectionWindow(int _arg) {
    vtkd_im.vtkSelectVisiblePoints_SetSelectionWindow(cast(void*)swigCPtr, _arg);
  }

  public int GetSelectionWindow() {
    auto ret = vtkd_im.vtkSelectVisiblePoints_GetSelectionWindow(cast(void*)swigCPtr);
    return ret;
  }

  public void SelectionWindowOn() {
    vtkd_im.vtkSelectVisiblePoints_SelectionWindowOn(cast(void*)swigCPtr);
  }

  public void SelectionWindowOff() {
    vtkd_im.vtkSelectVisiblePoints_SelectionWindowOff(cast(void*)swigCPtr);
  }

  public void SetSelection(int _arg1, int _arg2, int _arg3, int _arg4) {
    vtkd_im.vtkSelectVisiblePoints_SetSelection__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4);
  }

  public void SetSelection(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkSelectVisiblePoints_SetSelection__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetSelection() {
    auto ret = cast(int*)vtkd_im.vtkSelectVisiblePoints_GetSelection__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSelection(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkSelectVisiblePoints_GetSelection__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public void SetSelectInvisible(int _arg) {
    vtkd_im.vtkSelectVisiblePoints_SetSelectInvisible(cast(void*)swigCPtr, _arg);
  }

  public int GetSelectInvisible() {
    auto ret = vtkd_im.vtkSelectVisiblePoints_GetSelectInvisible(cast(void*)swigCPtr);
    return ret;
  }

  public void SelectInvisibleOn() {
    vtkd_im.vtkSelectVisiblePoints_SelectInvisibleOn(cast(void*)swigCPtr);
  }

  public void SelectInvisibleOff() {
    vtkd_im.vtkSelectVisiblePoints_SelectInvisibleOff(cast(void*)swigCPtr);
  }

  public void SetTolerance(double _arg) {
    vtkd_im.vtkSelectVisiblePoints_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public double GetToleranceMinValue() {
    auto ret = vtkd_im.vtkSelectVisiblePoints_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkSelectVisiblePoints_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTolerance() {
    auto ret = vtkd_im.vtkSelectVisiblePoints_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public float* Initialize(bool getZbuff) {
    auto ret = cast(float*)vtkd_im.vtkSelectVisiblePoints_Initialize(cast(void*)swigCPtr, getZbuff);
    return ret;
  }

  public bool IsPointOccluded(SWIGTYPE_p_double.SWIGTYPE_p_double x, float* zPtr) {
    bool ret = vtkd_im.vtkSelectVisiblePoints_IsPointOccluded(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), cast(void*)zPtr) ? true : false;
    return ret;
  }
}
