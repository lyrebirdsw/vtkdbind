/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLightKit;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkRenderer;
static import SWIGTYPE_p_LightKitSubType;
static import SWIGTYPE_p_LightKitType;
static import vtkObject;

class vtkLightKit : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLightKit_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLightKit obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLightKit New() {
    void* cPtr = vtkd_im.vtkLightKit_New();
    vtkLightKit ret = (cPtr is null) ? null : new vtkLightKit(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLightKit_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLightKit SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLightKit_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLightKit ret = (cPtr is null) ? null : new vtkLightKit(cPtr, false);
    return ret;
  }

  public vtkLightKit NewInstance() const {
    void* cPtr = vtkd_im.vtkLightKit_NewInstance(cast(void*)swigCPtr);
    vtkLightKit ret = (cPtr is null) ? null : new vtkLightKit(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetKeyLightIntensity(double _arg) {
    vtkd_im.vtkLightKit_SetKeyLightIntensity(cast(void*)swigCPtr, _arg);
  }

  public double GetKeyLightIntensity() {
    auto ret = vtkd_im.vtkLightKit_GetKeyLightIntensity(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeyToFillRatio(double _arg) {
    vtkd_im.vtkLightKit_SetKeyToFillRatio(cast(void*)swigCPtr, _arg);
  }

  public double GetKeyToFillRatioMinValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToFillRatioMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToFillRatioMaxValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToFillRatioMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToFillRatio() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToFillRatio(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeyToHeadRatio(double _arg) {
    vtkd_im.vtkLightKit_SetKeyToHeadRatio(cast(void*)swigCPtr, _arg);
  }

  public double GetKeyToHeadRatioMinValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToHeadRatioMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToHeadRatioMaxValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToHeadRatioMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToHeadRatio() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToHeadRatio(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeyToBackRatio(double _arg) {
    vtkd_im.vtkLightKit_SetKeyToBackRatio(cast(void*)swigCPtr, _arg);
  }

  public double GetKeyToBackRatioMinValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToBackRatioMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToBackRatioMaxValue() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToBackRatioMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyToBackRatio() {
    auto ret = vtkd_im.vtkLightKit_GetKeyToBackRatio(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeyLightWarmth(double _arg) {
    vtkd_im.vtkLightKit_SetKeyLightWarmth(cast(void*)swigCPtr, _arg);
  }

  public double GetKeyLightWarmth() {
    auto ret = vtkd_im.vtkLightKit_GetKeyLightWarmth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFillLightWarmth(double _arg) {
    vtkd_im.vtkLightKit_SetFillLightWarmth(cast(void*)swigCPtr, _arg);
  }

  public double GetFillLightWarmth() {
    auto ret = vtkd_im.vtkLightKit_GetFillLightWarmth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHeadLightWarmth(double _arg) {
    vtkd_im.vtkLightKit_SetHeadLightWarmth(cast(void*)swigCPtr, _arg);
  }

  public double GetHeadLightWarmth() {
    auto ret = vtkd_im.vtkLightKit_GetHeadLightWarmth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBackLightWarmth(double _arg) {
    vtkd_im.vtkLightKit_SetBackLightWarmth(cast(void*)swigCPtr, _arg);
  }

  public double GetBackLightWarmth() {
    auto ret = vtkd_im.vtkLightKit_GetBackLightWarmth(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetKeyLightColor() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetKeyLightColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKeyLightColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetKeyLightColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double* GetFillLightColor() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetFillLightColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFillLightColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetFillLightColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double* GetHeadLightColor() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetHeadLightColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetHeadLightColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetHeadLightColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double* GetBackLightColor() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetBackLightColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBackLightColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetBackLightColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void MaintainLuminanceOn() {
    vtkd_im.vtkLightKit_MaintainLuminanceOn(cast(void*)swigCPtr);
  }

  public void MaintainLuminanceOff() {
    vtkd_im.vtkLightKit_MaintainLuminanceOff(cast(void*)swigCPtr);
  }

  public int GetMaintainLuminance() {
    auto ret = vtkd_im.vtkLightKit_GetMaintainLuminance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaintainLuminance(int _arg) {
    vtkd_im.vtkLightKit_SetMaintainLuminance(cast(void*)swigCPtr, _arg);
  }

  public void SetKeyLightAngle(double elevation, double azimuth) {
    vtkd_im.vtkLightKit_SetKeyLightAngle__SWIG_0(cast(void*)swigCPtr, elevation, azimuth);
  }

  public void SetKeyLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double angle) {
    vtkd_im.vtkLightKit_SetKeyLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(angle));
  }

  public void SetKeyLightElevation(double x) {
    vtkd_im.vtkLightKit_SetKeyLightElevation(cast(void*)swigCPtr, x);
  }

  public void SetKeyLightAzimuth(double x) {
    vtkd_im.vtkLightKit_SetKeyLightAzimuth(cast(void*)swigCPtr, x);
  }

  public double* GetKeyLightAngle() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetKeyLightAngle__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKeyLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetKeyLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double GetKeyLightElevation() {
    auto ret = vtkd_im.vtkLightKit_GetKeyLightElevation(cast(void*)swigCPtr);
    return ret;
  }

  public double GetKeyLightAzimuth() {
    auto ret = vtkd_im.vtkLightKit_GetKeyLightAzimuth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFillLightAngle(double elevation, double azimuth) {
    vtkd_im.vtkLightKit_SetFillLightAngle__SWIG_0(cast(void*)swigCPtr, elevation, azimuth);
  }

  public void SetFillLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double angle) {
    vtkd_im.vtkLightKit_SetFillLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(angle));
  }

  public void SetFillLightElevation(double x) {
    vtkd_im.vtkLightKit_SetFillLightElevation(cast(void*)swigCPtr, x);
  }

  public void SetFillLightAzimuth(double x) {
    vtkd_im.vtkLightKit_SetFillLightAzimuth(cast(void*)swigCPtr, x);
  }

  public double* GetFillLightAngle() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetFillLightAngle__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFillLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetFillLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double GetFillLightElevation() {
    auto ret = vtkd_im.vtkLightKit_GetFillLightElevation(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFillLightAzimuth() {
    auto ret = vtkd_im.vtkLightKit_GetFillLightAzimuth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBackLightAngle(double elevation, double azimuth) {
    vtkd_im.vtkLightKit_SetBackLightAngle__SWIG_0(cast(void*)swigCPtr, elevation, azimuth);
  }

  public void SetBackLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double angle) {
    vtkd_im.vtkLightKit_SetBackLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(angle));
  }

  public void SetBackLightElevation(double x) {
    vtkd_im.vtkLightKit_SetBackLightElevation(cast(void*)swigCPtr, x);
  }

  public void SetBackLightAzimuth(double x) {
    vtkd_im.vtkLightKit_SetBackLightAzimuth(cast(void*)swigCPtr, x);
  }

  public double* GetBackLightAngle() {
    auto ret = cast(double*)vtkd_im.vtkLightKit_GetBackLightAngle__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBackLightAngle(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLightKit_GetBackLightAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public double GetBackLightElevation() {
    auto ret = vtkd_im.vtkLightKit_GetBackLightElevation(cast(void*)swigCPtr);
    return ret;
  }

  public double GetBackLightAzimuth() {
    auto ret = vtkd_im.vtkLightKit_GetBackLightAzimuth(cast(void*)swigCPtr);
    return ret;
  }

  public void AddLightsToRenderer(vtkRenderer.vtkRenderer renderer) {
    vtkd_im.vtkLightKit_AddLightsToRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(renderer));
  }

  public void RemoveLightsFromRenderer(vtkRenderer.vtkRenderer renderer) {
    vtkd_im.vtkLightKit_RemoveLightsFromRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(renderer));
  }

  public void DeepCopy(vtkLightKit kit) {
    vtkd_im.vtkLightKit_DeepCopy(cast(void*)swigCPtr, vtkLightKit.swigGetCPtr(kit));
  }

  public void Update() {
    vtkd_im.vtkLightKit_Update(cast(void*)swigCPtr);
  }

  public static string GetStringFromType(int type) {
    string ret = std.conv.to!string(vtkd_im.vtkLightKit_GetStringFromType(type));
    return ret;
  }

  public static string GetStringFromSubType(int type) {
    string ret = std.conv.to!string(vtkd_im.vtkLightKit_GetStringFromSubType(type));
    return ret;
  }

  public static string GetShortStringFromSubType(int subtype) {
    string ret = std.conv.to!string(vtkd_im.vtkLightKit_GetShortStringFromSubType(subtype));
    return ret;
  }

  public static SWIGTYPE_p_LightKitSubType.SWIGTYPE_p_LightKitSubType GetSubType(SWIGTYPE_p_LightKitType.SWIGTYPE_p_LightKitType type, int i) {
    SWIGTYPE_p_LightKitSubType.SWIGTYPE_p_LightKitSubType ret = new SWIGTYPE_p_LightKitSubType.SWIGTYPE_p_LightKitSubType(vtkd_im.vtkLightKit_GetSubType(SWIGTYPE_p_LightKitType.SWIGTYPE_p_LightKitType.swigGetCPtr(type), i), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }
}
