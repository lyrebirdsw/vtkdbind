/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDemandDrivenPipeline;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformationRequestKey;
static import vtkInformationIntegerKey;
static import vtkDataObject;
static import vtkExecutive;

class vtkDemandDrivenPipeline : vtkExecutive.vtkExecutive {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDemandDrivenPipeline_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDemandDrivenPipeline obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDemandDrivenPipeline New() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_New();
    vtkDemandDrivenPipeline ret = (cPtr is null) ? null : new vtkDemandDrivenPipeline(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDemandDrivenPipeline SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDemandDrivenPipeline ret = (cPtr is null) ? null : new vtkDemandDrivenPipeline(cPtr, false);
    return ret;
  }

  public vtkDemandDrivenPipeline NewInstance() const {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_NewInstance(cast(void*)swigCPtr);
    vtkDemandDrivenPipeline ret = (cPtr is null) ? null : new vtkDemandDrivenPipeline(cPtr, false);
    return ret;
  }

  alias vtkExecutive.vtkExecutive.NewInstance NewInstance;

  public override int Update() {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_Update__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public override int Update(int port) {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_Update__SWIG_1(cast(void*)swigCPtr, port);
    return ret;
  }

  public core.stdc.config.c_ulong GetPipelineMTime() {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_GetPipelineMTime(cast(void*)swigCPtr);
    return ret;
  }

  public int SetReleaseDataFlag(int port, int n) {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_SetReleaseDataFlag(cast(void*)swigCPtr, port, n);
    return ret;
  }

  public int GetReleaseDataFlag(int port) {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_GetReleaseDataFlag(cast(void*)swigCPtr, port);
    return ret;
  }

  public int UpdatePipelineMTime() {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_UpdatePipelineMTime(cast(void*)swigCPtr);
    return ret;
  }

  public int UpdateDataObject() {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_UpdateDataObject(cast(void*)swigCPtr);
    return ret;
  }

  public int UpdateData(int outputPort) {
    auto ret = vtkd_im.vtkDemandDrivenPipeline_UpdateData(cast(void*)swigCPtr, outputPort);
    return ret;
  }

  public static vtkInformationRequestKey.vtkInformationRequestKey REQUEST_DATA_OBJECT() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_REQUEST_DATA_OBJECT();
    vtkInformationRequestKey.vtkInformationRequestKey ret = (cPtr is null) ? null : new vtkInformationRequestKey.vtkInformationRequestKey(cPtr, false);
    return ret;
  }

  public static vtkInformationRequestKey.vtkInformationRequestKey REQUEST_INFORMATION() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_REQUEST_INFORMATION();
    vtkInformationRequestKey.vtkInformationRequestKey ret = (cPtr is null) ? null : new vtkInformationRequestKey.vtkInformationRequestKey(cPtr, false);
    return ret;
  }

  public static vtkInformationRequestKey.vtkInformationRequestKey REQUEST_DATA() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_REQUEST_DATA();
    vtkInformationRequestKey.vtkInformationRequestKey ret = (cPtr is null) ? null : new vtkInformationRequestKey.vtkInformationRequestKey(cPtr, false);
    return ret;
  }

  public static vtkInformationRequestKey.vtkInformationRequestKey REQUEST_DATA_NOT_GENERATED() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_REQUEST_DATA_NOT_GENERATED();
    vtkInformationRequestKey.vtkInformationRequestKey ret = (cPtr is null) ? null : new vtkInformationRequestKey.vtkInformationRequestKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey RELEASE_DATA() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_RELEASE_DATA();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_NOT_GENERATED() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_DATA_NOT_GENERATED();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkDataObject.vtkDataObject NewDataObject(string type) {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_NewDataObject((type ? std.string.toStringz(type) : null));
    vtkDataObject.vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject.vtkDataObject(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey REQUEST_REGENERATE_INFORMATION() {
    void* cPtr = vtkd_im.vtkDemandDrivenPipeline_REQUEST_REGENERATE_INFORMATION();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }
}
