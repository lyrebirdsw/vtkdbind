/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCellQuality;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCell;
static import vtkDataSetAlgorithm;

class vtkCellQuality : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCellQuality_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCellQuality obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCellQuality_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCellQuality SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCellQuality_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCellQuality ret = (cPtr is null) ? null : new vtkCellQuality(cPtr, false);
    return ret;
  }

  public vtkCellQuality NewInstance() const {
    void* cPtr = vtkd_im.vtkCellQuality_NewInstance(cast(void*)swigCPtr);
    vtkCellQuality ret = (cPtr is null) ? null : new vtkCellQuality(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public static vtkCellQuality New() {
    void* cPtr = vtkd_im.vtkCellQuality_New();
    vtkCellQuality ret = (cPtr is null) ? null : new vtkCellQuality(cPtr, false);
    return ret;
  }

  public void SetQualityMeasure(int _arg) {
    vtkd_im.vtkCellQuality_SetQualityMeasure(cast(void*)swigCPtr, _arg);
  }

  public int GetQualityMeasure() {
    auto ret = vtkd_im.vtkCellQuality_GetQualityMeasure(cast(void*)swigCPtr);
    return ret;
  }

  public void SetQualityMeasureToArea() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToArea(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToAspectBeta() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToAspectBeta(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToAspectFrobenius() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToAspectFrobenius(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToAspectGamma() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToAspectGamma(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToAspectRatio() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToAspectRatio(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToCollapseRatio() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToCollapseRatio(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToCondition() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToCondition(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToDiagonal() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToDiagonal(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToDimension() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToDimension(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToDistortion() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToDistortion(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToJacobian() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToJacobian(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToMaxAngle() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToMaxAngle(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToMaxAspectFrobenius() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToMaxAspectFrobenius(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToMaxEdgeRatio() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToMaxEdgeRatio(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToMedAspectFrobenius() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToMedAspectFrobenius(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToMinAngle() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToMinAngle(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToOddy() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToOddy(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToRadiusRatio() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToRadiusRatio(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToRelativeSizeSquared() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToRelativeSizeSquared(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToScaledJacobian() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToScaledJacobian(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToShapeAndSize() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToShapeAndSize(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToShape() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToShape(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToShearAndSize() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToShearAndSize(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToShear() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToShear(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToSkew() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToSkew(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToStretch() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToStretch(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToTaper() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToTaper(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToVolume() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToVolume(cast(void*)swigCPtr);
  }

  public void SetQualityMeasureToWarpage() {
    vtkd_im.vtkCellQuality_SetQualityMeasureToWarpage(cast(void*)swigCPtr);
  }

  public void SetUnsupportedGeometry(double _arg) {
    vtkd_im.vtkCellQuality_SetUnsupportedGeometry(cast(void*)swigCPtr, _arg);
  }

  public double GetUnsupportedGeometry() {
    auto ret = vtkd_im.vtkCellQuality_GetUnsupportedGeometry(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUndefinedQuality(double _arg) {
    vtkd_im.vtkCellQuality_SetUndefinedQuality(cast(void*)swigCPtr, _arg);
  }

  public double GetUndefinedQuality() {
    auto ret = vtkd_im.vtkCellQuality_GetUndefinedQuality(cast(void*)swigCPtr);
    return ret;
  }

  public double TriangleStripArea(vtkCell.vtkCell arg0) {
    auto ret = vtkd_im.vtkCellQuality_TriangleStripArea(cast(void*)swigCPtr, vtkCell.vtkCell.swigGetCPtr(arg0));
    return ret;
  }

  public double PixelArea(vtkCell.vtkCell arg0) {
    auto ret = vtkd_im.vtkCellQuality_PixelArea(cast(void*)swigCPtr, vtkCell.vtkCell.swigGetCPtr(arg0));
    return ret;
  }

  public double PolygonArea(vtkCell.vtkCell arg0) {
    auto ret = vtkd_im.vtkCellQuality_PolygonArea(cast(void*)swigCPtr, vtkCell.vtkCell.swigGetCPtr(arg0));
    return ret;
  }
}
