/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPolarAxesActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkCamera;
static import vtkWindow;
static import vtkTextProperty;
static import vtkProperty;
static import vtkActor;

class vtkPolarAxesActor : vtkActor.vtkActor {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPolarAxesActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPolarAxesActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPolarAxesActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPolarAxesActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPolarAxesActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPolarAxesActor ret = (cPtr is null) ? null : new vtkPolarAxesActor(cPtr, false);
    return ret;
  }

  public vtkPolarAxesActor NewInstance() const {
    void* cPtr = vtkd_im.vtkPolarAxesActor_NewInstance(cast(void*)swigCPtr);
    vtkPolarAxesActor ret = (cPtr is null) ? null : new vtkPolarAxesActor(cPtr, false);
    return ret;
  }

  alias vtkActor.vtkActor.NewInstance NewInstance;

  public static vtkPolarAxesActor New() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_New();
    vtkPolarAxesActor ret = (cPtr is null) ? null : new vtkPolarAxesActor(cPtr, false);
    return ret;
  }

  public void SetPole(SWIGTYPE_p_double.SWIGTYPE_p_double arg0) {
    vtkd_im.vtkPolarAxesActor_SetPole__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg0));
  }

  public void SetPole(double arg0, double arg1, double arg2) {
    vtkd_im.vtkPolarAxesActor_SetPole__SWIG_1(cast(void*)swigCPtr, arg0, arg1, arg2);
  }

  public double* GetPole() {
    auto ret = cast(double*)vtkd_im.vtkPolarAxesActor_GetPole__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPole(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkPolarAxesActor_GetPole__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetPole(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkPolarAxesActor_GetPole__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetNumberOfRadialAxes(long arg0) {
    vtkd_im.vtkPolarAxesActor_SetNumberOfRadialAxes(cast(void*)swigCPtr, arg0);
  }

  public long GetNumberOfRadialAxes() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetNumberOfRadialAxes(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfPolarAxisTicks(long _arg) {
    vtkd_im.vtkPolarAxesActor_SetNumberOfPolarAxisTicks(cast(void*)swigCPtr, _arg);
  }

  public long GetNumberOfPolarAxisTicksMinValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetNumberOfPolarAxisTicksMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public long GetNumberOfPolarAxisTicksMaxValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetNumberOfPolarAxisTicksMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public long GetNumberOfPolarAxisTicks() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetNumberOfPolarAxisTicks(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAutoSubdividePolarAxis(bool _arg) {
    vtkd_im.vtkPolarAxesActor_SetAutoSubdividePolarAxis(cast(void*)swigCPtr, _arg);
  }

  public bool GetAutoSubdividePolarAxis() {
    bool ret = vtkd_im.vtkPolarAxesActor_GetAutoSubdividePolarAxis(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void AutoSubdividePolarAxisOn() {
    vtkd_im.vtkPolarAxesActor_AutoSubdividePolarAxisOn(cast(void*)swigCPtr);
  }

  public void AutoSubdividePolarAxisOff() {
    vtkd_im.vtkPolarAxesActor_AutoSubdividePolarAxisOff(cast(void*)swigCPtr);
  }

  public void SetMaximumRadius(double arg0) {
    vtkd_im.vtkPolarAxesActor_SetMaximumRadius(cast(void*)swigCPtr, arg0);
  }

  public double GetMaximumRadius() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetMaximumRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAutoScaleRadius(bool _arg) {
    vtkd_im.vtkPolarAxesActor_SetAutoScaleRadius(cast(void*)swigCPtr, _arg);
  }

  public bool GetAutoScaleRadius() {
    bool ret = vtkd_im.vtkPolarAxesActor_GetAutoScaleRadius(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetMinimumAngle(double arg0) {
    vtkd_im.vtkPolarAxesActor_SetMinimumAngle(cast(void*)swigCPtr, arg0);
  }

  public double GetMinimumAngle() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetMinimumAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumAngle(double arg0) {
    vtkd_im.vtkPolarAxesActor_SetMaximumAngle(cast(void*)swigCPtr, arg0);
  }

  public double GetMaximumAngle() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetMaximumAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSmallestVisiblePolarAngle(double _arg) {
    vtkd_im.vtkPolarAxesActor_SetSmallestVisiblePolarAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetSmallestVisiblePolarAngleMinValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetSmallestVisiblePolarAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSmallestVisiblePolarAngleMaxValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetSmallestVisiblePolarAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSmallestVisiblePolarAngle() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetSmallestVisiblePolarAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRadialUnits(bool _arg) {
    vtkd_im.vtkPolarAxesActor_SetRadialUnits(cast(void*)swigCPtr, _arg);
  }

  public bool GetRadialUnits() {
    bool ret = vtkd_im.vtkPolarAxesActor_GetRadialUnits(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetScreenSize(double screenSize) {
    vtkd_im.vtkPolarAxesActor_SetScreenSize(cast(void*)swigCPtr, screenSize);
  }

  public double GetScreenSize() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetScreenSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCamera(vtkCamera.vtkCamera arg0) {
    vtkd_im.vtkPolarAxesActor_SetCamera(cast(void*)swigCPtr, vtkCamera.vtkCamera.swigGetCPtr(arg0));
  }

  public vtkCamera.vtkCamera GetCamera() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetCamera(cast(void*)swigCPtr);
    vtkCamera.vtkCamera ret = (cPtr is null) ? null : new vtkCamera.vtkCamera(cPtr, false);
    return ret;
  }

  public void SetPolarAxisTitle(string _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarAxisTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetPolarAxisTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkPolarAxesActor_GetPolarAxisTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetPolarLabelFormat(string _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetPolarLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkPolarAxesActor_GetPolarLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkPolarAxesActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  alias vtkActor.vtkActor.ReleaseGraphicsResources ReleaseGraphicsResources;

  public void SetEnableDistanceLOD(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetEnableDistanceLOD(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableDistanceLOD() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetEnableDistanceLOD(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDistanceLODThreshold(double _arg) {
    vtkd_im.vtkPolarAxesActor_SetDistanceLODThreshold(cast(void*)swigCPtr, _arg);
  }

  public double GetDistanceLODThresholdMinValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetDistanceLODThresholdMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistanceLODThresholdMaxValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetDistanceLODThresholdMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistanceLODThreshold() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetDistanceLODThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEnableViewAngleLOD(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetEnableViewAngleLOD(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableViewAngleLOD() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetEnableViewAngleLOD(cast(void*)swigCPtr);
    return ret;
  }

  public void SetViewAngleLODThreshold(double _arg) {
    vtkd_im.vtkPolarAxesActor_SetViewAngleLODThreshold(cast(void*)swigCPtr, _arg);
  }

  public double GetViewAngleLODThresholdMinValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetViewAngleLODThresholdMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetViewAngleLODThresholdMaxValue() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetViewAngleLODThresholdMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetViewAngleLODThreshold() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetViewAngleLODThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPolarAxisVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetPolarAxisVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetPolarAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void PolarAxisVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_PolarAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void PolarAxisVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_PolarAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPolarTitleVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarTitleVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetPolarTitleVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetPolarTitleVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void PolarTitleVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_PolarTitleVisibilityOn(cast(void*)swigCPtr);
  }

  public void PolarTitleVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_PolarTitleVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPolarLabelVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarLabelVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetPolarLabelVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetPolarLabelVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void PolarLabelVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_PolarLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void PolarLabelVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_PolarLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPolarTickVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetPolarTickVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetPolarTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void PolarTickVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_PolarTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void PolarTickVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_PolarTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetRadialAxesVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetRadialAxesVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetRadialAxesVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetRadialAxesVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void RadialAxesVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_RadialAxesVisibilityOn(cast(void*)swigCPtr);
  }

  public void RadialAxesVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_RadialAxesVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetRadialTitleVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetRadialTitleVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetRadialTitleVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetRadialTitleVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void RadialTitleVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_RadialTitleVisibilityOn(cast(void*)swigCPtr);
  }

  public void RadialTitleVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_RadialTitleVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPolarArcsVisibility(int _arg) {
    vtkd_im.vtkPolarAxesActor_SetPolarArcsVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetPolarArcsVisibility() {
    auto ret = vtkd_im.vtkPolarAxesActor_GetPolarArcsVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void PolarArcsVisibilityOn() {
    vtkd_im.vtkPolarAxesActor_PolarArcsVisibilityOn(cast(void*)swigCPtr);
  }

  public void PolarArcsVisibilityOff() {
    vtkd_im.vtkPolarAxesActor_PolarArcsVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPolarAxisTitleTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkPolarAxesActor_SetPolarAxisTitleTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetPolarAxisTitleTextProperty() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetPolarAxisTitleTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetPolarAxisLabelTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkPolarAxesActor_SetPolarAxisLabelTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetPolarAxisLabelTextProperty() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetPolarAxisLabelTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetPolarAxisProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPolarAxesActor_SetPolarAxisProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetPolarAxisProperty() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetPolarAxisProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetRadialAxesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPolarAxesActor_SetRadialAxesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetRadialAxesProperty() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetRadialAxesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetPolarArcsProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPolarAxesActor_SetPolarArcsProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetPolarArcsProperty() {
    void* cPtr = vtkd_im.vtkPolarAxesActor_GetPolarArcsProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetBounds(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkPolarAxesActor_SetBounds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkPolarAxesActor_SetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkPolarAxesActor_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(double* xmin, double* xmax, double* ymin, double* ymax, double* zmin, double* zmax) {
    vtkd_im.vtkPolarAxesActor_GetBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)xmin, cast(void*)xmax, cast(void*)ymin, cast(void*)ymax, cast(void*)zmin, cast(void*)zmax);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkPolarAxesActor_GetBounds__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  alias vtkActor.vtkActor.GetBounds GetBounds;
}
