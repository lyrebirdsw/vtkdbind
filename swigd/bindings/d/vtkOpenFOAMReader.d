/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkOpenFOAMReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformationVector;
static import vtkStdString;
static import vtkDoubleArray;
static import vtkMultiBlockDataSetAlgorithm;

class vtkOpenFOAMReader : vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkOpenFOAMReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkOpenFOAMReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkOpenFOAMReader New() {
    void* cPtr = vtkd_im.vtkOpenFOAMReader_New();
    vtkOpenFOAMReader ret = (cPtr is null) ? null : new vtkOpenFOAMReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkOpenFOAMReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkOpenFOAMReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkOpenFOAMReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkOpenFOAMReader ret = (cPtr is null) ? null : new vtkOpenFOAMReader(cPtr, false);
    return ret;
  }

  public vtkOpenFOAMReader NewInstance() const {
    void* cPtr = vtkd_im.vtkOpenFOAMReader_NewInstance(cast(void*)swigCPtr);
    vtkOpenFOAMReader ret = (cPtr is null) ? null : new vtkOpenFOAMReader(cPtr, false);
    return ret;
  }

  alias vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm.NewInstance NewInstance;

  public int CanReadFile(string arg0) {
    auto ret = vtkd_im.vtkOpenFOAMReader_CanReadFile(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
    return ret;
  }

  public void SetFileName(string _arg) {
    vtkd_im.vtkOpenFOAMReader_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkOpenFOAMReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public int GetNumberOfCellArrays() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetNumberOfCellArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCellArrayStatus(string name) {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetCellArrayStatus(string name, int status) {
    vtkd_im.vtkOpenFOAMReader_SetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public string GetCellArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkOpenFOAMReader_GetCellArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public void DisableAllCellArrays() {
    vtkd_im.vtkOpenFOAMReader_DisableAllCellArrays(cast(void*)swigCPtr);
  }

  public void EnableAllCellArrays() {
    vtkd_im.vtkOpenFOAMReader_EnableAllCellArrays(cast(void*)swigCPtr);
  }

  public int GetNumberOfPointArrays() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetNumberOfPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPointArrayStatus(string name) {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPointArrayStatus(string name, int status) {
    vtkd_im.vtkOpenFOAMReader_SetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public string GetPointArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkOpenFOAMReader_GetPointArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public void DisableAllPointArrays() {
    vtkd_im.vtkOpenFOAMReader_DisableAllPointArrays(cast(void*)swigCPtr);
  }

  public void EnableAllPointArrays() {
    vtkd_im.vtkOpenFOAMReader_EnableAllPointArrays(cast(void*)swigCPtr);
  }

  public int GetNumberOfLagrangianArrays() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetNumberOfLagrangianArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLagrangianArrayStatus(string name) {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetLagrangianArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetLagrangianArrayStatus(string name, int status) {
    vtkd_im.vtkOpenFOAMReader_SetLagrangianArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public string GetLagrangianArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkOpenFOAMReader_GetLagrangianArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public void DisableAllLagrangianArrays() {
    vtkd_im.vtkOpenFOAMReader_DisableAllLagrangianArrays(cast(void*)swigCPtr);
  }

  public void EnableAllLagrangianArrays() {
    vtkd_im.vtkOpenFOAMReader_EnableAllLagrangianArrays(cast(void*)swigCPtr);
  }

  public int GetNumberOfPatchArrays() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetNumberOfPatchArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPatchArrayStatus(string name) {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetPatchArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPatchArrayStatus(string name, int status) {
    vtkd_im.vtkOpenFOAMReader_SetPatchArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public string GetPatchArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkOpenFOAMReader_GetPatchArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public void DisableAllPatchArrays() {
    vtkd_im.vtkOpenFOAMReader_DisableAllPatchArrays(cast(void*)swigCPtr);
  }

  public void EnableAllPatchArrays() {
    vtkd_im.vtkOpenFOAMReader_EnableAllPatchArrays(cast(void*)swigCPtr);
  }

  public void SetCreateCellToPoint(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetCreateCellToPoint(cast(void*)swigCPtr, _arg);
  }

  public int GetCreateCellToPoint() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetCreateCellToPoint(cast(void*)swigCPtr);
    return ret;
  }

  public void CreateCellToPointOn() {
    vtkd_im.vtkOpenFOAMReader_CreateCellToPointOn(cast(void*)swigCPtr);
  }

  public void CreateCellToPointOff() {
    vtkd_im.vtkOpenFOAMReader_CreateCellToPointOff(cast(void*)swigCPtr);
  }

  public void SetCacheMesh(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetCacheMesh(cast(void*)swigCPtr, _arg);
  }

  public int GetCacheMesh() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetCacheMesh(cast(void*)swigCPtr);
    return ret;
  }

  public void CacheMeshOn() {
    vtkd_im.vtkOpenFOAMReader_CacheMeshOn(cast(void*)swigCPtr);
  }

  public void CacheMeshOff() {
    vtkd_im.vtkOpenFOAMReader_CacheMeshOff(cast(void*)swigCPtr);
  }

  public void SetDecomposePolyhedra(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetDecomposePolyhedra(cast(void*)swigCPtr, _arg);
  }

  public int GetDecomposePolyhedra() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetDecomposePolyhedra(cast(void*)swigCPtr);
    return ret;
  }

  public void DecomposePolyhedraOn() {
    vtkd_im.vtkOpenFOAMReader_DecomposePolyhedraOn(cast(void*)swigCPtr);
  }

  public void DecomposePolyhedraOff() {
    vtkd_im.vtkOpenFOAMReader_DecomposePolyhedraOff(cast(void*)swigCPtr);
  }

  public void SetPositionsIsIn13Format(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetPositionsIsIn13Format(cast(void*)swigCPtr, _arg);
  }

  public int GetPositionsIsIn13Format() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetPositionsIsIn13Format(cast(void*)swigCPtr);
    return ret;
  }

  public void PositionsIsIn13FormatOn() {
    vtkd_im.vtkOpenFOAMReader_PositionsIsIn13FormatOn(cast(void*)swigCPtr);
  }

  public void PositionsIsIn13FormatOff() {
    vtkd_im.vtkOpenFOAMReader_PositionsIsIn13FormatOff(cast(void*)swigCPtr);
  }

  public void SetListTimeStepsByControlDict(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetListTimeStepsByControlDict(cast(void*)swigCPtr, _arg);
  }

  public int GetListTimeStepsByControlDict() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetListTimeStepsByControlDict(cast(void*)swigCPtr);
    return ret;
  }

  public void ListTimeStepsByControlDictOn() {
    vtkd_im.vtkOpenFOAMReader_ListTimeStepsByControlDictOn(cast(void*)swigCPtr);
  }

  public void ListTimeStepsByControlDictOff() {
    vtkd_im.vtkOpenFOAMReader_ListTimeStepsByControlDictOff(cast(void*)swigCPtr);
  }

  public void SetAddDimensionsToArrayNames(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetAddDimensionsToArrayNames(cast(void*)swigCPtr, _arg);
  }

  public int GetAddDimensionsToArrayNames() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetAddDimensionsToArrayNames(cast(void*)swigCPtr);
    return ret;
  }

  public void AddDimensionsToArrayNamesOn() {
    vtkd_im.vtkOpenFOAMReader_AddDimensionsToArrayNamesOn(cast(void*)swigCPtr);
  }

  public void AddDimensionsToArrayNamesOff() {
    vtkd_im.vtkOpenFOAMReader_AddDimensionsToArrayNamesOff(cast(void*)swigCPtr);
  }

  public void SetReadZones(int _arg) {
    vtkd_im.vtkOpenFOAMReader_SetReadZones(cast(void*)swigCPtr, _arg);
  }

  public int GetReadZones() {
    auto ret = vtkd_im.vtkOpenFOAMReader_GetReadZones(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadZonesOn() {
    vtkd_im.vtkOpenFOAMReader_ReadZonesOn(cast(void*)swigCPtr);
  }

  public void ReadZonesOff() {
    vtkd_im.vtkOpenFOAMReader_ReadZonesOff(cast(void*)swigCPtr);
  }

  public void SetRefresh() {
    vtkd_im.vtkOpenFOAMReader_SetRefresh(cast(void*)swigCPtr);
  }

  public void SetParent(vtkOpenFOAMReader parent) {
    vtkd_im.vtkOpenFOAMReader_SetParent(cast(void*)swigCPtr, vtkOpenFOAMReader.swigGetCPtr(parent));
  }

  public int MakeInformationVector(vtkInformationVector.vtkInformationVector arg0, vtkStdString.vtkStdString arg1) {
    auto ret = vtkd_im.vtkOpenFOAMReader_MakeInformationVector(cast(void*)swigCPtr, vtkInformationVector.vtkInformationVector.swigGetCPtr(arg0), vtkStdString.vtkStdString.swigGetCPtr(arg1));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool SetTimeValue(double arg0) {
    bool ret = vtkd_im.vtkOpenFOAMReader_SetTimeValue(cast(void*)swigCPtr, arg0) ? true : false;
    return ret;
  }

  public vtkDoubleArray.vtkDoubleArray GetTimeValues() {
    void* cPtr = vtkd_im.vtkOpenFOAMReader_GetTimeValues(cast(void*)swigCPtr);
    vtkDoubleArray.vtkDoubleArray ret = (cPtr is null) ? null : new vtkDoubleArray.vtkDoubleArray(cPtr, false);
    return ret;
  }

  public int MakeMetaDataAtTimeStep(bool arg0) {
    auto ret = vtkd_im.vtkOpenFOAMReader_MakeMetaDataAtTimeStep(cast(void*)swigCPtr, arg0);
    return ret;
  }
}
