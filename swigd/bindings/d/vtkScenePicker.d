/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkScenePicker;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import SWIGTYPE_p_int;
static import vtkProp;
static import vtkObject;

class vtkScenePicker : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkScenePicker_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkScenePicker obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkScenePicker New() {
    void* cPtr = vtkd_im.vtkScenePicker_New();
    vtkScenePicker ret = (cPtr is null) ? null : new vtkScenePicker(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkScenePicker_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkScenePicker SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkScenePicker_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkScenePicker ret = (cPtr is null) ? null : new vtkScenePicker(cPtr, false);
    return ret;
  }

  public vtkScenePicker NewInstance() const {
    void* cPtr = vtkd_im.vtkScenePicker_NewInstance(cast(void*)swigCPtr);
    vtkScenePicker ret = (cPtr is null) ? null : new vtkScenePicker(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetRenderer(vtkRenderer.vtkRenderer arg0) {
    vtkd_im.vtkScenePicker_SetRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0));
  }

  public vtkRenderer.vtkRenderer GetRenderer() {
    void* cPtr = vtkd_im.vtkScenePicker_GetRenderer(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }

  public long GetCellId(SWIGTYPE_p_int.SWIGTYPE_p_int displayPos) {
    auto ret = vtkd_im.vtkScenePicker_GetCellId(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(displayPos));
    return ret;
  }

  public long GetVertexId(SWIGTYPE_p_int.SWIGTYPE_p_int displayPos) {
    auto ret = vtkd_im.vtkScenePicker_GetVertexId(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(displayPos));
    return ret;
  }

  public vtkProp.vtkProp GetViewProp(SWIGTYPE_p_int.SWIGTYPE_p_int displayPos) {
    void* cPtr = vtkd_im.vtkScenePicker_GetViewProp(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(displayPos));
    vtkProp.vtkProp ret = (cPtr is null) ? null : new vtkProp.vtkProp(cPtr, false);
    return ret;
  }

  public void SetEnableVertexPicking(int _arg) {
    vtkd_im.vtkScenePicker_SetEnableVertexPicking(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableVertexPicking() {
    auto ret = vtkd_im.vtkScenePicker_GetEnableVertexPicking(cast(void*)swigCPtr);
    return ret;
  }

  public void EnableVertexPickingOn() {
    vtkd_im.vtkScenePicker_EnableVertexPickingOn(cast(void*)swigCPtr);
  }

  public void EnableVertexPickingOff() {
    vtkd_im.vtkScenePicker_EnableVertexPickingOff(cast(void*)swigCPtr);
  }
}
