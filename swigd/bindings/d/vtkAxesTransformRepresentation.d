/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAxesTransformRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkHandleRepresentation;
static import SWIGTYPE_p_double;
static import vtkProperty;
static import vtkWidgetRepresentation;

class vtkAxesTransformRepresentation : vtkWidgetRepresentation.vtkWidgetRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAxesTransformRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAxesTransformRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  enum {
    Outside = 0,
    OnOrigin,
    OnX,
    OnY,
    OnZ,
    OnXEnd,
    OnYEnd,
    OnZEnd
  }

  public static vtkAxesTransformRepresentation New() {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_New();
    vtkAxesTransformRepresentation ret = (cPtr is null) ? null : new vtkAxesTransformRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAxesTransformRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAxesTransformRepresentation ret = (cPtr is null) ? null : new vtkAxesTransformRepresentation(cPtr, false);
    return ret;
  }

  public vtkAxesTransformRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkAxesTransformRepresentation ret = (cPtr is null) ? null : new vtkAxesTransformRepresentation(cPtr, false);
    return ret;
  }

  alias vtkWidgetRepresentation.vtkWidgetRepresentation.NewInstance NewInstance;

  public vtkHandleRepresentation.vtkHandleRepresentation GetOriginRepresentation() {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_GetOriginRepresentation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetSelectionRepresentation() {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_GetSelectionRepresentation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public double* GetOriginWorldPosition() {
    auto ret = cast(double*)vtkd_im.vtkAxesTransformRepresentation_GetOriginWorldPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOriginWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAxesTransformRepresentation_GetOriginWorldPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetOriginWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAxesTransformRepresentation_SetOriginWorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetOriginDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAxesTransformRepresentation_SetOriginDisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetOriginDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAxesTransformRepresentation_GetOriginDisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetTolerance(int _arg) {
    vtkd_im.vtkAxesTransformRepresentation_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public int GetToleranceMinValue() {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTolerance() {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkAxesTransformRepresentation_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkAxesTransformRepresentation_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetInteractionState(int _arg) {
    vtkd_im.vtkAxesTransformRepresentation_SetInteractionState(cast(void*)swigCPtr, _arg);
  }

  public int GetInteractionStateMinValue() {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_GetInteractionStateMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInteractionStateMaxValue() {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_GetInteractionStateMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkAxesTransformRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void SetLabelScale(double x, double y, double z) {
    vtkd_im.vtkAxesTransformRepresentation_SetLabelScale__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetLabelScale(SWIGTYPE_p_double.SWIGTYPE_p_double scale) {
    vtkd_im.vtkAxesTransformRepresentation_SetLabelScale__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(scale));
  }

  public double* GetLabelScale() {
    auto ret = cast(double*)vtkd_im.vtkAxesTransformRepresentation_GetLabelScale(cast(void*)swigCPtr);
    return ret;
  }

  public vtkProperty.vtkProperty GetLabelProperty() {
    void* cPtr = vtkd_im.vtkAxesTransformRepresentation_GetLabelProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }
}
