/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRotationFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkUnstructuredGridAlgorithm;

class vtkRotationFilter : vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRotationFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRotationFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkRotationFilter New() {
    void* cPtr = vtkd_im.vtkRotationFilter_New();
    vtkRotationFilter ret = (cPtr is null) ? null : new vtkRotationFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRotationFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRotationFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRotationFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRotationFilter ret = (cPtr is null) ? null : new vtkRotationFilter(cPtr, false);
    return ret;
  }

  public vtkRotationFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkRotationFilter_NewInstance(cast(void*)swigCPtr);
    vtkRotationFilter ret = (cPtr is null) ? null : new vtkRotationFilter(cPtr, false);
    return ret;
  }

  alias vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm.NewInstance NewInstance;

  public void SetAxis(int _arg) {
    vtkd_im.vtkRotationFilter_SetAxis(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisMinValue() {
    auto ret = vtkd_im.vtkRotationFilter_GetAxisMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxisMaxValue() {
    auto ret = vtkd_im.vtkRotationFilter_GetAxisMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxis() {
    auto ret = vtkd_im.vtkRotationFilter_GetAxis(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisToX() {
    vtkd_im.vtkRotationFilter_SetAxisToX(cast(void*)swigCPtr);
  }

  public void SetAxisToY() {
    vtkd_im.vtkRotationFilter_SetAxisToY(cast(void*)swigCPtr);
  }

  public void SetAxisToZ() {
    vtkd_im.vtkRotationFilter_SetAxisToZ(cast(void*)swigCPtr);
  }

  public void SetAngle(double _arg) {
    vtkd_im.vtkRotationFilter_SetAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetAngle() {
    auto ret = vtkd_im.vtkRotationFilter_GetAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkRotationFilter_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkRotationFilter_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkRotationFilter_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkRotationFilter_GetCenter__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkRotationFilter_GetCenter__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetNumberOfCopies(int _arg) {
    vtkd_im.vtkRotationFilter_SetNumberOfCopies(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfCopies() {
    auto ret = vtkd_im.vtkRotationFilter_GetNumberOfCopies(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCopyInput(int _arg) {
    vtkd_im.vtkRotationFilter_SetCopyInput(cast(void*)swigCPtr, _arg);
  }

  public int GetCopyInput() {
    auto ret = vtkd_im.vtkRotationFilter_GetCopyInput(cast(void*)swigCPtr);
    return ret;
  }

  public void CopyInputOn() {
    vtkd_im.vtkRotationFilter_CopyInputOn(cast(void*)swigCPtr);
  }

  public void CopyInputOff() {
    vtkd_im.vtkRotationFilter_CopyInputOff(cast(void*)swigCPtr);
  }
}
