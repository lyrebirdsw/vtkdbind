/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVideoSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkImageAlgorithm;

class vtkVideoSource : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkVideoSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkVideoSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkVideoSource New() {
    void* cPtr = vtkd_im.vtkVideoSource_New();
    vtkVideoSource ret = (cPtr is null) ? null : new vtkVideoSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkVideoSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkVideoSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkVideoSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkVideoSource ret = (cPtr is null) ? null : new vtkVideoSource(cPtr, false);
    return ret;
  }

  public vtkVideoSource NewInstance() const {
    void* cPtr = vtkd_im.vtkVideoSource_NewInstance(cast(void*)swigCPtr);
    vtkVideoSource ret = (cPtr is null) ? null : new vtkVideoSource(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void Record() {
    vtkd_im.vtkVideoSource_Record(cast(void*)swigCPtr);
  }

  public void Play() {
    vtkd_im.vtkVideoSource_Play(cast(void*)swigCPtr);
  }

  public void Stop() {
    vtkd_im.vtkVideoSource_Stop(cast(void*)swigCPtr);
  }

  public void Rewind() {
    vtkd_im.vtkVideoSource_Rewind(cast(void*)swigCPtr);
  }

  public void FastForward() {
    vtkd_im.vtkVideoSource_FastForward(cast(void*)swigCPtr);
  }

  public void Seek(int n) {
    vtkd_im.vtkVideoSource_Seek(cast(void*)swigCPtr, n);
  }

  public void Grab() {
    vtkd_im.vtkVideoSource_Grab(cast(void*)swigCPtr);
  }

  public int GetRecording() {
    auto ret = vtkd_im.vtkVideoSource_GetRecording(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPlaying() {
    auto ret = vtkd_im.vtkVideoSource_GetPlaying(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFrameSize(int x, int y, int z) {
    vtkd_im.vtkVideoSource_SetFrameSize__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetFrameSize(SWIGTYPE_p_int.SWIGTYPE_p_int dim) {
    vtkd_im.vtkVideoSource_SetFrameSize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dim));
  }

  public int* GetFrameSize() {
    auto ret = cast(int*)vtkd_im.vtkVideoSource_GetFrameSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFrameSize(int* _arg1, int* _arg2, int* _arg3) {
    vtkd_im.vtkVideoSource_GetFrameSize__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetFrameSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVideoSource_GetFrameSize__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetFrameRate(float rate) {
    vtkd_im.vtkVideoSource_SetFrameRate(cast(void*)swigCPtr, rate);
  }

  public float GetFrameRate() {
    auto ret = vtkd_im.vtkVideoSource_GetFrameRate(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputFormat(int format) {
    vtkd_im.vtkVideoSource_SetOutputFormat(cast(void*)swigCPtr, format);
  }

  public void SetOutputFormatToLuminance() {
    vtkd_im.vtkVideoSource_SetOutputFormatToLuminance(cast(void*)swigCPtr);
  }

  public void SetOutputFormatToRGB() {
    vtkd_im.vtkVideoSource_SetOutputFormatToRGB(cast(void*)swigCPtr);
  }

  public void SetOutputFormatToRGBA() {
    vtkd_im.vtkVideoSource_SetOutputFormatToRGBA(cast(void*)swigCPtr);
  }

  public int GetOutputFormat() {
    auto ret = vtkd_im.vtkVideoSource_GetOutputFormat(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFrameBufferSize(int FrameBufferSize) {
    vtkd_im.vtkVideoSource_SetFrameBufferSize(cast(void*)swigCPtr, FrameBufferSize);
  }

  public int GetFrameBufferSize() {
    auto ret = vtkd_im.vtkVideoSource_GetFrameBufferSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfOutputFrames(int _arg) {
    vtkd_im.vtkVideoSource_SetNumberOfOutputFrames(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfOutputFrames() {
    auto ret = vtkd_im.vtkVideoSource_GetNumberOfOutputFrames(cast(void*)swigCPtr);
    return ret;
  }

  public void AutoAdvanceOn() {
    vtkd_im.vtkVideoSource_AutoAdvanceOn(cast(void*)swigCPtr);
  }

  public void AutoAdvanceOff() {
    vtkd_im.vtkVideoSource_AutoAdvanceOff(cast(void*)swigCPtr);
  }

  public void SetAutoAdvance(int _arg) {
    vtkd_im.vtkVideoSource_SetAutoAdvance(cast(void*)swigCPtr, _arg);
  }

  public int GetAutoAdvance() {
    auto ret = vtkd_im.vtkVideoSource_GetAutoAdvance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetClipRegion(SWIGTYPE_p_int.SWIGTYPE_p_int r) {
    vtkd_im.vtkVideoSource_SetClipRegion__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(r));
  }

  public void SetClipRegion(int x0, int x1, int y0, int y1, int z0, int z1) {
    vtkd_im.vtkVideoSource_SetClipRegion__SWIG_1(cast(void*)swigCPtr, x0, x1, y0, y1, z0, z1);
  }

  public int* GetClipRegion() {
    auto ret = cast(int*)vtkd_im.vtkVideoSource_GetClipRegion__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetClipRegion(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkVideoSource_GetClipRegion__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetClipRegion(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVideoSource_GetClipRegion__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetOutputWholeExtent(int _arg1, int _arg2, int _arg3, int _arg4, int _arg5, int _arg6) {
    vtkd_im.vtkVideoSource_SetOutputWholeExtent__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetOutputWholeExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVideoSource_SetOutputWholeExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetOutputWholeExtent() {
    auto ret = cast(int*)vtkd_im.vtkVideoSource_GetOutputWholeExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOutputWholeExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkVideoSource_GetOutputWholeExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetOutputWholeExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVideoSource_GetOutputWholeExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetDataSpacing(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkVideoSource_SetDataSpacing__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVideoSource_SetDataSpacing__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataSpacing() {
    auto ret = cast(double*)vtkd_im.vtkVideoSource_GetDataSpacing__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataSpacing(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkVideoSource_GetDataSpacing__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVideoSource_GetDataSpacing__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetDataOrigin(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkVideoSource_SetDataOrigin__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVideoSource_SetDataOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataOrigin() {
    auto ret = cast(double*)vtkd_im.vtkVideoSource_GetDataOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataOrigin(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkVideoSource_GetDataOrigin__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVideoSource_GetDataOrigin__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetOpacity(float _arg) {
    vtkd_im.vtkVideoSource_SetOpacity(cast(void*)swigCPtr, _arg);
  }

  public float GetOpacity() {
    auto ret = vtkd_im.vtkVideoSource_GetOpacity(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFrameCount() {
    auto ret = vtkd_im.vtkVideoSource_GetFrameCount(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFrameCount(int _arg) {
    vtkd_im.vtkVideoSource_SetFrameCount(cast(void*)swigCPtr, _arg);
  }

  public int GetFrameIndex() {
    auto ret = vtkd_im.vtkVideoSource_GetFrameIndex(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFrameTimeStamp(int frame) {
    auto ret = vtkd_im.vtkVideoSource_GetFrameTimeStamp__SWIG_0(cast(void*)swigCPtr, frame);
    return ret;
  }

  public double GetFrameTimeStamp() {
    auto ret = vtkd_im.vtkVideoSource_GetFrameTimeStamp__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public void Initialize() {
    vtkd_im.vtkVideoSource_Initialize(cast(void*)swigCPtr);
  }

  public int GetInitialized() {
    auto ret = vtkd_im.vtkVideoSource_GetInitialized(cast(void*)swigCPtr);
    return ret;
  }

  public void ReleaseSystemResources() {
    vtkd_im.vtkVideoSource_ReleaseSystemResources(cast(void*)swigCPtr);
  }

  public void InternalGrab() {
    vtkd_im.vtkVideoSource_InternalGrab(cast(void*)swigCPtr);
  }

  public void SetStartTimeStamp(double t) {
    vtkd_im.vtkVideoSource_SetStartTimeStamp(cast(void*)swigCPtr, t);
  }

  public double GetStartTimeStamp() {
    auto ret = vtkd_im.vtkVideoSource_GetStartTimeStamp(cast(void*)swigCPtr);
    return ret;
  }
}
