/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAddMembershipArray;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAbstractArray;
static import vtkPassInputTypeAlgorithm;

class vtkAddMembershipArray : vtkPassInputTypeAlgorithm.vtkPassInputTypeAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAddMembershipArray_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAddMembershipArray obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAddMembershipArray New() {
    void* cPtr = vtkd_im.vtkAddMembershipArray_New();
    vtkAddMembershipArray ret = (cPtr is null) ? null : new vtkAddMembershipArray(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAddMembershipArray_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAddMembershipArray SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAddMembershipArray_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAddMembershipArray ret = (cPtr is null) ? null : new vtkAddMembershipArray(cPtr, false);
    return ret;
  }

  public vtkAddMembershipArray NewInstance() const {
    void* cPtr = vtkd_im.vtkAddMembershipArray_NewInstance(cast(void*)swigCPtr);
    vtkAddMembershipArray ret = (cPtr is null) ? null : new vtkAddMembershipArray(cPtr, false);
    return ret;
  }

  alias vtkPassInputTypeAlgorithm.vtkPassInputTypeAlgorithm.NewInstance NewInstance;

  public int GetFieldType() {
    auto ret = vtkd_im.vtkAddMembershipArray_GetFieldType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFieldType(int _arg) {
    vtkd_im.vtkAddMembershipArray_SetFieldType(cast(void*)swigCPtr, _arg);
  }

  public int GetFieldTypeMinValue() {
    auto ret = vtkd_im.vtkAddMembershipArray_GetFieldTypeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFieldTypeMaxValue() {
    auto ret = vtkd_im.vtkAddMembershipArray_GetFieldTypeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputArrayName(string _arg) {
    vtkd_im.vtkAddMembershipArray_SetOutputArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetOutputArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkAddMembershipArray_GetOutputArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetInputArrayName(string _arg) {
    vtkd_im.vtkAddMembershipArray_SetInputArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetInputArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkAddMembershipArray_GetInputArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetInputValues(vtkAbstractArray.vtkAbstractArray arg0) {
    vtkd_im.vtkAddMembershipArray_SetInputValues(cast(void*)swigCPtr, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(arg0));
  }

  public vtkAbstractArray.vtkAbstractArray GetInputValues() {
    void* cPtr = vtkd_im.vtkAddMembershipArray_GetInputValues(cast(void*)swigCPtr);
    vtkAbstractArray.vtkAbstractArray ret = (cPtr is null) ? null : new vtkAbstractArray.vtkAbstractArray(cPtr, false);
    return ret;
  }
}
