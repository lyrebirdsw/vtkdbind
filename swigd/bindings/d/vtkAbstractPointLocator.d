/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAbstractPointLocator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkIdList;
static import vtkLocator;

class vtkAbstractPointLocator : vtkLocator.vtkLocator {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAbstractPointLocator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAbstractPointLocator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAbstractPointLocator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAbstractPointLocator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAbstractPointLocator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAbstractPointLocator ret = (cPtr is null) ? null : new vtkAbstractPointLocator(cPtr, false);
    return ret;
  }

  public vtkAbstractPointLocator NewInstance() const {
    void* cPtr = vtkd_im.vtkAbstractPointLocator_NewInstance(cast(void*)swigCPtr);
    vtkAbstractPointLocator ret = (cPtr is null) ? null : new vtkAbstractPointLocator(cPtr, false);
    return ret;
  }

  alias vtkLocator.vtkLocator.NewInstance NewInstance;

  public long FindClosestPoint(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkAbstractPointLocator_FindClosestPoint__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public long FindClosestPoint(double x, double y, double z) {
    auto ret = vtkd_im.vtkAbstractPointLocator_FindClosestPoint__SWIG_1(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  public long FindClosestPointWithinRadius(double radius, SWIGTYPE_p_double.SWIGTYPE_p_double x, double* dist2) {
    auto ret = vtkd_im.vtkAbstractPointLocator_FindClosestPointWithinRadius(cast(void*)swigCPtr, radius, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), cast(void*)dist2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void FindClosestNPoints(int N, SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkIdList.vtkIdList result) {
    vtkd_im.vtkAbstractPointLocator_FindClosestNPoints__SWIG_0(cast(void*)swigCPtr, N, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkIdList.vtkIdList.swigGetCPtr(result));
  }

  public void FindClosestNPoints(int N, double x, double y, double z, vtkIdList.vtkIdList result) {
    vtkd_im.vtkAbstractPointLocator_FindClosestNPoints__SWIG_1(cast(void*)swigCPtr, N, x, y, z, vtkIdList.vtkIdList.swigGetCPtr(result));
  }

  public void FindPointsWithinRadius(double R, SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkIdList.vtkIdList result) {
    vtkd_im.vtkAbstractPointLocator_FindPointsWithinRadius__SWIG_0(cast(void*)swigCPtr, R, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkIdList.vtkIdList.swigGetCPtr(result));
  }

  public void FindPointsWithinRadius(double R, double x, double y, double z, vtkIdList.vtkIdList result) {
    vtkd_im.vtkAbstractPointLocator_FindPointsWithinRadius__SWIG_1(cast(void*)swigCPtr, R, x, y, z, vtkIdList.vtkIdList.swigGetCPtr(result));
  }

  public double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkAbstractPointLocator_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(double* arg0) {
    vtkd_im.vtkAbstractPointLocator_GetBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)arg0);
  }
}
