/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLight;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import SWIGTYPE_p_double;
static import vtkMatrix4x4;
static import SWIGTYPE_p_istream;
static import SWIGTYPE_p_ostream;
static import vtkObject;

class vtkLight : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLight_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLight obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLight_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLight SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLight_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLight ret = (cPtr is null) ? null : new vtkLight(cPtr, false);
    return ret;
  }

  public vtkLight NewInstance() const {
    void* cPtr = vtkd_im.vtkLight_NewInstance(cast(void*)swigCPtr);
    vtkLight ret = (cPtr is null) ? null : new vtkLight(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkLight New() {
    void* cPtr = vtkd_im.vtkLight_New();
    vtkLight ret = (cPtr is null) ? null : new vtkLight(cPtr, false);
    return ret;
  }

  public vtkLight ShallowClone() {
    void* cPtr = vtkd_im.vtkLight_ShallowClone(cast(void*)swigCPtr);
    vtkLight ret = (cPtr is null) ? null : new vtkLight(cPtr, false);
    return ret;
  }

  public void Render(vtkRenderer.vtkRenderer arg0, int arg1) {
    vtkd_im.vtkLight_Render(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0), arg1);
  }

  public void SetAmbientColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetAmbientColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAmbientColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetAmbientColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAmbientColor() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetAmbientColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAmbientColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetAmbientColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetDiffuseColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetDiffuseColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDiffuseColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetDiffuseColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDiffuseColor() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetDiffuseColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDiffuseColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetDiffuseColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetSpecularColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetSpecularColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetSpecularColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetSpecularColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetSpecularColor() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetSpecularColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSpecularColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetSpecularColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetColor(double arg0, double arg1, double arg2) {
    vtkd_im.vtkLight_SetColor__SWIG_0(cast(void*)swigCPtr, arg0, arg1, arg2);
  }

  public void SetColor(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkLight_SetColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public void SetPosition(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetPosition__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetPosition() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetPosition(float* a) {
    vtkd_im.vtkLight_SetPosition__SWIG_2(cast(void*)swigCPtr, cast(void*)a);
  }

  public void SetFocalPoint(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetFocalPoint__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetFocalPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetFocalPoint() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetFocalPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetFocalPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetFocalPoint(float* a) {
    vtkd_im.vtkLight_SetFocalPoint__SWIG_2(cast(void*)swigCPtr, cast(void*)a);
  }

  public void SetIntensity(double _arg) {
    vtkd_im.vtkLight_SetIntensity(cast(void*)swigCPtr, _arg);
  }

  public double GetIntensity() {
    auto ret = vtkd_im.vtkLight_GetIntensity(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSwitch(int _arg) {
    vtkd_im.vtkLight_SetSwitch(cast(void*)swigCPtr, _arg);
  }

  public int GetSwitch() {
    auto ret = vtkd_im.vtkLight_GetSwitch(cast(void*)swigCPtr);
    return ret;
  }

  public void SwitchOn() {
    vtkd_im.vtkLight_SwitchOn(cast(void*)swigCPtr);
  }

  public void SwitchOff() {
    vtkd_im.vtkLight_SwitchOff(cast(void*)swigCPtr);
  }

  public void SetPositional(int _arg) {
    vtkd_im.vtkLight_SetPositional(cast(void*)swigCPtr, _arg);
  }

  public int GetPositional() {
    auto ret = vtkd_im.vtkLight_GetPositional(cast(void*)swigCPtr);
    return ret;
  }

  public void PositionalOn() {
    vtkd_im.vtkLight_PositionalOn(cast(void*)swigCPtr);
  }

  public void PositionalOff() {
    vtkd_im.vtkLight_PositionalOff(cast(void*)swigCPtr);
  }

  public void SetExponent(double _arg) {
    vtkd_im.vtkLight_SetExponent(cast(void*)swigCPtr, _arg);
  }

  public double GetExponentMinValue() {
    auto ret = vtkd_im.vtkLight_GetExponentMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetExponentMaxValue() {
    auto ret = vtkd_im.vtkLight_GetExponentMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetExponent() {
    auto ret = vtkd_im.vtkLight_GetExponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetConeAngle(double _arg) {
    vtkd_im.vtkLight_SetConeAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetConeAngle() {
    auto ret = vtkd_im.vtkLight_GetConeAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAttenuationValues(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLight_SetAttenuationValues__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAttenuationValues(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLight_SetAttenuationValues__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAttenuationValues() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetAttenuationValues__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAttenuationValues(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkLight_GetAttenuationValues__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetTransformMatrix(vtkMatrix4x4.vtkMatrix4x4 arg0) {
    vtkd_im.vtkLight_SetTransformMatrix(cast(void*)swigCPtr, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(arg0));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetTransformMatrix() {
    void* cPtr = vtkd_im.vtkLight_GetTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public void GetTransformedPosition(double* a0, double* a1, double* a2) {
    vtkd_im.vtkLight_GetTransformedPosition__SWIG_0(cast(void*)swigCPtr, cast(void*)a0, cast(void*)a1, cast(void*)a2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetTransformedPosition(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkLight_GetTransformedPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetTransformedPosition() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetTransformedPosition__SWIG_2(cast(void*)swigCPtr);
    return ret;
  }

  public void GetTransformedFocalPoint(double* a0, double* a1, double* a2) {
    vtkd_im.vtkLight_GetTransformedFocalPoint__SWIG_0(cast(void*)swigCPtr, cast(void*)a0, cast(void*)a1, cast(void*)a2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetTransformedFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkLight_GetTransformedFocalPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetTransformedFocalPoint() {
    auto ret = cast(double*)vtkd_im.vtkLight_GetTransformedFocalPoint__SWIG_2(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDirectionAngle(double elevation, double azimuth) {
    vtkd_im.vtkLight_SetDirectionAngle__SWIG_0(cast(void*)swigCPtr, elevation, azimuth);
  }

  public void SetDirectionAngle(SWIGTYPE_p_double.SWIGTYPE_p_double ang) {
    vtkd_im.vtkLight_SetDirectionAngle__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(ang));
  }

  public void DeepCopy(vtkLight light) {
    vtkd_im.vtkLight_DeepCopy(cast(void*)swigCPtr, vtkLight.swigGetCPtr(light));
  }

  public void SetLightType(int _arg) {
    vtkd_im.vtkLight_SetLightType(cast(void*)swigCPtr, _arg);
  }

  public int GetLightType() {
    auto ret = vtkd_im.vtkLight_GetLightType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLightTypeToHeadlight() {
    vtkd_im.vtkLight_SetLightTypeToHeadlight(cast(void*)swigCPtr);
  }

  public void SetLightTypeToSceneLight() {
    vtkd_im.vtkLight_SetLightTypeToSceneLight(cast(void*)swigCPtr);
  }

  public void SetLightTypeToCameraLight() {
    vtkd_im.vtkLight_SetLightTypeToCameraLight(cast(void*)swigCPtr);
  }

  public int LightTypeIsHeadlight() {
    auto ret = vtkd_im.vtkLight_LightTypeIsHeadlight(cast(void*)swigCPtr);
    return ret;
  }

  public int LightTypeIsSceneLight() {
    auto ret = vtkd_im.vtkLight_LightTypeIsSceneLight(cast(void*)swigCPtr);
    return ret;
  }

  public int LightTypeIsCameraLight() {
    auto ret = vtkd_im.vtkLight_LightTypeIsCameraLight(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadSelf(SWIGTYPE_p_istream.SWIGTYPE_p_istream arg0) {
    vtkd_im.vtkLight_ReadSelf(cast(void*)swigCPtr, SWIGTYPE_p_istream.SWIGTYPE_p_istream.swigGetCPtr(arg0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void WriteSelf(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream os) {
    vtkd_im.vtkLight_WriteSelf(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(os));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }
}
