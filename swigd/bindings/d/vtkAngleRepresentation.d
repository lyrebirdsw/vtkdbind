/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAngleRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkHandleRepresentation;
static import vtkWidgetRepresentation;

class vtkAngleRepresentation : vtkWidgetRepresentation.vtkWidgetRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAngleRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAngleRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAngleRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAngleRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAngleRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAngleRepresentation ret = (cPtr is null) ? null : new vtkAngleRepresentation(cPtr, false);
    return ret;
  }

  public vtkAngleRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkAngleRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkAngleRepresentation ret = (cPtr is null) ? null : new vtkAngleRepresentation(cPtr, false);
    return ret;
  }

  alias vtkWidgetRepresentation.vtkWidgetRepresentation.NewInstance NewInstance;

  public double GetAngle() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPoint1WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetPoint1WorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetCenterWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetCenterWorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint2WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetPoint2WorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPoint1DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_SetPoint1DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetCenterDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_SetCenterDisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPoint2DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_SetPoint2DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint1DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetPoint1DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetCenterDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetCenterDisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint2DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkAngleRepresentation_GetPoint2DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetHandleRepresentation(vtkHandleRepresentation.vtkHandleRepresentation handle) {
    vtkd_im.vtkAngleRepresentation_SetHandleRepresentation(cast(void*)swigCPtr, vtkHandleRepresentation.vtkHandleRepresentation.swigGetCPtr(handle));
  }

  public void InstantiateHandleRepresentation() {
    vtkd_im.vtkAngleRepresentation_InstantiateHandleRepresentation(cast(void*)swigCPtr);
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetPoint1Representation() {
    void* cPtr = vtkd_im.vtkAngleRepresentation_GetPoint1Representation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetCenterRepresentation() {
    void* cPtr = vtkd_im.vtkAngleRepresentation_GetCenterRepresentation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetPoint2Representation() {
    void* cPtr = vtkd_im.vtkAngleRepresentation_GetPoint2Representation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public void SetTolerance(int _arg) {
    vtkd_im.vtkAngleRepresentation_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public int GetToleranceMinValue() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTolerance() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkAngleRepresentation_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkAngleRepresentation_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetRay1Visibility(int _arg) {
    vtkd_im.vtkAngleRepresentation_SetRay1Visibility(cast(void*)swigCPtr, _arg);
  }

  public int GetRay1Visibility() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetRay1Visibility(cast(void*)swigCPtr);
    return ret;
  }

  public void Ray1VisibilityOn() {
    vtkd_im.vtkAngleRepresentation_Ray1VisibilityOn(cast(void*)swigCPtr);
  }

  public void Ray1VisibilityOff() {
    vtkd_im.vtkAngleRepresentation_Ray1VisibilityOff(cast(void*)swigCPtr);
  }

  public void SetRay2Visibility(int _arg) {
    vtkd_im.vtkAngleRepresentation_SetRay2Visibility(cast(void*)swigCPtr, _arg);
  }

  public int GetRay2Visibility() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetRay2Visibility(cast(void*)swigCPtr);
    return ret;
  }

  public void Ray2VisibilityOn() {
    vtkd_im.vtkAngleRepresentation_Ray2VisibilityOn(cast(void*)swigCPtr);
  }

  public void Ray2VisibilityOff() {
    vtkd_im.vtkAngleRepresentation_Ray2VisibilityOff(cast(void*)swigCPtr);
  }

  public void SetArcVisibility(int _arg) {
    vtkd_im.vtkAngleRepresentation_SetArcVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetArcVisibility() {
    auto ret = vtkd_im.vtkAngleRepresentation_GetArcVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ArcVisibilityOn() {
    vtkd_im.vtkAngleRepresentation_ArcVisibilityOn(cast(void*)swigCPtr);
  }

  public void ArcVisibilityOff() {
    vtkd_im.vtkAngleRepresentation_ArcVisibilityOff(cast(void*)swigCPtr);
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkAngleRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkAngleRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void CenterWidgetInteraction(SWIGTYPE_p_double.SWIGTYPE_p_double e) {
    vtkd_im.vtkAngleRepresentation_CenterWidgetInteraction(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(e));
  }
}
