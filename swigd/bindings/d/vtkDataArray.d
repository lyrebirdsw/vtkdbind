/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataArray;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAbstractArray;
static import vtkIdList;
static import vtkDoubleArray;
static import vtkLookupTable;
static import SWIGTYPE_p_double;
static import vtkInformationDoubleVectorKey;
static import vtkInformation;

class vtkDataArray : vtkAbstractArray.vtkAbstractArray {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataArray_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataArray obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataArray_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataArray SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataArray_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray(cPtr, false);
    return ret;
  }

  public vtkDataArray NewInstance() const {
    void* cPtr = vtkd_im.vtkDataArray_NewInstance(cast(void*)swigCPtr);
    vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray(cPtr, false);
    return ret;
  }

  alias vtkAbstractArray.vtkAbstractArray.NewInstance NewInstance;

  public override void SetTuple(long i, long j, vtkAbstractArray.vtkAbstractArray source) {
    vtkd_im.vtkDataArray_SetTuple__SWIG_0(cast(void*)swigCPtr, i, j, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source));
  }

  public override void InsertTuple(long i, long j, vtkAbstractArray.vtkAbstractArray source) {
    vtkd_im.vtkDataArray_InsertTuple__SWIG_0(cast(void*)swigCPtr, i, j, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source));
  }

  public override long InsertNextTuple(long j, vtkAbstractArray.vtkAbstractArray source) {
    auto ret = vtkd_im.vtkDataArray_InsertNextTuple__SWIG_0(cast(void*)swigCPtr, j, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source));
    return ret;
  }

  public override void GetTuples(vtkIdList.vtkIdList ptIds, vtkAbstractArray.vtkAbstractArray output) {
    vtkd_im.vtkDataArray_GetTuples__SWIG_0(cast(void*)swigCPtr, vtkIdList.vtkIdList.swigGetCPtr(ptIds), vtkAbstractArray.vtkAbstractArray.swigGetCPtr(output));
  }

  public override void GetTuples(long p1, long p2, vtkAbstractArray.vtkAbstractArray output) {
    vtkd_im.vtkDataArray_GetTuples__SWIG_1(cast(void*)swigCPtr, p1, p2, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(output));
  }

  public override void InterpolateTuple(long i, vtkIdList.vtkIdList ptIndices, vtkAbstractArray.vtkAbstractArray source, double* weights) {
    vtkd_im.vtkDataArray_InterpolateTuple__SWIG_0(cast(void*)swigCPtr, i, vtkIdList.vtkIdList.swigGetCPtr(ptIndices), vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source), cast(void*)weights);
  }

  public override void InterpolateTuple(long i, long id1, vtkAbstractArray.vtkAbstractArray source1, long id2, vtkAbstractArray.vtkAbstractArray source2, double t) {
    vtkd_im.vtkDataArray_InterpolateTuple__SWIG_1(cast(void*)swigCPtr, i, id1, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source1), id2, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(source2), t);
  }

  public double* GetTuple(long i) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetTuple__SWIG_0(cast(void*)swigCPtr, i);
    return ret;
  }

  public void GetTuple(long i, double* tuple) {
    vtkd_im.vtkDataArray_GetTuple__SWIG_1(cast(void*)swigCPtr, i, cast(void*)tuple);
  }

  public double GetTuple1(long i) {
    auto ret = vtkd_im.vtkDataArray_GetTuple1(cast(void*)swigCPtr, i);
    return ret;
  }

  public double* GetTuple2(long i) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetTuple2(cast(void*)swigCPtr, i);
    return ret;
  }

  public double* GetTuple3(long i) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetTuple3(cast(void*)swigCPtr, i);
    return ret;
  }

  public double* GetTuple4(long i) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetTuple4(cast(void*)swigCPtr, i);
    return ret;
  }

  public double* GetTuple9(long i) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetTuple9(cast(void*)swigCPtr, i);
    return ret;
  }

  public void SetTuple(long i, float* tuple) {
    vtkd_im.vtkDataArray_SetTuple__SWIG_1(cast(void*)swigCPtr, i, cast(void*)tuple);
  }

  public void SetTuple(long i, double* tuple) {
    vtkd_im.vtkDataArray_SetTuple__SWIG_2(cast(void*)swigCPtr, i, cast(void*)tuple);
  }

  alias vtkAbstractArray.vtkAbstractArray.SetTuple SetTuple;

  public void SetTuple1(long i, double value) {
    vtkd_im.vtkDataArray_SetTuple1(cast(void*)swigCPtr, i, value);
  }

  public void SetTuple2(long i, double val0, double val1) {
    vtkd_im.vtkDataArray_SetTuple2(cast(void*)swigCPtr, i, val0, val1);
  }

  public void SetTuple3(long i, double val0, double val1, double val2) {
    vtkd_im.vtkDataArray_SetTuple3(cast(void*)swigCPtr, i, val0, val1, val2);
  }

  public void SetTuple4(long i, double val0, double val1, double val2, double val3) {
    vtkd_im.vtkDataArray_SetTuple4(cast(void*)swigCPtr, i, val0, val1, val2, val3);
  }

  public void SetTuple9(long i, double val0, double val1, double val2, double val3, double val4, double val5, double val6, double val7, double val8) {
    vtkd_im.vtkDataArray_SetTuple9(cast(void*)swigCPtr, i, val0, val1, val2, val3, val4, val5, val6, val7, val8);
  }

  public void InsertTuple(long i, float* tuple) {
    vtkd_im.vtkDataArray_InsertTuple__SWIG_1(cast(void*)swigCPtr, i, cast(void*)tuple);
  }

  public void InsertTuple(long i, double* tuple) {
    vtkd_im.vtkDataArray_InsertTuple__SWIG_2(cast(void*)swigCPtr, i, cast(void*)tuple);
  }

  alias vtkAbstractArray.vtkAbstractArray.InsertTuple InsertTuple;

  public void InsertTuple1(long i, double value) {
    vtkd_im.vtkDataArray_InsertTuple1(cast(void*)swigCPtr, i, value);
  }

  public void InsertTuple2(long i, double val0, double val1) {
    vtkd_im.vtkDataArray_InsertTuple2(cast(void*)swigCPtr, i, val0, val1);
  }

  public void InsertTuple3(long i, double val0, double val1, double val2) {
    vtkd_im.vtkDataArray_InsertTuple3(cast(void*)swigCPtr, i, val0, val1, val2);
  }

  public void InsertTuple4(long i, double val0, double val1, double val2, double val3) {
    vtkd_im.vtkDataArray_InsertTuple4(cast(void*)swigCPtr, i, val0, val1, val2, val3);
  }

  public void InsertTuple9(long i, double val0, double val1, double val2, double val3, double val4, double val5, double val6, double val7, double val8) {
    vtkd_im.vtkDataArray_InsertTuple9(cast(void*)swigCPtr, i, val0, val1, val2, val3, val4, val5, val6, val7, val8);
  }

  public long InsertNextTuple(float* tuple) {
    auto ret = vtkd_im.vtkDataArray_InsertNextTuple__SWIG_1(cast(void*)swigCPtr, cast(void*)tuple);
    return ret;
  }

  public long InsertNextTuple(double* tuple) {
    auto ret = vtkd_im.vtkDataArray_InsertNextTuple__SWIG_2(cast(void*)swigCPtr, cast(void*)tuple);
    return ret;
  }

  alias vtkAbstractArray.vtkAbstractArray.InsertNextTuple InsertNextTuple;

  public void InsertNextTuple1(double value) {
    vtkd_im.vtkDataArray_InsertNextTuple1(cast(void*)swigCPtr, value);
  }

  public void InsertNextTuple2(double val0, double val1) {
    vtkd_im.vtkDataArray_InsertNextTuple2(cast(void*)swigCPtr, val0, val1);
  }

  public void InsertNextTuple3(double val0, double val1, double val2) {
    vtkd_im.vtkDataArray_InsertNextTuple3(cast(void*)swigCPtr, val0, val1, val2);
  }

  public void InsertNextTuple4(double val0, double val1, double val2, double val3) {
    vtkd_im.vtkDataArray_InsertNextTuple4(cast(void*)swigCPtr, val0, val1, val2, val3);
  }

  public void InsertNextTuple9(double val0, double val1, double val2, double val3, double val4, double val5, double val6, double val7, double val8) {
    vtkd_im.vtkDataArray_InsertNextTuple9(cast(void*)swigCPtr, val0, val1, val2, val3, val4, val5, val6, val7, val8);
  }

  public void RemoveTuple(long id) {
    vtkd_im.vtkDataArray_RemoveTuple(cast(void*)swigCPtr, id);
  }

  public void RemoveFirstTuple() {
    vtkd_im.vtkDataArray_RemoveFirstTuple(cast(void*)swigCPtr);
  }

  public void RemoveLastTuple() {
    vtkd_im.vtkDataArray_RemoveLastTuple(cast(void*)swigCPtr);
  }

  public double GetComponent(long i, int j) {
    auto ret = vtkd_im.vtkDataArray_GetComponent(cast(void*)swigCPtr, i, j);
    return ret;
  }

  public void SetComponent(long i, int j, double c) {
    vtkd_im.vtkDataArray_SetComponent(cast(void*)swigCPtr, i, j, c);
  }

  public void InsertComponent(long i, int j, double c) {
    vtkd_im.vtkDataArray_InsertComponent(cast(void*)swigCPtr, i, j, c);
  }

  public void GetData(long tupleMin, long tupleMax, int compMin, int compMax, vtkDoubleArray.vtkDoubleArray data) {
    vtkd_im.vtkDataArray_GetData(cast(void*)swigCPtr, tupleMin, tupleMax, compMin, compMax, vtkDoubleArray.vtkDoubleArray.swigGetCPtr(data));
  }

  public override void DeepCopy(vtkAbstractArray.vtkAbstractArray aa) {
    vtkd_im.vtkDataArray_DeepCopy__SWIG_0(cast(void*)swigCPtr, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(aa));
  }

  public void DeepCopy(vtkDataArray da) {
    vtkd_im.vtkDataArray_DeepCopy__SWIG_1(cast(void*)swigCPtr, vtkDataArray.swigGetCPtr(da));
  }

  alias vtkAbstractArray.vtkAbstractArray.DeepCopy DeepCopy;

  public void FillComponent(int j, double c) {
    vtkd_im.vtkDataArray_FillComponent(cast(void*)swigCPtr, j, c);
  }

  public void CopyComponent(int j, vtkDataArray from, int fromComponent) {
    vtkd_im.vtkDataArray_CopyComponent(cast(void*)swigCPtr, j, vtkDataArray.swigGetCPtr(from), fromComponent);
  }

  public void* WriteVoidPointer(long id, long number) {
    auto ret = cast(void*)vtkd_im.vtkDataArray_WriteVoidPointer(cast(void*)swigCPtr, id, number);
    return ret;
  }

  public void CreateDefaultLookupTable() {
    vtkd_im.vtkDataArray_CreateDefaultLookupTable(cast(void*)swigCPtr);
  }

  public void SetLookupTable(vtkLookupTable.vtkLookupTable lut) {
    vtkd_im.vtkDataArray_SetLookupTable(cast(void*)swigCPtr, vtkLookupTable.vtkLookupTable.swigGetCPtr(lut));
  }

  public vtkLookupTable.vtkLookupTable GetLookupTable() {
    void* cPtr = vtkd_im.vtkDataArray_GetLookupTable(cast(void*)swigCPtr);
    vtkLookupTable.vtkLookupTable ret = (cPtr is null) ? null : new vtkLookupTable.vtkLookupTable(cPtr, false);
    return ret;
  }

  public void GetRange(SWIGTYPE_p_double.SWIGTYPE_p_double range, int comp) {
    vtkd_im.vtkDataArray_GetRange__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range), comp);
  }

  public double* GetRange(int comp) {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetRange__SWIG_1(cast(void*)swigCPtr, comp);
    return ret;
  }

  public double* GetRange() {
    auto ret = cast(double*)vtkd_im.vtkDataArray_GetRange__SWIG_2(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRange(SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkDataArray_GetRange__SWIG_3(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public void GetDataTypeRange(SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkDataArray_GetDataTypeRange__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public double GetDataTypeMin() {
    auto ret = vtkd_im.vtkDataArray_GetDataTypeMin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDataTypeMax() {
    auto ret = vtkd_im.vtkDataArray_GetDataTypeMax__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public static void GetDataTypeRange(int type, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkDataArray_GetDataTypeRange__SWIG_1(type, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public static double GetDataTypeMin(int type) {
    auto ret = vtkd_im.vtkDataArray_GetDataTypeMin__SWIG_1(type);
    return ret;
  }

  public static double GetDataTypeMax(int type) {
    auto ret = vtkd_im.vtkDataArray_GetDataTypeMax__SWIG_1(type);
    return ret;
  }

  public double GetMaxNorm() {
    auto ret = vtkd_im.vtkDataArray_GetMaxNorm(cast(void*)swigCPtr);
    return ret;
  }

  public static vtkDataArray CreateDataArray(int dataType) {
    void* cPtr = vtkd_im.vtkDataArray_CreateDataArray(dataType);
    vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey COMPONENT_RANGE() {
    void* cPtr = vtkd_im.vtkDataArray_COMPONENT_RANGE();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey L2_NORM_RANGE() {
    void* cPtr = vtkd_im.vtkDataArray_L2_NORM_RANGE();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public int CopyInformation(vtkInformation.vtkInformation infoFrom, int deep) {
    auto ret = vtkd_im.vtkDataArray_CopyInformation__SWIG_0(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(infoFrom), deep);
    return ret;
  }

  public int CopyInformation(vtkInformation.vtkInformation infoFrom) {
    auto ret = vtkd_im.vtkDataArray_CopyInformation__SWIG_1(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(infoFrom));
    return ret;
  }
}
