/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRenderView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInteractorObserver;
static import vtkAbstractTransform;
static import vtkAlgorithmOutput;
static import vtkTexture;
static import SWIGTYPE_p_int;
static import vtkRenderViewBase;

class vtkRenderView : vtkRenderViewBase.vtkRenderViewBase {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRenderView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRenderView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkRenderView New() {
    void* cPtr = vtkd_im.vtkRenderView_New();
    vtkRenderView ret = (cPtr is null) ? null : new vtkRenderView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRenderView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRenderView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRenderView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRenderView ret = (cPtr is null) ? null : new vtkRenderView(cPtr, false);
    return ret;
  }

  public vtkRenderView NewInstance() const {
    void* cPtr = vtkd_im.vtkRenderView_NewInstance(cast(void*)swigCPtr);
    vtkRenderView ret = (cPtr is null) ? null : new vtkRenderView(cPtr, false);
    return ret;
  }

  alias vtkRenderViewBase.vtkRenderViewBase.NewInstance NewInstance;

  public void SetInteractorStyle(vtkInteractorObserver.vtkInteractorObserver style) {
    vtkd_im.vtkRenderView_SetInteractorStyle(cast(void*)swigCPtr, vtkInteractorObserver.vtkInteractorObserver.swigGetCPtr(style));
  }

  public vtkInteractorObserver.vtkInteractorObserver GetInteractorStyle() {
    void* cPtr = vtkd_im.vtkRenderView_GetInteractorStyle(cast(void*)swigCPtr);
    vtkInteractorObserver.vtkInteractorObserver ret = (cPtr is null) ? null : new vtkInteractorObserver.vtkInteractorObserver(cPtr, false);
    return ret;
  }

  public void SetInteractionMode(int mode) {
    vtkd_im.vtkRenderView_SetInteractionMode(cast(void*)swigCPtr, mode);
  }

  public int GetInteractionMode() {
    auto ret = vtkd_im.vtkRenderView_GetInteractionMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInteractionModeTo2D() {
    vtkd_im.vtkRenderView_SetInteractionModeTo2D(cast(void*)swigCPtr);
  }

  public void SetInteractionModeTo3D() {
    vtkd_im.vtkRenderView_SetInteractionModeTo3D(cast(void*)swigCPtr);
  }

  public void SetTransform(vtkAbstractTransform.vtkAbstractTransform transform) {
    vtkd_im.vtkRenderView_SetTransform(cast(void*)swigCPtr, vtkAbstractTransform.vtkAbstractTransform.swigGetCPtr(transform));
  }

  public vtkAbstractTransform.vtkAbstractTransform GetTransform() {
    void* cPtr = vtkd_im.vtkRenderView_GetTransform(cast(void*)swigCPtr);
    vtkAbstractTransform.vtkAbstractTransform ret = (cPtr is null) ? null : new vtkAbstractTransform.vtkAbstractTransform(cPtr, false);
    return ret;
  }

  public void SetDisplayHoverText(bool b) {
    vtkd_im.vtkRenderView_SetDisplayHoverText(cast(void*)swigCPtr, b);
  }

  public bool GetDisplayHoverText() {
    bool ret = vtkd_im.vtkRenderView_GetDisplayHoverText(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void DisplayHoverTextOn() {
    vtkd_im.vtkRenderView_DisplayHoverTextOn(cast(void*)swigCPtr);
  }

  public void DisplayHoverTextOff() {
    vtkd_im.vtkRenderView_DisplayHoverTextOff(cast(void*)swigCPtr);
  }

  public void SetSelectionMode(int _arg) {
    vtkd_im.vtkRenderView_SetSelectionMode(cast(void*)swigCPtr, _arg);
  }

  public int GetSelectionModeMinValue() {
    auto ret = vtkd_im.vtkRenderView_GetSelectionModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSelectionModeMaxValue() {
    auto ret = vtkd_im.vtkRenderView_GetSelectionModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSelectionMode() {
    auto ret = vtkd_im.vtkRenderView_GetSelectionMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSelectionModeToSurface() {
    vtkd_im.vtkRenderView_SetSelectionModeToSurface(cast(void*)swigCPtr);
  }

  public void SetSelectionModeToFrustum() {
    vtkd_im.vtkRenderView_SetSelectionModeToFrustum(cast(void*)swigCPtr);
  }

  public void AddLabels(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    vtkd_im.vtkRenderView_AddLabels(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
  }

  public void RemoveLabels(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    vtkd_im.vtkRenderView_RemoveLabels(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
  }

  public void SetIconTexture(vtkTexture.vtkTexture texture) {
    vtkd_im.vtkRenderView_SetIconTexture(cast(void*)swigCPtr, vtkTexture.vtkTexture.swigGetCPtr(texture));
  }

  public vtkTexture.vtkTexture GetIconTexture() {
    void* cPtr = vtkd_im.vtkRenderView_GetIconTexture(cast(void*)swigCPtr);
    vtkTexture.vtkTexture ret = (cPtr is null) ? null : new vtkTexture.vtkTexture(cPtr, false);
    return ret;
  }

  public void SetIconSize(int _arg1, int _arg2) {
    vtkd_im.vtkRenderView_SetIconSize__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetIconSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkRenderView_SetIconSize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetIconSize() {
    auto ret = cast(int*)vtkd_im.vtkRenderView_GetIconSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetIconSize(int* _arg1, int* _arg2) {
    vtkd_im.vtkRenderView_GetIconSize__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetIconSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkRenderView_GetIconSize__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetDisplaySize(int _arg1, int _arg2) {
    vtkd_im.vtkRenderView_SetDisplaySize__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetDisplaySize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkRenderView_SetDisplaySize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetDisplaySize() {
    auto ret = cast(int*)vtkd_im.vtkRenderView_GetDisplaySize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDisplaySize(int* dsx, int* dsy) {
    vtkd_im.vtkRenderView_GetDisplaySize__SWIG_1(cast(void*)swigCPtr, cast(void*)dsx, cast(void*)dsy);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void SetLabelPlacementMode(int mode) {
    vtkd_im.vtkRenderView_SetLabelPlacementMode(cast(void*)swigCPtr, mode);
  }

  public int GetLabelPlacementMode() {
    auto ret = vtkd_im.vtkRenderView_GetLabelPlacementMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelPlacementModeToNoOverlap() {
    vtkd_im.vtkRenderView_SetLabelPlacementModeToNoOverlap(cast(void*)swigCPtr);
  }

  public void SetLabelPlacementModeToAll() {
    vtkd_im.vtkRenderView_SetLabelPlacementModeToAll(cast(void*)swigCPtr);
  }

  public void SetLabelRenderMode(int mode) {
    vtkd_im.vtkRenderView_SetLabelRenderMode(cast(void*)swigCPtr, mode);
  }

  public int GetLabelRenderMode() {
    auto ret = vtkd_im.vtkRenderView_GetLabelRenderMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelRenderModeToFreetype() {
    vtkd_im.vtkRenderView_SetLabelRenderModeToFreetype(cast(void*)swigCPtr);
  }

  public void SetLabelRenderModeToQt() {
    vtkd_im.vtkRenderView_SetLabelRenderModeToQt(cast(void*)swigCPtr);
  }

  public void SetRenderOnMouseMove(bool b) {
    vtkd_im.vtkRenderView_SetRenderOnMouseMove(cast(void*)swigCPtr, b);
  }

  public bool GetRenderOnMouseMove() {
    bool ret = vtkd_im.vtkRenderView_GetRenderOnMouseMove(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void RenderOnMouseMoveOn() {
    vtkd_im.vtkRenderView_RenderOnMouseMoveOn(cast(void*)swigCPtr);
  }

  public void RenderOnMouseMoveOff() {
    vtkd_im.vtkRenderView_RenderOnMouseMoveOff(cast(void*)swigCPtr);
  }
}
