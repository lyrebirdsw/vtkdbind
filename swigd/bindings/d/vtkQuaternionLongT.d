/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionLongT;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_long;
static import SWIGTYPE_p_a_3__long;
static import vtkLongTuple4TN;

class vtkQuaternionLongT : vtkLongTuple4TN.vtkLongTuple4TN {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionLongT_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionLongT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionLongT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionLongT__SWIG_0(), true);
  }

  public this(core.stdc.config.c_long scalar) {
    this(vtkd_im.new_vtkQuaternionLongT__SWIG_1(scalar), true);
  }

  public this(core.stdc.config.c_long* init) {
    this(vtkd_im.new_vtkQuaternionLongT__SWIG_2(cast(void*)init), true);
  }

  public this(core.stdc.config.c_long w, core.stdc.config.c_long x, core.stdc.config.c_long y, core.stdc.config.c_long z) {
    this(vtkd_im.new_vtkQuaternionLongT__SWIG_3(w, x, y, z), true);
  }

  public core.stdc.config.c_long SquaredNorm() const {
    auto ret = vtkd_im.vtkQuaternionLongT_SquaredNorm(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_long Norm() const {
    auto ret = vtkd_im.vtkQuaternionLongT_Norm(cast(void*)swigCPtr);
    return ret;
  }

  public void ToIdentity() {
    vtkd_im.vtkQuaternionLongT_ToIdentity(cast(void*)swigCPtr);
  }

  public static vtkQuaternionLongT Identity() {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_Identity(), true);
    return ret;
  }

  public core.stdc.config.c_long Normalize() {
    auto ret = vtkd_im.vtkQuaternionLongT_Normalize(cast(void*)swigCPtr);
    return ret;
  }

  public vtkQuaternionLongT Normalized() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Conjugate() {
    vtkd_im.vtkQuaternionLongT_Conjugate(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongT Conjugated() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Invert() {
    vtkd_im.vtkQuaternionLongT_Invert(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongT Inverse() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitLog() {
    vtkd_im.vtkQuaternionLongT_ToUnitLog(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongT UnitLog() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitExp() {
    vtkd_im.vtkQuaternionLongT_ToUnitExp(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongT UnitExp() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void NormalizeWithAngleInDegrees() {
    vtkd_im.vtkQuaternionLongT_NormalizeWithAngleInDegrees(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongT NormalizedWithAngleInDegrees() const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Set(core.stdc.config.c_long w, core.stdc.config.c_long x, core.stdc.config.c_long y, core.stdc.config.c_long z) {
    vtkd_im.vtkQuaternionLongT_Set__SWIG_0(cast(void*)swigCPtr, w, x, y, z);
  }

  public void Set(SWIGTYPE_p_long.SWIGTYPE_p_long quat) {
    vtkd_im.vtkQuaternionLongT_Set__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_long.SWIGTYPE_p_long.swigGetCPtr(quat));
  }

  public void Get(SWIGTYPE_p_long.SWIGTYPE_p_long quat) const {
    vtkd_im.vtkQuaternionLongT_Get(cast(void*)swigCPtr, SWIGTYPE_p_long.SWIGTYPE_p_long.swigGetCPtr(quat));
  }

  public void SetW(core.stdc.config.c_long w) {
    vtkd_im.vtkQuaternionLongT_SetW(cast(void*)swigCPtr, w);
  }

  public core.stdc.config.c_long GetW() const {
    auto ret = vtkd_im.vtkQuaternionLongT_GetW(cast(void*)swigCPtr);
    return ret;
  }

  public void SetX(core.stdc.config.c_long x) {
    vtkd_im.vtkQuaternionLongT_SetX(cast(void*)swigCPtr, x);
  }

  public core.stdc.config.c_long GetX() const {
    auto ret = vtkd_im.vtkQuaternionLongT_GetX(cast(void*)swigCPtr);
    return ret;
  }

  public void SetY(core.stdc.config.c_long y) {
    vtkd_im.vtkQuaternionLongT_SetY(cast(void*)swigCPtr, y);
  }

  public core.stdc.config.c_long GetY() const {
    auto ret = vtkd_im.vtkQuaternionLongT_GetY(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZ(core.stdc.config.c_long z) {
    vtkd_im.vtkQuaternionLongT_SetZ(cast(void*)swigCPtr, z);
  }

  public core.stdc.config.c_long GetZ() const {
    auto ret = vtkd_im.vtkQuaternionLongT_GetZ(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_long GetRotationAngleAndAxis(SWIGTYPE_p_long.SWIGTYPE_p_long axis) const {
    auto ret = vtkd_im.vtkQuaternionLongT_GetRotationAngleAndAxis(cast(void*)swigCPtr, SWIGTYPE_p_long.SWIGTYPE_p_long.swigGetCPtr(axis));
    return ret;
  }

  public void SetRotationAngleAndAxis(core.stdc.config.c_long angle, SWIGTYPE_p_long.SWIGTYPE_p_long axis) {
    vtkd_im.vtkQuaternionLongT_SetRotationAngleAndAxis__SWIG_0(cast(void*)swigCPtr, angle, SWIGTYPE_p_long.SWIGTYPE_p_long.swigGetCPtr(axis));
  }

  public void SetRotationAngleAndAxis(core.stdc.config.c_long angle, core.stdc.config.c_long x, core.stdc.config.c_long y, core.stdc.config.c_long z) {
    vtkd_im.vtkQuaternionLongT_SetRotationAngleAndAxis__SWIG_1(cast(void*)swigCPtr, angle, x, y, z);
  }

  public void ToMatrix3x3(SWIGTYPE_p_a_3__long.SWIGTYPE_p_a_3__long A) const {
    vtkd_im.vtkQuaternionLongT_ToMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__long.SWIGTYPE_p_a_3__long.swigGetCPtr(A));
  }

  public void FromMatrix3x3(SWIGTYPE_p_a_3__long.SWIGTYPE_p_a_3__long A) {
    vtkd_im.vtkQuaternionLongT_FromMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__long.SWIGTYPE_p_a_3__long.swigGetCPtr(A));
  }

  public vtkQuaternionLongT Slerp(core.stdc.config.c_long t, vtkQuaternionLongT q) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_Slerp(cast(void*)swigCPtr, t, vtkQuaternionLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongT InnerPoint(vtkQuaternionLongT q1, vtkQuaternionLongT q2) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_InnerPoint(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q1), vtkQuaternionLongT.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Equal(vtkQuaternionLongT q) {
    vtkd_im.vtkQuaternionLongT_Equal(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkQuaternionLongT swigOpAdd(vtkQuaternionLongT q) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongT swigOpSub(vtkQuaternionLongT q) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpSub(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongT swigOpMul(vtkQuaternionLongT q) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongT swigOpMul(core.stdc.config.c_long scalar) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpMulAssign(core.stdc.config.c_long scalar) const {
    vtkd_im.vtkQuaternionLongT_swigOpMulAssign(cast(void*)swigCPtr, scalar);
  }

  public vtkQuaternionLongT swigOpDiv(vtkQuaternionLongT q) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongT swigOpDiv(core.stdc.config.c_long scalar) const {
    vtkQuaternionLongT ret = new vtkQuaternionLongT(vtkd_im.vtkQuaternionLongT_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpDivAssign(core.stdc.config.c_long scalar) {
    vtkd_im.vtkQuaternionLongT_swigOpDivAssign(cast(void*)swigCPtr, scalar);
  }
}
