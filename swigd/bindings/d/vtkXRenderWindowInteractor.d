/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkXRenderWindowInteractor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_XtAppContext;
static import SWIGTYPE_p_Widget;
static import vtkRenderWindowInteractor;

class vtkXRenderWindowInteractor : vtkRenderWindowInteractor.vtkRenderWindowInteractor {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkXRenderWindowInteractor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkXRenderWindowInteractor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkXRenderWindowInteractor New() {
    void* cPtr = vtkd_im.vtkXRenderWindowInteractor_New();
    vtkXRenderWindowInteractor ret = (cPtr is null) ? null : new vtkXRenderWindowInteractor(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkXRenderWindowInteractor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkXRenderWindowInteractor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkXRenderWindowInteractor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkXRenderWindowInteractor ret = (cPtr is null) ? null : new vtkXRenderWindowInteractor(cPtr, false);
    return ret;
  }

  public vtkXRenderWindowInteractor NewInstance() const {
    void* cPtr = vtkd_im.vtkXRenderWindowInteractor_NewInstance(cast(void*)swigCPtr);
    vtkXRenderWindowInteractor ret = (cPtr is null) ? null : new vtkXRenderWindowInteractor(cPtr, false);
    return ret;
  }

  alias vtkRenderWindowInteractor.vtkRenderWindowInteractor.NewInstance NewInstance;

  public override void Initialize() {
    vtkd_im.vtkXRenderWindowInteractor_Initialize__SWIG_0(cast(void*)swigCPtr);
  }

  public int GetBreakLoopFlag() {
    auto ret = vtkd_im.vtkXRenderWindowInteractor_GetBreakLoopFlag(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBreakLoopFlag(int arg0) {
    vtkd_im.vtkXRenderWindowInteractor_SetBreakLoopFlag(cast(void*)swigCPtr, arg0);
  }

  public void BreakLoopFlagOff() {
    vtkd_im.vtkXRenderWindowInteractor_BreakLoopFlagOff(cast(void*)swigCPtr);
  }

  public void BreakLoopFlagOn() {
    vtkd_im.vtkXRenderWindowInteractor_BreakLoopFlagOn(cast(void*)swigCPtr);
  }

  public void Initialize(SWIGTYPE_p_XtAppContext.SWIGTYPE_p_XtAppContext app) {
    vtkd_im.vtkXRenderWindowInteractor_Initialize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_XtAppContext.SWIGTYPE_p_XtAppContext.swigGetCPtr(app));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  alias vtkRenderWindowInteractor.vtkRenderWindowInteractor.Initialize Initialize;

  public SWIGTYPE_p_XtAppContext.SWIGTYPE_p_XtAppContext GetApp() {
    SWIGTYPE_p_XtAppContext.SWIGTYPE_p_XtAppContext ret = new SWIGTYPE_p_XtAppContext.SWIGTYPE_p_XtAppContext(vtkd_im.vtkXRenderWindowInteractor_GetApp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void SetWidget(SWIGTYPE_p_Widget.SWIGTYPE_p_Widget arg0) {
    vtkd_im.vtkXRenderWindowInteractor_SetWidget(cast(void*)swigCPtr, SWIGTYPE_p_Widget.SWIGTYPE_p_Widget.swigGetCPtr(arg0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_Widget.SWIGTYPE_p_Widget GetWidget() {
    SWIGTYPE_p_Widget.SWIGTYPE_p_Widget ret = new SWIGTYPE_p_Widget.SWIGTYPE_p_Widget(vtkd_im.vtkXRenderWindowInteractor_GetWidget(cast(void*)swigCPtr), true);
    return ret;
  }

  public void SetTopLevelShell(SWIGTYPE_p_Widget.SWIGTYPE_p_Widget arg0) {
    vtkd_im.vtkXRenderWindowInteractor_SetTopLevelShell(cast(void*)swigCPtr, SWIGTYPE_p_Widget.SWIGTYPE_p_Widget.swigGetCPtr(arg0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_Widget.SWIGTYPE_p_Widget GetTopLevelShell() {
    SWIGTYPE_p_Widget.SWIGTYPE_p_Widget ret = new SWIGTYPE_p_Widget.SWIGTYPE_p_Widget(vtkd_im.vtkXRenderWindowInteractor_GetTopLevelShell(cast(void*)swigCPtr), true);
    return ret;
  }
}
