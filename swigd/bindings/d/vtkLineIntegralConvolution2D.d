/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLineIntegralConvolution2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTextureObject;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkRenderWindow;
static import SWIGTYPE_p_unsigned_int;
static import vtkObject;

class vtkLineIntegralConvolution2D : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLineIntegralConvolution2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLineIntegralConvolution2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLineIntegralConvolution2D New() {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_New();
    vtkLineIntegralConvolution2D ret = (cPtr is null) ? null : new vtkLineIntegralConvolution2D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLineIntegralConvolution2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLineIntegralConvolution2D ret = (cPtr is null) ? null : new vtkLineIntegralConvolution2D(cPtr, false);
    return ret;
  }

  public vtkLineIntegralConvolution2D NewInstance() const {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_NewInstance(cast(void*)swigCPtr);
    vtkLineIntegralConvolution2D ret = (cPtr is null) ? null : new vtkLineIntegralConvolution2D(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetEnhancedLIC(int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetEnhancedLIC(cast(void*)swigCPtr, _arg);
  }

  public int GetEnhancedLIC() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetEnhancedLIC(cast(void*)swigCPtr);
    return ret;
  }

  public void EnhancedLICOn() {
    vtkd_im.vtkLineIntegralConvolution2D_EnhancedLICOn(cast(void*)swigCPtr);
  }

  public void EnhancedLICOff() {
    vtkd_im.vtkLineIntegralConvolution2D_EnhancedLICOff(cast(void*)swigCPtr);
  }

  public void SetLICForSurface(int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetLICForSurface(cast(void*)swigCPtr, _arg);
  }

  public int GetLICForSurface() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetLICForSurface(cast(void*)swigCPtr);
    return ret;
  }

  public void LICForSurfaceOn() {
    vtkd_im.vtkLineIntegralConvolution2D_LICForSurfaceOn(cast(void*)swigCPtr);
  }

  public void LICForSurfaceOff() {
    vtkd_im.vtkLineIntegralConvolution2D_LICForSurfaceOff(cast(void*)swigCPtr);
  }

  public void SetNumberOfSteps(int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetNumberOfSteps(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfSteps() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetNumberOfSteps(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLICStepSize(double _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetLICStepSize(cast(void*)swigCPtr, _arg);
  }

  public double GetLICStepSizeMinValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetLICStepSizeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLICStepSizeMaxValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetLICStepSizeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLICStepSize() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetLICStepSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNoise(vtkTextureObject.vtkTextureObject noise) {
    vtkd_im.vtkLineIntegralConvolution2D_SetNoise(cast(void*)swigCPtr, vtkTextureObject.vtkTextureObject.swigGetCPtr(noise));
  }

  public vtkTextureObject.vtkTextureObject GetNoise() {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_GetNoise(cast(void*)swigCPtr);
    vtkTextureObject.vtkTextureObject ret = (cPtr is null) ? null : new vtkTextureObject.vtkTextureObject(cPtr, false);
    return ret;
  }

  public void SetVectorField(vtkTextureObject.vtkTextureObject vectorField) {
    vtkd_im.vtkLineIntegralConvolution2D_SetVectorField(cast(void*)swigCPtr, vtkTextureObject.vtkTextureObject.swigGetCPtr(vectorField));
  }

  public vtkTextureObject.vtkTextureObject GetVectorField() {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_GetVectorField(cast(void*)swigCPtr);
    vtkTextureObject.vtkTextureObject ret = (cPtr is null) ? null : new vtkTextureObject.vtkTextureObject(cPtr, false);
    return ret;
  }

  public void SetComponentIds(int _arg1, int _arg2) {
    vtkd_im.vtkLineIntegralConvolution2D_SetComponentIds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetComponentIds(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetComponentIds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetComponentIds() {
    auto ret = cast(int*)vtkd_im.vtkLineIntegralConvolution2D_GetComponentIds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetComponentIds(int* _arg1, int* _arg2) {
    vtkd_im.vtkLineIntegralConvolution2D_GetComponentIds__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetComponentIds(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_GetComponentIds__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetGridSpacings(double _arg1, double _arg2) {
    vtkd_im.vtkLineIntegralConvolution2D_SetGridSpacings__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetGridSpacings(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetGridSpacings__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetGridSpacings() {
    auto ret = cast(double*)vtkd_im.vtkLineIntegralConvolution2D_GetGridSpacings__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetGridSpacings(double* _arg1, double* _arg2) {
    vtkd_im.vtkLineIntegralConvolution2D_GetGridSpacings__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetGridSpacings(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_GetGridSpacings__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetTransformVectors(int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetTransformVectors(cast(void*)swigCPtr, _arg);
  }

  public int GetTransformVectorsMinValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetTransformVectorsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTransformVectorsMaxValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetTransformVectorsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void TransformVectorsOn() {
    vtkd_im.vtkLineIntegralConvolution2D_TransformVectorsOn(cast(void*)swigCPtr);
  }

  public void TransformVectorsOff() {
    vtkd_im.vtkLineIntegralConvolution2D_TransformVectorsOff(cast(void*)swigCPtr);
  }

  public int GetTransformVectors() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetTransformVectors(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMagnification(int _arg) {
    vtkd_im.vtkLineIntegralConvolution2D_SetMagnification(cast(void*)swigCPtr, _arg);
  }

  public int GetMagnificationMinValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetMagnificationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMagnificationMaxValue() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetMagnificationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMagnification() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_GetMagnification(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVectorShiftScale(double shift, double scale) {
    vtkd_im.vtkLineIntegralConvolution2D_SetVectorShiftScale(cast(void*)swigCPtr, shift, scale);
  }

  public static bool IsSupported(vtkRenderWindow.vtkRenderWindow renWin) {
    bool ret = vtkd_im.vtkLineIntegralConvolution2D_IsSupported(vtkRenderWindow.vtkRenderWindow.swigGetCPtr(renWin)) ? true : false;
    return ret;
  }

  public int Execute() {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_Execute__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public int Execute(SWIGTYPE_p_unsigned_int.SWIGTYPE_p_unsigned_int extent) {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_Execute__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_int.SWIGTYPE_p_unsigned_int.swigGetCPtr(extent));
    return ret;
  }

  public int Execute(SWIGTYPE_p_int.SWIGTYPE_p_int extent) {
    auto ret = vtkd_im.vtkLineIntegralConvolution2D_Execute__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(extent));
    return ret;
  }

  public void SetLIC(vtkTextureObject.vtkTextureObject lic) {
    vtkd_im.vtkLineIntegralConvolution2D_SetLIC(cast(void*)swigCPtr, vtkTextureObject.vtkTextureObject.swigGetCPtr(lic));
  }

  public vtkTextureObject.vtkTextureObject GetLIC() {
    void* cPtr = vtkd_im.vtkLineIntegralConvolution2D_GetLIC(cast(void*)swigCPtr);
    vtkTextureObject.vtkTextureObject ret = (cPtr is null) ? null : new vtkTextureObject.vtkTextureObject(cPtr, false);
    return ret;
  }
}
