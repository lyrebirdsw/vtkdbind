/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMergeFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSet;
static import vtkAlgorithmOutput;
static import vtkDataSetAlgorithm;

class vtkMergeFilter : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMergeFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMergeFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkMergeFilter New() {
    void* cPtr = vtkd_im.vtkMergeFilter_New();
    vtkMergeFilter ret = (cPtr is null) ? null : new vtkMergeFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMergeFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMergeFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMergeFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMergeFilter ret = (cPtr is null) ? null : new vtkMergeFilter(cPtr, false);
    return ret;
  }

  public vtkMergeFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkMergeFilter_NewInstance(cast(void*)swigCPtr);
    vtkMergeFilter ret = (cPtr is null) ? null : new vtkMergeFilter(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public void SetGeometryInputData(vtkDataSet.vtkDataSet input) {
    vtkd_im.vtkMergeFilter_SetGeometryInputData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(input));
  }

  public vtkDataSet.vtkDataSet GetGeometry() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetGeometry(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetGeometryConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetGeometryConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetScalarsData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkMergeFilter_SetScalarsData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetScalars() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetScalars(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetScalarsConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetScalarsConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetVectorsData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkMergeFilter_SetVectorsData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetVectors() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetVectors(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetVectorsConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetVectorsConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetNormalsData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkMergeFilter_SetNormalsData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetNormals() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetNormals(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetNormalsConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetNormalsConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetTCoordsData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkMergeFilter_SetTCoordsData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetTCoords() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetTCoords(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetTCoordsConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetTCoordsConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetTensorsData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkMergeFilter_SetTensorsData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetTensors() {
    void* cPtr = vtkd_im.vtkMergeFilter_GetTensors(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetTensorsConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkMergeFilter_SetTensorsConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void AddField(string name, vtkDataSet.vtkDataSet input) {
    vtkd_im.vtkMergeFilter_AddField(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), vtkDataSet.vtkDataSet.swigGetCPtr(input));
  }
}
