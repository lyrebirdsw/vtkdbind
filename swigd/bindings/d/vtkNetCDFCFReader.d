/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkNetCDFCFReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkNetCDFReader;

class vtkNetCDFCFReader : vtkNetCDFReader.vtkNetCDFReader {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkNetCDFCFReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkNetCDFCFReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkNetCDFCFReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkNetCDFCFReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkNetCDFCFReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkNetCDFCFReader ret = (cPtr is null) ? null : new vtkNetCDFCFReader(cPtr, false);
    return ret;
  }

  public vtkNetCDFCFReader NewInstance() const {
    void* cPtr = vtkd_im.vtkNetCDFCFReader_NewInstance(cast(void*)swigCPtr);
    vtkNetCDFCFReader ret = (cPtr is null) ? null : new vtkNetCDFCFReader(cPtr, false);
    return ret;
  }

  alias vtkNetCDFReader.vtkNetCDFReader.NewInstance NewInstance;

  public static vtkNetCDFCFReader New() {
    void* cPtr = vtkd_im.vtkNetCDFCFReader_New();
    vtkNetCDFCFReader ret = (cPtr is null) ? null : new vtkNetCDFCFReader(cPtr, false);
    return ret;
  }

  public int GetSphericalCoordinates() {
    auto ret = vtkd_im.vtkNetCDFCFReader_GetSphericalCoordinates(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSphericalCoordinates(int _arg) {
    vtkd_im.vtkNetCDFCFReader_SetSphericalCoordinates(cast(void*)swigCPtr, _arg);
  }

  public void SphericalCoordinatesOn() {
    vtkd_im.vtkNetCDFCFReader_SphericalCoordinatesOn(cast(void*)swigCPtr);
  }

  public void SphericalCoordinatesOff() {
    vtkd_im.vtkNetCDFCFReader_SphericalCoordinatesOff(cast(void*)swigCPtr);
  }

  public double GetVerticalScale() {
    auto ret = vtkd_im.vtkNetCDFCFReader_GetVerticalScale(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVerticalScale(double _arg) {
    vtkd_im.vtkNetCDFCFReader_SetVerticalScale(cast(void*)swigCPtr, _arg);
  }

  public double GetVerticalBias() {
    auto ret = vtkd_im.vtkNetCDFCFReader_GetVerticalBias(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVerticalBias(double _arg) {
    vtkd_im.vtkNetCDFCFReader_SetVerticalBias(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputType() {
    auto ret = vtkd_im.vtkNetCDFCFReader_GetOutputType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputType(int type) {
    vtkd_im.vtkNetCDFCFReader_SetOutputType(cast(void*)swigCPtr, type);
  }

  public void SetOutputTypeToAutomatic() {
    vtkd_im.vtkNetCDFCFReader_SetOutputTypeToAutomatic(cast(void*)swigCPtr);
  }

  public void SetOutputTypeToImage() {
    vtkd_im.vtkNetCDFCFReader_SetOutputTypeToImage(cast(void*)swigCPtr);
  }

  public void SetOutputTypeToRectilinear() {
    vtkd_im.vtkNetCDFCFReader_SetOutputTypeToRectilinear(cast(void*)swigCPtr);
  }

  public void SetOutputTypeToStructured() {
    vtkd_im.vtkNetCDFCFReader_SetOutputTypeToStructured(cast(void*)swigCPtr);
  }

  public void SetOutputTypeToUnstructured() {
    vtkd_im.vtkNetCDFCFReader_SetOutputTypeToUnstructured(cast(void*)swigCPtr);
  }

  public static int CanReadFile(string filename) {
    auto ret = vtkd_im.vtkNetCDFCFReader_CanReadFile((filename ? std.string.toStringz(filename) : null));
    return ret;
  }
}
