/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkOrientedGlyphContourRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkProperty;
static import vtkContourRepresentation;

class vtkOrientedGlyphContourRepresentation : vtkContourRepresentation.vtkContourRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkOrientedGlyphContourRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkOrientedGlyphContourRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkOrientedGlyphContourRepresentation New() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_New();
    vtkOrientedGlyphContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphContourRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkOrientedGlyphContourRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkOrientedGlyphContourRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkOrientedGlyphContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphContourRepresentation(cPtr, false);
    return ret;
  }

  public vtkOrientedGlyphContourRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkOrientedGlyphContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphContourRepresentation(cPtr, false);
    return ret;
  }

  alias vtkContourRepresentation.vtkContourRepresentation.NewInstance NewInstance;

  public void SetCursorShape(vtkPolyData.vtkPolyData cursorShape) {
    vtkd_im.vtkOrientedGlyphContourRepresentation_SetCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(cursorShape));
  }

  public vtkPolyData.vtkPolyData GetCursorShape() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetActiveCursorShape(vtkPolyData.vtkPolyData activeShape) {
    vtkd_im.vtkOrientedGlyphContourRepresentation_SetActiveCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(activeShape));
  }

  public vtkPolyData.vtkPolyData GetActiveCursorShape() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetActiveCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetActiveProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetActiveProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetLinesProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetLinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modified) {
    auto ret = vtkd_im.vtkOrientedGlyphContourRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modified);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkOrientedGlyphContourRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public vtkPolyData.vtkPolyData GetContourRepresentationAsPolyData() {
    void* cPtr = vtkd_im.vtkOrientedGlyphContourRepresentation_GetContourRepresentationAsPolyData(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetAlwaysOnTop(int _arg) {
    vtkd_im.vtkOrientedGlyphContourRepresentation_SetAlwaysOnTop(cast(void*)swigCPtr, _arg);
  }

  public int GetAlwaysOnTop() {
    auto ret = vtkd_im.vtkOrientedGlyphContourRepresentation_GetAlwaysOnTop(cast(void*)swigCPtr);
    return ret;
  }

  public void AlwaysOnTopOn() {
    vtkd_im.vtkOrientedGlyphContourRepresentation_AlwaysOnTopOn(cast(void*)swigCPtr);
  }

  public void AlwaysOnTopOff() {
    vtkd_im.vtkOrientedGlyphContourRepresentation_AlwaysOnTopOff(cast(void*)swigCPtr);
  }

  public void SetLineColor(double r, double g, double b) {
    vtkd_im.vtkOrientedGlyphContourRepresentation_SetLineColor(cast(void*)swigCPtr, r, g, b);
  }
}
