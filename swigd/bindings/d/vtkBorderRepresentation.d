/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkBorderRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCoordinate;
static import SWIGTYPE_p_double;
static import vtkProperty2D;
static import SWIGTYPE_p_int;
static import vtkWidgetRepresentation;

class vtkBorderRepresentation : vtkWidgetRepresentation.vtkWidgetRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkBorderRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkBorderRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkBorderRepresentation New() {
    void* cPtr = vtkd_im.vtkBorderRepresentation_New();
    vtkBorderRepresentation ret = (cPtr is null) ? null : new vtkBorderRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkBorderRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkBorderRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkBorderRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkBorderRepresentation ret = (cPtr is null) ? null : new vtkBorderRepresentation(cPtr, false);
    return ret;
  }

  public vtkBorderRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkBorderRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkBorderRepresentation ret = (cPtr is null) ? null : new vtkBorderRepresentation(cPtr, false);
    return ret;
  }

  alias vtkWidgetRepresentation.vtkWidgetRepresentation.NewInstance NewInstance;

  public vtkCoordinate.vtkCoordinate GetPositionCoordinate() {
    void* cPtr = vtkd_im.vtkBorderRepresentation_GetPositionCoordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkBorderRepresentation_SetPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetPosition(double x, double y) {
    vtkd_im.vtkBorderRepresentation_SetPosition__SWIG_1(cast(void*)swigCPtr, x, y);
  }

  public double* GetPosition() {
    auto ret = cast(double*)vtkd_im.vtkBorderRepresentation_GetPosition(cast(void*)swigCPtr);
    return ret;
  }

  public vtkCoordinate.vtkCoordinate GetPosition2Coordinate() {
    void* cPtr = vtkd_im.vtkBorderRepresentation_GetPosition2Coordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetPosition2(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkBorderRepresentation_SetPosition2__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetPosition2(double x, double y) {
    vtkd_im.vtkBorderRepresentation_SetPosition2__SWIG_1(cast(void*)swigCPtr, x, y);
  }

  public double* GetPosition2() {
    auto ret = cast(double*)vtkd_im.vtkBorderRepresentation_GetPosition2(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShowBorder(int _arg) {
    vtkd_im.vtkBorderRepresentation_SetShowBorder(cast(void*)swigCPtr, _arg);
  }

  public int GetShowBorderMinValue() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetShowBorderMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShowBorderMaxValue() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetShowBorderMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShowBorder() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetShowBorder(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShowBorderToOff() {
    vtkd_im.vtkBorderRepresentation_SetShowBorderToOff(cast(void*)swigCPtr);
  }

  public void SetShowBorderToOn() {
    vtkd_im.vtkBorderRepresentation_SetShowBorderToOn(cast(void*)swigCPtr);
  }

  public void SetShowBorderToActive() {
    vtkd_im.vtkBorderRepresentation_SetShowBorderToActive(cast(void*)swigCPtr);
  }

  public vtkProperty2D.vtkProperty2D GetBorderProperty() {
    void* cPtr = vtkd_im.vtkBorderRepresentation_GetBorderProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public void SetProportionalResize(int _arg) {
    vtkd_im.vtkBorderRepresentation_SetProportionalResize(cast(void*)swigCPtr, _arg);
  }

  public int GetProportionalResize() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetProportionalResize(cast(void*)swigCPtr);
    return ret;
  }

  public void ProportionalResizeOn() {
    vtkd_im.vtkBorderRepresentation_ProportionalResizeOn(cast(void*)swigCPtr);
  }

  public void ProportionalResizeOff() {
    vtkd_im.vtkBorderRepresentation_ProportionalResizeOff(cast(void*)swigCPtr);
  }

  public void SetMinimumSize(int _arg1, int _arg2) {
    vtkd_im.vtkBorderRepresentation_SetMinimumSize__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetMinimumSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkBorderRepresentation_SetMinimumSize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetMinimumSize() {
    auto ret = cast(int*)vtkd_im.vtkBorderRepresentation_GetMinimumSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetMinimumSize(int* _arg1, int* _arg2) {
    vtkd_im.vtkBorderRepresentation_GetMinimumSize__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetMinimumSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkBorderRepresentation_GetMinimumSize__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetMaximumSize(int _arg1, int _arg2) {
    vtkd_im.vtkBorderRepresentation_SetMaximumSize__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetMaximumSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkBorderRepresentation_SetMaximumSize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetMaximumSize() {
    auto ret = cast(int*)vtkd_im.vtkBorderRepresentation_GetMaximumSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetMaximumSize(int* _arg1, int* _arg2) {
    vtkd_im.vtkBorderRepresentation_GetMaximumSize__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetMaximumSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkBorderRepresentation_GetMaximumSize__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetTolerance(int _arg) {
    vtkd_im.vtkBorderRepresentation_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public int GetToleranceMinValue() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTolerance() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetSelectionPoint() {
    auto ret = cast(double*)vtkd_im.vtkBorderRepresentation_GetSelectionPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSelectionPoint(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkBorderRepresentation_GetSelectionPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetMoving(int _arg) {
    vtkd_im.vtkBorderRepresentation_SetMoving(cast(void*)swigCPtr, _arg);
  }

  public int GetMoving() {
    auto ret = vtkd_im.vtkBorderRepresentation_GetMoving(cast(void*)swigCPtr);
    return ret;
  }

  public void MovingOn() {
    vtkd_im.vtkBorderRepresentation_MovingOn(cast(void*)swigCPtr);
  }

  public void MovingOff() {
    vtkd_im.vtkBorderRepresentation_MovingOff(cast(void*)swigCPtr);
  }

  public void GetSize(SWIGTYPE_p_double.SWIGTYPE_p_double size) {
    vtkd_im.vtkBorderRepresentation_GetSize(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(size));
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkBorderRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkBorderRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }
}
