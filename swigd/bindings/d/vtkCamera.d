/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCamera;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkTransform;
static import vtkMatrix4x4;
static import vtkPerspectiveTransform;
static import vtkHomogeneousTransform;
static import vtkRenderer;
static import vtkObject;

class vtkCamera : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCamera_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCamera obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCamera_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCamera SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCamera_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCamera ret = (cPtr is null) ? null : new vtkCamera(cPtr, false);
    return ret;
  }

  public vtkCamera NewInstance() const {
    void* cPtr = vtkd_im.vtkCamera_NewInstance(cast(void*)swigCPtr);
    vtkCamera ret = (cPtr is null) ? null : new vtkCamera(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkCamera New() {
    void* cPtr = vtkd_im.vtkCamera_New();
    vtkCamera ret = (cPtr is null) ? null : new vtkCamera(cPtr, false);
    return ret;
  }

  public void SetPosition(double x, double y, double z) {
    vtkd_im.vtkCamera_SetPosition__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkCamera_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetPosition() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPosition(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetFocalPoint(double x, double y, double z) {
    vtkd_im.vtkCamera_SetFocalPoint__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkCamera_SetFocalPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetFocalPoint() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetFocalPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFocalPoint(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetFocalPoint__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetFocalPoint__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetViewUp(double vx, double vy, double vz) {
    vtkd_im.vtkCamera_SetViewUp__SWIG_0(cast(void*)swigCPtr, vx, vy, vz);
  }

  public void SetViewUp(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkCamera_SetViewUp__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetViewUp() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetViewUp__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetViewUp(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetViewUp__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetViewUp(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetViewUp__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void OrthogonalizeViewUp() {
    vtkd_im.vtkCamera_OrthogonalizeViewUp(cast(void*)swigCPtr);
  }

  public void SetDistance(double arg0) {
    vtkd_im.vtkCamera_SetDistance(cast(void*)swigCPtr, arg0);
  }

  public double GetDistance() {
    auto ret = vtkd_im.vtkCamera_GetDistance(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetDirectionOfProjection() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetDirectionOfProjection__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDirectionOfProjection(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetDirectionOfProjection__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDirectionOfProjection(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetDirectionOfProjection__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void Dolly(double value) {
    vtkd_im.vtkCamera_Dolly(cast(void*)swigCPtr, value);
  }

  public void SetRoll(double angle) {
    vtkd_im.vtkCamera_SetRoll(cast(void*)swigCPtr, angle);
  }

  public double GetRoll() {
    auto ret = vtkd_im.vtkCamera_GetRoll(cast(void*)swigCPtr);
    return ret;
  }

  public void Roll(double angle) {
    vtkd_im.vtkCamera_Roll(cast(void*)swigCPtr, angle);
  }

  public void Azimuth(double angle) {
    vtkd_im.vtkCamera_Azimuth(cast(void*)swigCPtr, angle);
  }

  public void Yaw(double angle) {
    vtkd_im.vtkCamera_Yaw(cast(void*)swigCPtr, angle);
  }

  public void Elevation(double angle) {
    vtkd_im.vtkCamera_Elevation(cast(void*)swigCPtr, angle);
  }

  public void Pitch(double angle) {
    vtkd_im.vtkCamera_Pitch(cast(void*)swigCPtr, angle);
  }

  public void SetParallelProjection(int flag) {
    vtkd_im.vtkCamera_SetParallelProjection(cast(void*)swigCPtr, flag);
  }

  public int GetParallelProjection() {
    auto ret = vtkd_im.vtkCamera_GetParallelProjection(cast(void*)swigCPtr);
    return ret;
  }

  public void ParallelProjectionOn() {
    vtkd_im.vtkCamera_ParallelProjectionOn(cast(void*)swigCPtr);
  }

  public void ParallelProjectionOff() {
    vtkd_im.vtkCamera_ParallelProjectionOff(cast(void*)swigCPtr);
  }

  public void SetUseHorizontalViewAngle(int flag) {
    vtkd_im.vtkCamera_SetUseHorizontalViewAngle(cast(void*)swigCPtr, flag);
  }

  public int GetUseHorizontalViewAngle() {
    auto ret = vtkd_im.vtkCamera_GetUseHorizontalViewAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void UseHorizontalViewAngleOn() {
    vtkd_im.vtkCamera_UseHorizontalViewAngleOn(cast(void*)swigCPtr);
  }

  public void UseHorizontalViewAngleOff() {
    vtkd_im.vtkCamera_UseHorizontalViewAngleOff(cast(void*)swigCPtr);
  }

  public void SetViewAngle(double angle) {
    vtkd_im.vtkCamera_SetViewAngle(cast(void*)swigCPtr, angle);
  }

  public double GetViewAngle() {
    auto ret = vtkd_im.vtkCamera_GetViewAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetParallelScale(double scale) {
    vtkd_im.vtkCamera_SetParallelScale(cast(void*)swigCPtr, scale);
  }

  public double GetParallelScale() {
    auto ret = vtkd_im.vtkCamera_GetParallelScale(cast(void*)swigCPtr);
    return ret;
  }

  public void Zoom(double factor) {
    vtkd_im.vtkCamera_Zoom(cast(void*)swigCPtr, factor);
  }

  public void SetClippingRange(double dNear, double dFar) {
    vtkd_im.vtkCamera_SetClippingRange__SWIG_0(cast(void*)swigCPtr, dNear, dFar);
  }

  public void SetClippingRange(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkCamera_SetClippingRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetClippingRange() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetClippingRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetClippingRange(double* _arg1, double* _arg2) {
    vtkd_im.vtkCamera_GetClippingRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetClippingRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetClippingRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetThickness(double arg0) {
    vtkd_im.vtkCamera_SetThickness(cast(void*)swigCPtr, arg0);
  }

  public double GetThickness() {
    auto ret = vtkd_im.vtkCamera_GetThickness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetWindowCenter(double x, double y) {
    vtkd_im.vtkCamera_SetWindowCenter(cast(void*)swigCPtr, x, y);
  }

  public double* GetWindowCenter() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetWindowCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetWindowCenter(double* _arg1, double* _arg2) {
    vtkd_im.vtkCamera_GetWindowCenter__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetWindowCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetWindowCenter__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetObliqueAngles(double alpha, double beta) {
    vtkd_im.vtkCamera_SetObliqueAngles(cast(void*)swigCPtr, alpha, beta);
  }

  public void ApplyTransform(vtkTransform.vtkTransform t) {
    vtkd_im.vtkCamera_ApplyTransform(cast(void*)swigCPtr, vtkTransform.vtkTransform.swigGetCPtr(t));
  }

  public double* GetViewPlaneNormal() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetViewPlaneNormal__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetViewPlaneNormal(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetViewPlaneNormal__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetViewPlaneNormal(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetViewPlaneNormal__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetViewShear(double dxdz, double dydz, double center) {
    vtkd_im.vtkCamera_SetViewShear__SWIG_0(cast(void*)swigCPtr, dxdz, dydz, center);
  }

  public void SetViewShear(SWIGTYPE_p_double.SWIGTYPE_p_double d) {
    vtkd_im.vtkCamera_SetViewShear__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(d));
  }

  public double* GetViewShear() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetViewShear__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetViewShear(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetViewShear__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetViewShear(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetViewShear__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetEyeAngle(double _arg) {
    vtkd_im.vtkCamera_SetEyeAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetEyeAngle() {
    auto ret = vtkd_im.vtkCamera_GetEyeAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFocalDisk(double _arg) {
    vtkd_im.vtkCamera_SetFocalDisk(cast(void*)swigCPtr, _arg);
  }

  public double GetFocalDisk() {
    auto ret = vtkd_im.vtkCamera_GetFocalDisk(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseOffAxisProjection(int _arg) {
    vtkd_im.vtkCamera_SetUseOffAxisProjection(cast(void*)swigCPtr, _arg);
  }

  public int GetUseOffAxisProjection() {
    auto ret = vtkd_im.vtkCamera_GetUseOffAxisProjection(cast(void*)swigCPtr);
    return ret;
  }

  public void UseOffAxisProjectionOn() {
    vtkd_im.vtkCamera_UseOffAxisProjectionOn(cast(void*)swigCPtr);
  }

  public void UseOffAxisProjectionOff() {
    vtkd_im.vtkCamera_UseOffAxisProjectionOff(cast(void*)swigCPtr);
  }

  public void SetScreenBottomLeft(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCamera_SetScreenBottomLeft__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetScreenBottomLeft(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_SetScreenBottomLeft__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetScreenBottomLeft() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetScreenBottomLeft__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScreenBottomLeft(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetScreenBottomLeft__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetScreenBottomLeft(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetScreenBottomLeft__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetScreenBottomRight(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCamera_SetScreenBottomRight__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetScreenBottomRight(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_SetScreenBottomRight__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetScreenBottomRight() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetScreenBottomRight__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScreenBottomRight(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetScreenBottomRight__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetScreenBottomRight(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetScreenBottomRight__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetScreenTopRight(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCamera_SetScreenTopRight__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetScreenTopRight(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_SetScreenTopRight__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetScreenTopRight() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetScreenTopRight__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScreenTopRight(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCamera_GetScreenTopRight__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetScreenTopRight(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCamera_GetScreenTopRight__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetEyeSeparation(double _arg) {
    vtkd_im.vtkCamera_SetEyeSeparation(cast(void*)swigCPtr, _arg);
  }

  public double GetEyeSeparation() {
    auto ret = vtkd_im.vtkCamera_GetEyeSeparation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEyePosition(SWIGTYPE_p_double.SWIGTYPE_p_double eyePosition) {
    vtkd_im.vtkCamera_SetEyePosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(eyePosition));
  }

  public void GetEyePosition(SWIGTYPE_p_double.SWIGTYPE_p_double eyePosition) {
    vtkd_im.vtkCamera_GetEyePosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(eyePosition));
  }

  public void GetEyePlaneNormal(SWIGTYPE_p_double.SWIGTYPE_p_double normal) {
    vtkd_im.vtkCamera_GetEyePlaneNormal(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(normal));
  }

  public void SetEyeTransformMatrix(vtkMatrix4x4.vtkMatrix4x4 matrix) {
    vtkd_im.vtkCamera_SetEyeTransformMatrix__SWIG_0(cast(void*)swigCPtr, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(matrix));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetEyeTransformMatrix() {
    void* cPtr = vtkd_im.vtkCamera_GetEyeTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public void SetEyeTransformMatrix(SWIGTYPE_p_double.SWIGTYPE_p_double elements) {
    vtkd_im.vtkCamera_SetEyeTransformMatrix__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(elements));
  }

  public void SetModelTransformMatrix(vtkMatrix4x4.vtkMatrix4x4 matrix) {
    vtkd_im.vtkCamera_SetModelTransformMatrix__SWIG_0(cast(void*)swigCPtr, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(matrix));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetModelTransformMatrix() {
    void* cPtr = vtkd_im.vtkCamera_GetModelTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public void SetModelTransformMatrix(SWIGTYPE_p_double.SWIGTYPE_p_double elements) {
    vtkd_im.vtkCamera_SetModelTransformMatrix__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(elements));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetModelViewTransformMatrix() {
    void* cPtr = vtkd_im.vtkCamera_GetModelViewTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public vtkTransform.vtkTransform GetModelViewTransformObject() {
    void* cPtr = vtkd_im.vtkCamera_GetModelViewTransformObject(cast(void*)swigCPtr);
    vtkTransform.vtkTransform ret = (cPtr is null) ? null : new vtkTransform.vtkTransform(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetViewTransformMatrix() {
    void* cPtr = vtkd_im.vtkCamera_GetViewTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public vtkTransform.vtkTransform GetViewTransformObject() {
    void* cPtr = vtkd_im.vtkCamera_GetViewTransformObject(cast(void*)swigCPtr);
    vtkTransform.vtkTransform ret = (cPtr is null) ? null : new vtkTransform.vtkTransform(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetProjectionTransformMatrix(double aspect, double nearz, double farz) {
    void* cPtr = vtkd_im.vtkCamera_GetProjectionTransformMatrix(cast(void*)swigCPtr, aspect, nearz, farz);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public vtkPerspectiveTransform.vtkPerspectiveTransform GetProjectionTransformObject(double aspect, double nearz, double farz) {
    void* cPtr = vtkd_im.vtkCamera_GetProjectionTransformObject(cast(void*)swigCPtr, aspect, nearz, farz);
    vtkPerspectiveTransform.vtkPerspectiveTransform ret = (cPtr is null) ? null : new vtkPerspectiveTransform.vtkPerspectiveTransform(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetCompositeProjectionTransformMatrix(double aspect, double nearz, double farz) {
    void* cPtr = vtkd_im.vtkCamera_GetCompositeProjectionTransformMatrix(cast(void*)swigCPtr, aspect, nearz, farz);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public void SetUserViewTransform(vtkHomogeneousTransform.vtkHomogeneousTransform transform) {
    vtkd_im.vtkCamera_SetUserViewTransform(cast(void*)swigCPtr, vtkHomogeneousTransform.vtkHomogeneousTransform.swigGetCPtr(transform));
  }

  public vtkHomogeneousTransform.vtkHomogeneousTransform GetUserViewTransform() {
    void* cPtr = vtkd_im.vtkCamera_GetUserViewTransform(cast(void*)swigCPtr);
    vtkHomogeneousTransform.vtkHomogeneousTransform ret = (cPtr is null) ? null : new vtkHomogeneousTransform.vtkHomogeneousTransform(cPtr, false);
    return ret;
  }

  public void SetUserTransform(vtkHomogeneousTransform.vtkHomogeneousTransform transform) {
    vtkd_im.vtkCamera_SetUserTransform(cast(void*)swigCPtr, vtkHomogeneousTransform.vtkHomogeneousTransform.swigGetCPtr(transform));
  }

  public vtkHomogeneousTransform.vtkHomogeneousTransform GetUserTransform() {
    void* cPtr = vtkd_im.vtkCamera_GetUserTransform(cast(void*)swigCPtr);
    vtkHomogeneousTransform.vtkHomogeneousTransform ret = (cPtr is null) ? null : new vtkHomogeneousTransform.vtkHomogeneousTransform(cPtr, false);
    return ret;
  }

  public void Render(vtkRenderer.vtkRenderer arg0) {
    vtkd_im.vtkCamera_Render(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0));
  }

  public core.stdc.config.c_ulong GetViewingRaysMTime() {
    auto ret = vtkd_im.vtkCamera_GetViewingRaysMTime(cast(void*)swigCPtr);
    return ret;
  }

  public void ViewingRaysModified() {
    vtkd_im.vtkCamera_ViewingRaysModified(cast(void*)swigCPtr);
  }

  public void GetFrustumPlanes(double aspect, SWIGTYPE_p_double.SWIGTYPE_p_double planes) {
    vtkd_im.vtkCamera_GetFrustumPlanes(cast(void*)swigCPtr, aspect, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(planes));
  }

  public double* GetOrientation() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetOrientation(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetOrientationWXYZ() {
    auto ret = cast(double*)vtkd_im.vtkCamera_GetOrientationWXYZ(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeViewPlaneNormal() {
    vtkd_im.vtkCamera_ComputeViewPlaneNormal(cast(void*)swigCPtr);
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetCameraLightTransformMatrix() {
    void* cPtr = vtkd_im.vtkCamera_GetCameraLightTransformMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public void UpdateViewport(vtkRenderer.vtkRenderer arg0) {
    vtkd_im.vtkCamera_UpdateViewport(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0));
  }

  public void SetLeftEye(int _arg) {
    vtkd_im.vtkCamera_SetLeftEye(cast(void*)swigCPtr, _arg);
  }

  public int GetLeftEye() {
    auto ret = vtkd_im.vtkCamera_GetLeftEye(cast(void*)swigCPtr);
    return ret;
  }

  public void ShallowCopy(vtkCamera source) {
    vtkd_im.vtkCamera_ShallowCopy(cast(void*)swigCPtr, vtkCamera.swigGetCPtr(source));
  }

  public void DeepCopy(vtkCamera source) {
    vtkd_im.vtkCamera_DeepCopy(cast(void*)swigCPtr, vtkCamera.swigGetCPtr(source));
  }

  public void SetFreezeFocalPoint(bool _arg) {
    vtkd_im.vtkCamera_SetFreezeFocalPoint(cast(void*)swigCPtr, _arg);
  }

  public bool GetFreezeFocalPoint() {
    bool ret = vtkd_im.vtkCamera_GetFreezeFocalPoint(cast(void*)swigCPtr) ? true : false;
    return ret;
  }
}
