/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGraphicsFactory;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;

class vtkGraphicsFactory : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGraphicsFactory_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGraphicsFactory obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkGraphicsFactory(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGraphicsFactory New() {
    void* cPtr = vtkd_im.vtkGraphicsFactory_New();
    vtkGraphicsFactory ret = (cPtr is null) ? null : new vtkGraphicsFactory(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGraphicsFactory_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGraphicsFactory SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGraphicsFactory_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGraphicsFactory ret = (cPtr is null) ? null : new vtkGraphicsFactory(cPtr, false);
    return ret;
  }

  public vtkGraphicsFactory NewInstance() const {
    void* cPtr = vtkd_im.vtkGraphicsFactory_NewInstance(cast(void*)swigCPtr);
    vtkGraphicsFactory ret = (cPtr is null) ? null : new vtkGraphicsFactory(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkObject.vtkObject CreateInstance(string vtkclassname) {
    void* cPtr = vtkd_im.vtkGraphicsFactory_CreateInstance((vtkclassname ? std.string.toStringz(vtkclassname) : null));
    vtkObject.vtkObject ret = (cPtr is null) ? null : new vtkObject.vtkObject(cPtr, false);
    return ret;
  }

  public static string GetRenderLibrary() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphicsFactory_GetRenderLibrary());
    return ret;
  }

  public static void SetUseMesaClasses(int use) {
    vtkd_im.vtkGraphicsFactory_SetUseMesaClasses(use);
  }

  public static int GetUseMesaClasses() {
    auto ret = vtkd_im.vtkGraphicsFactory_GetUseMesaClasses();
    return ret;
  }

  public static void SetOffScreenOnlyMode(int use) {
    vtkd_im.vtkGraphicsFactory_SetOffScreenOnlyMode(use);
  }

  public static int GetOffScreenOnlyMode() {
    auto ret = vtkd_im.vtkGraphicsFactory_GetOffScreenOnlyMode();
    return ret;
  }
}
