/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTessellatorFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStreamingTessellator;
static import vtkDataSetEdgeSubdivisionCriterion;
static import vtkUnstructuredGridAlgorithm;

class vtkTessellatorFilter : vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTessellatorFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTessellatorFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTessellatorFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTessellatorFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTessellatorFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTessellatorFilter ret = (cPtr is null) ? null : new vtkTessellatorFilter(cPtr, false);
    return ret;
  }

  public vtkTessellatorFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkTessellatorFilter_NewInstance(cast(void*)swigCPtr);
    vtkTessellatorFilter ret = (cPtr is null) ? null : new vtkTessellatorFilter(cPtr, false);
    return ret;
  }

  alias vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm.NewInstance NewInstance;

  public static vtkTessellatorFilter New() {
    void* cPtr = vtkd_im.vtkTessellatorFilter_New();
    vtkTessellatorFilter ret = (cPtr is null) ? null : new vtkTessellatorFilter(cPtr, false);
    return ret;
  }

  public void SetTessellator(vtkStreamingTessellator.vtkStreamingTessellator arg0) {
    vtkd_im.vtkTessellatorFilter_SetTessellator(cast(void*)swigCPtr, vtkStreamingTessellator.vtkStreamingTessellator.swigGetCPtr(arg0));
  }

  public vtkStreamingTessellator.vtkStreamingTessellator GetTessellator() {
    void* cPtr = vtkd_im.vtkTessellatorFilter_GetTessellator(cast(void*)swigCPtr);
    vtkStreamingTessellator.vtkStreamingTessellator ret = (cPtr is null) ? null : new vtkStreamingTessellator.vtkStreamingTessellator(cPtr, false);
    return ret;
  }

  public void SetSubdivider(vtkDataSetEdgeSubdivisionCriterion.vtkDataSetEdgeSubdivisionCriterion arg0) {
    vtkd_im.vtkTessellatorFilter_SetSubdivider(cast(void*)swigCPtr, vtkDataSetEdgeSubdivisionCriterion.vtkDataSetEdgeSubdivisionCriterion.swigGetCPtr(arg0));
  }

  public vtkDataSetEdgeSubdivisionCriterion.vtkDataSetEdgeSubdivisionCriterion GetSubdivider() {
    void* cPtr = vtkd_im.vtkTessellatorFilter_GetSubdivider(cast(void*)swigCPtr);
    vtkDataSetEdgeSubdivisionCriterion.vtkDataSetEdgeSubdivisionCriterion ret = (cPtr is null) ? null : new vtkDataSetEdgeSubdivisionCriterion.vtkDataSetEdgeSubdivisionCriterion(cPtr, false);
    return ret;
  }

  public void SetOutputDimension(int _arg) {
    vtkd_im.vtkTessellatorFilter_SetOutputDimension(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputDimensionMinValue() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetOutputDimensionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputDimensionMaxValue() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetOutputDimensionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputDimension() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetOutputDimension(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumNumberOfSubdivisions(int num_subdiv_in) {
    vtkd_im.vtkTessellatorFilter_SetMaximumNumberOfSubdivisions(cast(void*)swigCPtr, num_subdiv_in);
  }

  public int GetMaximumNumberOfSubdivisions() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetMaximumNumberOfSubdivisions(cast(void*)swigCPtr);
    return ret;
  }

  public void SetChordError(double ce) {
    vtkd_im.vtkTessellatorFilter_SetChordError(cast(void*)swigCPtr, ce);
  }

  public double GetChordError() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetChordError(cast(void*)swigCPtr);
    return ret;
  }

  public void ResetFieldCriteria() {
    vtkd_im.vtkTessellatorFilter_ResetFieldCriteria(cast(void*)swigCPtr);
  }

  public void SetFieldCriterion(int field, double chord) {
    vtkd_im.vtkTessellatorFilter_SetFieldCriterion(cast(void*)swigCPtr, field, chord);
  }

  public int GetMergePoints() {
    auto ret = vtkd_im.vtkTessellatorFilter_GetMergePoints(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMergePoints(int _arg) {
    vtkd_im.vtkTessellatorFilter_SetMergePoints(cast(void*)swigCPtr, _arg);
  }

  public void MergePointsOn() {
    vtkd_im.vtkTessellatorFilter_MergePointsOn(cast(void*)swigCPtr);
  }

  public void MergePointsOff() {
    vtkd_im.vtkTessellatorFilter_MergePointsOff(cast(void*)swigCPtr);
  }
}
