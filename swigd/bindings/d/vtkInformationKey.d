/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkInformationKey;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformation;
static import vtkGarbageCollector;
static import SWIGTYPE_p_ostream;

class vtkInformationKey : vtkObjectBase.vtkObjectBase {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkInformationKey_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkInformationKey obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkInformationKey(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkInformationKey_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkInformationKey SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkInformationKey_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkInformationKey ret = (cPtr is null) ? null : new vtkInformationKey(cPtr, false);
    return ret;
  }

  public vtkInformationKey NewInstance() const {
    void* cPtr = vtkd_im.vtkInformationKey_NewInstance(cast(void*)swigCPtr);
    vtkInformationKey ret = (cPtr is null) ? null : new vtkInformationKey(cPtr, false);
    return ret;
  }

  public string GetName() {
    string ret = std.conv.to!string(vtkd_im.vtkInformationKey_GetName(cast(void*)swigCPtr));
    return ret;
  }

  public string GetLocation() {
    string ret = std.conv.to!string(vtkd_im.vtkInformationKey_GetLocation(cast(void*)swigCPtr));
    return ret;
  }

  public void ShallowCopy(vtkInformation.vtkInformation from, vtkInformation.vtkInformation to) {
    vtkd_im.vtkInformationKey_ShallowCopy(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(from), vtkInformation.vtkInformation.swigGetCPtr(to));
  }

  public void DeepCopy(vtkInformation.vtkInformation from, vtkInformation.vtkInformation to) {
    vtkd_im.vtkInformationKey_DeepCopy(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(from), vtkInformation.vtkInformation.swigGetCPtr(to));
  }

  public int Has(vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkInformationKey_Has(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public void Remove(vtkInformation.vtkInformation info) {
    vtkd_im.vtkInformationKey_Remove(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public void Report(vtkInformation.vtkInformation info, vtkGarbageCollector.vtkGarbageCollector collector) {
    vtkd_im.vtkInformationKey_Report(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info), vtkGarbageCollector.vtkGarbageCollector.swigGetCPtr(collector));
  }

  public void Print(vtkInformation.vtkInformation info) {
    vtkd_im.vtkInformationKey_Print__SWIG_0(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public void Print(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream os, vtkInformation.vtkInformation info) {
    vtkd_im.vtkInformationKey_Print__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(os), vtkInformation.vtkInformation.swigGetCPtr(info));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  alias vtkObjectBase.vtkObjectBase.Print Print;
}
