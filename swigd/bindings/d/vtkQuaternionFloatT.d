/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionFloatT;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_float;
static import SWIGTYPE_p_a_3__float;
static import vtkFloatTuple4TN;

class vtkQuaternionFloatT : vtkFloatTuple4TN.vtkFloatTuple4TN {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionFloatT_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionFloatT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionFloatT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionFloatT__SWIG_0(), true);
  }

  public this(float scalar) {
    this(vtkd_im.new_vtkQuaternionFloatT__SWIG_1(scalar), true);
  }

  public this(float* init) {
    this(vtkd_im.new_vtkQuaternionFloatT__SWIG_2(cast(void*)init), true);
  }

  public this(float w, float x, float y, float z) {
    this(vtkd_im.new_vtkQuaternionFloatT__SWIG_3(w, x, y, z), true);
  }

  public float SquaredNorm() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_SquaredNorm(cast(void*)swigCPtr);
    return ret;
  }

  public float Norm() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_Norm(cast(void*)swigCPtr);
    return ret;
  }

  public void ToIdentity() {
    vtkd_im.vtkQuaternionFloatT_ToIdentity(cast(void*)swigCPtr);
  }

  public static vtkQuaternionFloatT Identity() {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_Identity(), true);
    return ret;
  }

  public float Normalize() {
    auto ret = vtkd_im.vtkQuaternionFloatT_Normalize(cast(void*)swigCPtr);
    return ret;
  }

  public vtkQuaternionFloatT Normalized() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Conjugate() {
    vtkd_im.vtkQuaternionFloatT_Conjugate(cast(void*)swigCPtr);
  }

  public vtkQuaternionFloatT Conjugated() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Invert() {
    vtkd_im.vtkQuaternionFloatT_Invert(cast(void*)swigCPtr);
  }

  public vtkQuaternionFloatT Inverse() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitLog() {
    vtkd_im.vtkQuaternionFloatT_ToUnitLog(cast(void*)swigCPtr);
  }

  public vtkQuaternionFloatT UnitLog() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitExp() {
    vtkd_im.vtkQuaternionFloatT_ToUnitExp(cast(void*)swigCPtr);
  }

  public vtkQuaternionFloatT UnitExp() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void NormalizeWithAngleInDegrees() {
    vtkd_im.vtkQuaternionFloatT_NormalizeWithAngleInDegrees(cast(void*)swigCPtr);
  }

  public vtkQuaternionFloatT NormalizedWithAngleInDegrees() const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Set(float w, float x, float y, float z) {
    vtkd_im.vtkQuaternionFloatT_Set__SWIG_0(cast(void*)swigCPtr, w, x, y, z);
  }

  public void Set(SWIGTYPE_p_float.SWIGTYPE_p_float quat) {
    vtkd_im.vtkQuaternionFloatT_Set__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(quat));
  }

  public void Get(SWIGTYPE_p_float.SWIGTYPE_p_float quat) const {
    vtkd_im.vtkQuaternionFloatT_Get(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(quat));
  }

  public void SetW(float w) {
    vtkd_im.vtkQuaternionFloatT_SetW(cast(void*)swigCPtr, w);
  }

  public float GetW() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_GetW(cast(void*)swigCPtr);
    return ret;
  }

  public void SetX(float x) {
    vtkd_im.vtkQuaternionFloatT_SetX(cast(void*)swigCPtr, x);
  }

  public float GetX() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_GetX(cast(void*)swigCPtr);
    return ret;
  }

  public void SetY(float y) {
    vtkd_im.vtkQuaternionFloatT_SetY(cast(void*)swigCPtr, y);
  }

  public float GetY() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_GetY(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZ(float z) {
    vtkd_im.vtkQuaternionFloatT_SetZ(cast(void*)swigCPtr, z);
  }

  public float GetZ() const {
    auto ret = vtkd_im.vtkQuaternionFloatT_GetZ(cast(void*)swigCPtr);
    return ret;
  }

  public float GetRotationAngleAndAxis(SWIGTYPE_p_float.SWIGTYPE_p_float axis) const {
    auto ret = vtkd_im.vtkQuaternionFloatT_GetRotationAngleAndAxis(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(axis));
    return ret;
  }

  public void SetRotationAngleAndAxis(float angle, SWIGTYPE_p_float.SWIGTYPE_p_float axis) {
    vtkd_im.vtkQuaternionFloatT_SetRotationAngleAndAxis__SWIG_0(cast(void*)swigCPtr, angle, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(axis));
  }

  public void SetRotationAngleAndAxis(float angle, float x, float y, float z) {
    vtkd_im.vtkQuaternionFloatT_SetRotationAngleAndAxis__SWIG_1(cast(void*)swigCPtr, angle, x, y, z);
  }

  public void ToMatrix3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) const {
    vtkd_im.vtkQuaternionFloatT_ToMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
  }

  public void FromMatrix3x3(SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float A) {
    vtkd_im.vtkQuaternionFloatT_FromMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__float.SWIGTYPE_p_a_3__float.swigGetCPtr(A));
  }

  public vtkQuaternionFloatT Slerp(float t, vtkQuaternionFloatT q) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_Slerp(cast(void*)swigCPtr, t, vtkQuaternionFloatT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionFloatT InnerPoint(vtkQuaternionFloatT q1, vtkQuaternionFloatT q2) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_InnerPoint(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q1), vtkQuaternionFloatT.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Equal(vtkQuaternionFloatT q) {
    vtkd_im.vtkQuaternionFloatT_Equal(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkQuaternionFloatT swigOpAdd(vtkQuaternionFloatT q) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionFloatT swigOpSub(vtkQuaternionFloatT q) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpSub(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionFloatT swigOpMul(vtkQuaternionFloatT q) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionFloatT swigOpMul(float scalar) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpMulAssign(float scalar) const {
    vtkd_im.vtkQuaternionFloatT_swigOpMulAssign(cast(void*)swigCPtr, scalar);
  }

  public vtkQuaternionFloatT swigOpDiv(vtkQuaternionFloatT q) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionFloatT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionFloatT swigOpDiv(float scalar) const {
    vtkQuaternionFloatT ret = new vtkQuaternionFloatT(vtkd_im.vtkQuaternionFloatT_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpDivAssign(float scalar) {
    vtkd_im.vtkQuaternionFloatT_swigOpDivAssign(cast(void*)swigCPtr, scalar);
  }
}
