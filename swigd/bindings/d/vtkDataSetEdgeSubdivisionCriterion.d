/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataSetEdgeSubdivisionCriterion;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSet;
static import vtkCell;
static import vtkEdgeSubdivisionCriterion;

class vtkDataSetEdgeSubdivisionCriterion : vtkEdgeSubdivisionCriterion.vtkEdgeSubdivisionCriterion {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataSetEdgeSubdivisionCriterion_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataSetEdgeSubdivisionCriterion obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataSetEdgeSubdivisionCriterion SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataSetEdgeSubdivisionCriterion ret = (cPtr is null) ? null : new vtkDataSetEdgeSubdivisionCriterion(cPtr, false);
    return ret;
  }

  public vtkDataSetEdgeSubdivisionCriterion NewInstance() const {
    void* cPtr = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_NewInstance(cast(void*)swigCPtr);
    vtkDataSetEdgeSubdivisionCriterion ret = (cPtr is null) ? null : new vtkDataSetEdgeSubdivisionCriterion(cPtr, false);
    return ret;
  }

  alias vtkEdgeSubdivisionCriterion.vtkEdgeSubdivisionCriterion.NewInstance NewInstance;

  public static vtkDataSetEdgeSubdivisionCriterion New() {
    void* cPtr = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_New();
    vtkDataSetEdgeSubdivisionCriterion ret = (cPtr is null) ? null : new vtkDataSetEdgeSubdivisionCriterion(cPtr, false);
    return ret;
  }

  public void SetMesh(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_SetMesh(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetMesh() {
    void* cPtr = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetMesh(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetCellId(long cell) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_SetCellId(cast(void*)swigCPtr, cell);
  }

  public long GetCellId() const {
    auto ret = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetCellId(cast(void*)swigCPtr);
    return ret;
  }

  public vtkCell.vtkCell GetCell() {
    void* cPtr = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetCell(cast(void*)swigCPtr);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }

  public double* EvaluateFields(double* vertex, double* weights, int field_start) {
    auto ret = cast(double*)vtkd_im.vtkDataSetEdgeSubdivisionCriterion_EvaluateFields(cast(void*)swigCPtr, cast(void*)vertex, cast(void*)weights, field_start);
    return ret;
  }

  public void EvaluatePointDataField(double* result, double* weights, int field) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_EvaluatePointDataField(cast(void*)swigCPtr, cast(void*)result, cast(void*)weights, field);
  }

  public void EvaluateCellDataField(double* result, double* weights, int field) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_EvaluateCellDataField(cast(void*)swigCPtr, cast(void*)result, cast(void*)weights, field);
  }

  public void SetChordError2(double _arg) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_SetChordError2(cast(void*)swigCPtr, _arg);
  }

  public double GetChordError2() {
    auto ret = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetChordError2(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFieldError2(int s, double err) {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_SetFieldError2(cast(void*)swigCPtr, s, err);
  }

  public double GetFieldError2(int s) const {
    auto ret = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetFieldError2(cast(void*)swigCPtr, s);
    return ret;
  }

  public void ResetFieldError2() {
    vtkd_im.vtkDataSetEdgeSubdivisionCriterion_ResetFieldError2(cast(void*)swigCPtr);
  }

  public int GetActiveFieldCriteria() {
    auto ret = vtkd_im.vtkDataSetEdgeSubdivisionCriterion_GetActiveFieldCriteria__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }
}
