/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkObjectFactory;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObject;
static import vtkCollection;
static import vtkObjectFactoryCollection;
static import vtkOverrideInformationCollection;
static import vtkObjectBase;

class vtkObjectFactory : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkObjectFactory_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkObjectFactory obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkObject.vtkObject CreateInstance(string vtkclassname) {
    void* cPtr = vtkd_im.vtkObjectFactory_CreateInstance((vtkclassname ? std.string.toStringz(vtkclassname) : null));
    vtkObject.vtkObject ret = (cPtr is null) ? null : new vtkObject.vtkObject(cPtr, false);
    return ret;
  }

  public static void ConstructInstance(string vtkclassname) {
    vtkd_im.vtkObjectFactory_ConstructInstance((vtkclassname ? std.string.toStringz(vtkclassname) : null));
  }

  public static void CreateAllInstance(string vtkclassname, vtkCollection.vtkCollection retList) {
    vtkd_im.vtkObjectFactory_CreateAllInstance((vtkclassname ? std.string.toStringz(vtkclassname) : null), vtkCollection.vtkCollection.swigGetCPtr(retList));
  }

  public static void ReHash() {
    vtkd_im.vtkObjectFactory_ReHash();
  }

  public static void RegisterFactory(vtkObjectFactory arg0) {
    vtkd_im.vtkObjectFactory_RegisterFactory(vtkObjectFactory.swigGetCPtr(arg0));
  }

  public static void UnRegisterFactory(vtkObjectFactory arg0) {
    vtkd_im.vtkObjectFactory_UnRegisterFactory(vtkObjectFactory.swigGetCPtr(arg0));
  }

  public static void UnRegisterAllFactories() {
    vtkd_im.vtkObjectFactory_UnRegisterAllFactories();
  }

  public static vtkObjectFactoryCollection.vtkObjectFactoryCollection GetRegisteredFactories() {
    void* cPtr = vtkd_im.vtkObjectFactory_GetRegisteredFactories();
    vtkObjectFactoryCollection.vtkObjectFactoryCollection ret = (cPtr is null) ? null : new vtkObjectFactoryCollection.vtkObjectFactoryCollection(cPtr, false);
    return ret;
  }

  public static int HasOverrideAny(string className) {
    auto ret = vtkd_im.vtkObjectFactory_HasOverrideAny((className ? std.string.toStringz(className) : null));
    return ret;
  }

  public static void GetOverrideInformation(string name, vtkOverrideInformationCollection.vtkOverrideInformationCollection arg1) {
    vtkd_im.vtkObjectFactory_GetOverrideInformation((name ? std.string.toStringz(name) : null), vtkOverrideInformationCollection.vtkOverrideInformationCollection.swigGetCPtr(arg1));
  }

  public static void SetAllEnableFlags(int flag, string className) {
    vtkd_im.vtkObjectFactory_SetAllEnableFlags__SWIG_0(flag, (className ? std.string.toStringz(className) : null));
  }

  public static void SetAllEnableFlags(int flag, string className, string subclassName) {
    vtkd_im.vtkObjectFactory_SetAllEnableFlags__SWIG_1(flag, (className ? std.string.toStringz(className) : null), (subclassName ? std.string.toStringz(subclassName) : null));
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkObjectFactory_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkObjectFactory SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkObjectFactory_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkObjectFactory ret = (cPtr is null) ? null : new vtkObjectFactory(cPtr, false);
    return ret;
  }

  public vtkObjectFactory NewInstance() const {
    void* cPtr = vtkd_im.vtkObjectFactory_NewInstance(cast(void*)swigCPtr);
    vtkObjectFactory ret = (cPtr is null) ? null : new vtkObjectFactory(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public string GetVTKSourceVersion() {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetVTKSourceVersion(cast(void*)swigCPtr));
    return ret;
  }

  public string GetDescription() {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetDescription(cast(void*)swigCPtr));
    return ret;
  }

  public int GetNumberOfOverrides() {
    auto ret = vtkd_im.vtkObjectFactory_GetNumberOfOverrides(cast(void*)swigCPtr);
    return ret;
  }

  public string GetClassOverrideName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetClassOverrideName(cast(void*)swigCPtr, index));
    return ret;
  }

  public string GetClassOverrideWithName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetClassOverrideWithName(cast(void*)swigCPtr, index));
    return ret;
  }

  public int GetEnableFlag(int index) {
    auto ret = vtkd_im.vtkObjectFactory_GetEnableFlag__SWIG_0(cast(void*)swigCPtr, index);
    return ret;
  }

  public string GetOverrideDescription(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetOverrideDescription(cast(void*)swigCPtr, index));
    return ret;
  }

  public void SetEnableFlag(int flag, string className, string subclassName) {
    vtkd_im.vtkObjectFactory_SetEnableFlag(cast(void*)swigCPtr, flag, (className ? std.string.toStringz(className) : null), (subclassName ? std.string.toStringz(subclassName) : null));
  }

  public int GetEnableFlag(string className, string subclassName) {
    auto ret = vtkd_im.vtkObjectFactory_GetEnableFlag__SWIG_1(cast(void*)swigCPtr, (className ? std.string.toStringz(className) : null), (subclassName ? std.string.toStringz(subclassName) : null));
    return ret;
  }

  public int HasOverride(string className) {
    auto ret = vtkd_im.vtkObjectFactory_HasOverride__SWIG_0(cast(void*)swigCPtr, (className ? std.string.toStringz(className) : null));
    return ret;
  }

  public int HasOverride(string className, string subclassName) {
    auto ret = vtkd_im.vtkObjectFactory_HasOverride__SWIG_1(cast(void*)swigCPtr, (className ? std.string.toStringz(className) : null), (subclassName ? std.string.toStringz(subclassName) : null));
    return ret;
  }

  public void Disable(string className) {
    vtkd_im.vtkObjectFactory_Disable(cast(void*)swigCPtr, (className ? std.string.toStringz(className) : null));
  }

  public string GetLibraryPath() {
    string ret = std.conv.to!string(vtkd_im.vtkObjectFactory_GetLibraryPath(cast(void*)swigCPtr));
    return ret;
  }
}
