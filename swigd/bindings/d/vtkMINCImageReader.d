/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMINCImageReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkMatrix4x4;
static import SWIGTYPE_p_double;
static import vtkMINCImageAttributes;
static import vtkImageReader2;

class vtkMINCImageReader : vtkImageReader2.vtkImageReader2 {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMINCImageReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMINCImageReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMINCImageReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMINCImageReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMINCImageReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMINCImageReader ret = (cPtr is null) ? null : new vtkMINCImageReader(cPtr, false);
    return ret;
  }

  public vtkMINCImageReader NewInstance() const {
    void* cPtr = vtkd_im.vtkMINCImageReader_NewInstance(cast(void*)swigCPtr);
    vtkMINCImageReader ret = (cPtr is null) ? null : new vtkMINCImageReader(cPtr, false);
    return ret;
  }

  alias vtkImageReader2.vtkImageReader2.NewInstance NewInstance;

  public static vtkMINCImageReader New() {
    void* cPtr = vtkd_im.vtkMINCImageReader_New();
    vtkMINCImageReader ret = (cPtr is null) ? null : new vtkMINCImageReader(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetDirectionCosines() {
    void* cPtr = vtkd_im.vtkMINCImageReader_GetDirectionCosines(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public double GetRescaleSlope() {
    auto ret = vtkd_im.vtkMINCImageReader_GetRescaleSlope(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRescaleIntercept() {
    auto ret = vtkd_im.vtkMINCImageReader_GetRescaleIntercept(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRescaleRealValues(int _arg) {
    vtkd_im.vtkMINCImageReader_SetRescaleRealValues(cast(void*)swigCPtr, _arg);
  }

  public void RescaleRealValuesOn() {
    vtkd_im.vtkMINCImageReader_RescaleRealValuesOn(cast(void*)swigCPtr);
  }

  public void RescaleRealValuesOff() {
    vtkd_im.vtkMINCImageReader_RescaleRealValuesOff(cast(void*)swigCPtr);
  }

  public int GetRescaleRealValues() {
    auto ret = vtkd_im.vtkMINCImageReader_GetRescaleRealValues(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetDataRange() {
    auto ret = cast(double*)vtkd_im.vtkMINCImageReader_GetDataRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataRange(SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkMINCImageReader_GetDataRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public int GetNumberOfTimeSteps() {
    auto ret = vtkd_im.vtkMINCImageReader_GetNumberOfTimeSteps(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTimeStep(int _arg) {
    vtkd_im.vtkMINCImageReader_SetTimeStep(cast(void*)swigCPtr, _arg);
  }

  public int GetTimeStep() {
    auto ret = vtkd_im.vtkMINCImageReader_GetTimeStep(cast(void*)swigCPtr);
    return ret;
  }

  public vtkMINCImageAttributes.vtkMINCImageAttributes GetImageAttributes() {
    void* cPtr = vtkd_im.vtkMINCImageReader_GetImageAttributes(cast(void*)swigCPtr);
    vtkMINCImageAttributes.vtkMINCImageAttributes ret = (cPtr is null) ? null : new vtkMINCImageAttributes.vtkMINCImageAttributes(cPtr, false);
    return ret;
  }
}
