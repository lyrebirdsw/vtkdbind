/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTreeMapView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAreaLayoutStrategy;
static import SWIGTYPE_p_int;
static import vtkTreeAreaView;

class vtkTreeMapView : vtkTreeAreaView.vtkTreeAreaView {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTreeMapView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTreeMapView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTreeMapView New() {
    void* cPtr = vtkd_im.vtkTreeMapView_New();
    vtkTreeMapView ret = (cPtr is null) ? null : new vtkTreeMapView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTreeMapView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTreeMapView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTreeMapView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTreeMapView ret = (cPtr is null) ? null : new vtkTreeMapView(cPtr, false);
    return ret;
  }

  public vtkTreeMapView NewInstance() const {
    void* cPtr = vtkd_im.vtkTreeMapView_NewInstance(cast(void*)swigCPtr);
    vtkTreeMapView ret = (cPtr is null) ? null : new vtkTreeMapView(cPtr, false);
    return ret;
  }

  alias vtkTreeAreaView.vtkTreeAreaView.NewInstance NewInstance;

  public override void SetLayoutStrategy(vtkAreaLayoutStrategy.vtkAreaLayoutStrategy s) {
    vtkd_im.vtkTreeMapView_SetLayoutStrategy__SWIG_0(cast(void*)swigCPtr, vtkAreaLayoutStrategy.vtkAreaLayoutStrategy.swigGetCPtr(s));
  }

  public void SetLayoutStrategy(string name) {
    vtkd_im.vtkTreeMapView_SetLayoutStrategy__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  alias vtkTreeAreaView.vtkTreeAreaView.SetLayoutStrategy SetLayoutStrategy;

  public void SetLayoutStrategyToBox() {
    vtkd_im.vtkTreeMapView_SetLayoutStrategyToBox(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToSliceAndDice() {
    vtkd_im.vtkTreeMapView_SetLayoutStrategyToSliceAndDice(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToSquarify() {
    vtkd_im.vtkTreeMapView_SetLayoutStrategyToSquarify(cast(void*)swigCPtr);
  }

  public void SetFontSizeRange(int maxSize, int minSize, int delta) {
    vtkd_im.vtkTreeMapView_SetFontSizeRange__SWIG_0(cast(void*)swigCPtr, maxSize, minSize, delta);
  }

  public void SetFontSizeRange(int maxSize, int minSize) {
    vtkd_im.vtkTreeMapView_SetFontSizeRange__SWIG_1(cast(void*)swigCPtr, maxSize, minSize);
  }

  public void GetFontSizeRange(SWIGTYPE_p_int.SWIGTYPE_p_int range) {
    vtkd_im.vtkTreeMapView_GetFontSizeRange(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(range));
  }
}
