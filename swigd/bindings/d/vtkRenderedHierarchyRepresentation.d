/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRenderedHierarchyRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderedGraphRepresentation;

class vtkRenderedHierarchyRepresentation : vtkRenderedGraphRepresentation.vtkRenderedGraphRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRenderedHierarchyRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRenderedHierarchyRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkRenderedHierarchyRepresentation New() {
    void* cPtr = vtkd_im.vtkRenderedHierarchyRepresentation_New();
    vtkRenderedHierarchyRepresentation ret = (cPtr is null) ? null : new vtkRenderedHierarchyRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRenderedHierarchyRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRenderedHierarchyRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRenderedHierarchyRepresentation ret = (cPtr is null) ? null : new vtkRenderedHierarchyRepresentation(cPtr, false);
    return ret;
  }

  public vtkRenderedHierarchyRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkRenderedHierarchyRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkRenderedHierarchyRepresentation ret = (cPtr is null) ? null : new vtkRenderedHierarchyRepresentation(cPtr, false);
    return ret;
  }

  alias vtkRenderedGraphRepresentation.vtkRenderedGraphRepresentation.NewInstance NewInstance;

  public void SetGraphEdgeLabelArrayName(string name) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelArrayName__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void SetGraphEdgeLabelArrayName(string name, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelArrayName__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), idx);
  }

  public string GetGraphEdgeLabelArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelArrayName__SWIG_0(cast(void*)swigCPtr));
    return ret;
  }

  public string GetGraphEdgeLabelArrayName(int idx) {
    string ret = std.conv.to!string(vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelArrayName__SWIG_1(cast(void*)swigCPtr, idx));
    return ret;
  }

  public void SetGraphEdgeLabelVisibility(bool vis) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelVisibility__SWIG_0(cast(void*)swigCPtr, vis);
  }

  public void SetGraphEdgeLabelVisibility(bool vis, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelVisibility__SWIG_1(cast(void*)swigCPtr, vis, idx);
  }

  public bool GetGraphEdgeLabelVisibility() {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelVisibility__SWIG_0(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool GetGraphEdgeLabelVisibility(int idx) {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelVisibility__SWIG_1(cast(void*)swigCPtr, idx) ? true : false;
    return ret;
  }

  public void GraphEdgeLabelVisibilityOn() {
    vtkd_im.vtkRenderedHierarchyRepresentation_GraphEdgeLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void GraphEdgeLabelVisibilityOff() {
    vtkd_im.vtkRenderedHierarchyRepresentation_GraphEdgeLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetGraphEdgeColorArrayName(string name) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeColorArrayName__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void SetGraphEdgeColorArrayName(string name, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeColorArrayName__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), idx);
  }

  public string GetGraphEdgeColorArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeColorArrayName__SWIG_0(cast(void*)swigCPtr));
    return ret;
  }

  public string GetGraphEdgeColorArrayName(int idx) {
    string ret = std.conv.to!string(vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeColorArrayName__SWIG_1(cast(void*)swigCPtr, idx));
    return ret;
  }

  public void SetColorGraphEdgesByArray(bool vis) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetColorGraphEdgesByArray__SWIG_0(cast(void*)swigCPtr, vis);
  }

  public void SetColorGraphEdgesByArray(bool vis, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetColorGraphEdgesByArray__SWIG_1(cast(void*)swigCPtr, vis, idx);
  }

  public bool GetColorGraphEdgesByArray() {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetColorGraphEdgesByArray__SWIG_0(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool GetColorGraphEdgesByArray(int idx) {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetColorGraphEdgesByArray__SWIG_1(cast(void*)swigCPtr, idx) ? true : false;
    return ret;
  }

  public void ColorGraphEdgesByArrayOn() {
    vtkd_im.vtkRenderedHierarchyRepresentation_ColorGraphEdgesByArrayOn(cast(void*)swigCPtr);
  }

  public void ColorGraphEdgesByArrayOff() {
    vtkd_im.vtkRenderedHierarchyRepresentation_ColorGraphEdgesByArrayOff(cast(void*)swigCPtr);
  }

  public void SetGraphEdgeColorToSplineFraction() {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeColorToSplineFraction__SWIG_0(cast(void*)swigCPtr);
  }

  public void SetGraphEdgeColorToSplineFraction(int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeColorToSplineFraction__SWIG_1(cast(void*)swigCPtr, idx);
  }

  public void SetGraphVisibility(bool vis) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphVisibility__SWIG_0(cast(void*)swigCPtr, vis);
  }

  public void SetGraphVisibility(bool vis, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphVisibility__SWIG_1(cast(void*)swigCPtr, vis, idx);
  }

  public bool GetGraphVisibility() {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphVisibility__SWIG_0(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool GetGraphVisibility(int idx) {
    bool ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphVisibility__SWIG_1(cast(void*)swigCPtr, idx) ? true : false;
    return ret;
  }

  public void GraphVisibilityOn() {
    vtkd_im.vtkRenderedHierarchyRepresentation_GraphVisibilityOn(cast(void*)swigCPtr);
  }

  public void GraphVisibilityOff() {
    vtkd_im.vtkRenderedHierarchyRepresentation_GraphVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetBundlingStrength(double strength) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetBundlingStrength__SWIG_0(cast(void*)swigCPtr, strength);
  }

  public void SetBundlingStrength(double strength, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetBundlingStrength__SWIG_1(cast(void*)swigCPtr, strength, idx);
  }

  public double GetBundlingStrength() {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetBundlingStrength__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public double GetBundlingStrength(int idx) {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetBundlingStrength__SWIG_1(cast(void*)swigCPtr, idx);
    return ret;
  }

  public void SetGraphSplineType(int type, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphSplineType(cast(void*)swigCPtr, type, idx);
  }

  public int GetGraphSplineType(int idx) {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphSplineType(cast(void*)swigCPtr, idx);
    return ret;
  }

  public void SetGraphEdgeLabelFontSize(int size) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelFontSize__SWIG_0(cast(void*)swigCPtr, size);
  }

  public void SetGraphEdgeLabelFontSize(int size, int idx) {
    vtkd_im.vtkRenderedHierarchyRepresentation_SetGraphEdgeLabelFontSize__SWIG_1(cast(void*)swigCPtr, size, idx);
  }

  public int GetGraphEdgeLabelFontSize() {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelFontSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGraphEdgeLabelFontSize(int idx) {
    auto ret = vtkd_im.vtkRenderedHierarchyRepresentation_GetGraphEdgeLabelFontSize__SWIG_1(cast(void*)swigCPtr, idx);
    return ret;
  }
}
