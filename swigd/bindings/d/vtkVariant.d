/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVariant;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkStdString;
static import vtkUnicodeString;
static import vtkObjectBase;
static import vtkAbstractArray;

class vtkVariant {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkVariant obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkVariant(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkVariant__SWIG_0(), true);
  }

  public this(vtkVariant other) {
    this(vtkd_im.new_vtkVariant__SWIG_1(vtkVariant.swigGetCPtr(other)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(bool value) {
    this(vtkd_im.new_vtkVariant__SWIG_2(value), true);
  }

  public this(char value) {
    this(vtkd_im.new_vtkVariant__SWIG_3(value), true);
  }

  public this(ubyte value) {
    this(vtkd_im.new_vtkVariant__SWIG_4(value), true);
  }

  public this(byte value) {
    this(vtkd_im.new_vtkVariant__SWIG_5(value), true);
  }

  public this(short value) {
    this(vtkd_im.new_vtkVariant__SWIG_6(value), true);
  }

  public this(ushort value) {
    this(vtkd_im.new_vtkVariant__SWIG_7(value), true);
  }

  public this(int value) {
    this(vtkd_im.new_vtkVariant__SWIG_8(value), true);
  }

  public this(uint value) {
    this(vtkd_im.new_vtkVariant__SWIG_9(value), true);
  }

  public this(long value) {
    this(vtkd_im.new_vtkVariant__SWIG_12(value), true);
  }

  public this(ulong value) {
    this(vtkd_im.new_vtkVariant__SWIG_13(value), true);
  }

  public this(float value) {
    this(vtkd_im.new_vtkVariant__SWIG_14(value), true);
  }

  public this(double value) {
    this(vtkd_im.new_vtkVariant__SWIG_15(value), true);
  }

  public this(string value) {
    this(vtkd_im.new_vtkVariant__SWIG_16((value ? std.string.toStringz(value) : null)), true);
  }

  public this(vtkStdString.vtkStdString value) {
    this(vtkd_im.new_vtkVariant__SWIG_17(vtkStdString.vtkStdString.swigGetCPtr(value)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(vtkUnicodeString.vtkUnicodeString value) {
    this(vtkd_im.new_vtkVariant__SWIG_18(vtkUnicodeString.vtkUnicodeString.swigGetCPtr(value)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(vtkObjectBase.vtkObjectBase value) {
    this(vtkd_im.new_vtkVariant__SWIG_19(vtkObjectBase.vtkObjectBase.swigGetCPtr(value)), true);
  }

  public this(vtkVariant other, uint type) {
    this(vtkd_im.new_vtkVariant__SWIG_20(vtkVariant.swigGetCPtr(other), type), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkVariant Equal(vtkVariant other) {
    vtkVariant ret = new vtkVariant(vtkd_im.vtkVariant_Equal(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool IsValid() const {
    bool ret = vtkd_im.vtkVariant_IsValid(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsString() const {
    bool ret = vtkd_im.vtkVariant_IsString(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnicodeString() const {
    bool ret = vtkd_im.vtkVariant_IsUnicodeString(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsNumeric() const {
    bool ret = vtkd_im.vtkVariant_IsNumeric(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsFloat() const {
    bool ret = vtkd_im.vtkVariant_IsFloat(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsDouble() const {
    bool ret = vtkd_im.vtkVariant_IsDouble(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsChar() const {
    bool ret = vtkd_im.vtkVariant_IsChar(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsignedChar() const {
    bool ret = vtkd_im.vtkVariant_IsUnsignedChar(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsSignedChar() const {
    bool ret = vtkd_im.vtkVariant_IsSignedChar(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsShort() const {
    bool ret = vtkd_im.vtkVariant_IsShort(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsignedShort() const {
    bool ret = vtkd_im.vtkVariant_IsUnsignedShort(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsInt() const {
    bool ret = vtkd_im.vtkVariant_IsInt(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsignedInt() const {
    bool ret = vtkd_im.vtkVariant_IsUnsignedInt(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsLong() const {
    bool ret = vtkd_im.vtkVariant_IsLong(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsignedLong() const {
    bool ret = vtkd_im.vtkVariant_IsUnsignedLong(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool Is__Int64() const {
    bool ret = vtkd_im.vtkVariant_Is__Int64(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsigned__Int64() const {
    bool ret = vtkd_im.vtkVariant_IsUnsigned__Int64(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsLongLong() const {
    bool ret = vtkd_im.vtkVariant_IsLongLong(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsUnsignedLongLong() const {
    bool ret = vtkd_im.vtkVariant_IsUnsignedLongLong(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsVTKObject() const {
    bool ret = vtkd_im.vtkVariant_IsVTKObject(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsArray() const {
    bool ret = vtkd_im.vtkVariant_IsArray(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public uint GetType() const {
    auto ret = vtkd_im.vtkVariant_GetType(cast(void*)swigCPtr);
    return ret;
  }

  public string GetTypeAsString() const {
    string ret = std.conv.to!string(vtkd_im.vtkVariant_GetTypeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public vtkStdString.vtkStdString ToString() const {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkVariant_ToString(cast(void*)swigCPtr), true);
    return ret;
  }

  public vtkUnicodeString.vtkUnicodeString ToUnicodeString() const {
    vtkUnicodeString.vtkUnicodeString ret = new vtkUnicodeString.vtkUnicodeString(vtkd_im.vtkVariant_ToUnicodeString(cast(void*)swigCPtr), true);
    return ret;
  }

  public float ToFloat(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToFloat__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public float ToFloat() const {
    auto ret = vtkd_im.vtkVariant_ToFloat__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public double ToDouble(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToDouble__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public double ToDouble() const {
    auto ret = vtkd_im.vtkVariant_ToDouble__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public char ToChar(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToChar__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public char ToChar() const {
    auto ret = vtkd_im.vtkVariant_ToChar__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte ToUnsignedChar(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedChar__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public ubyte ToUnsignedChar() const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedChar__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public byte ToSignedChar(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToSignedChar__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public byte ToSignedChar() const {
    auto ret = vtkd_im.vtkVariant_ToSignedChar__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public short ToShort(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToShort__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public short ToShort() const {
    auto ret = vtkd_im.vtkVariant_ToShort__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public ushort ToUnsignedShort(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedShort__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public ushort ToUnsignedShort() const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedShort__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public int ToInt(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToInt__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public int ToInt() const {
    auto ret = vtkd_im.vtkVariant_ToInt__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public uint ToUnsignedInt(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedInt__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public uint ToUnsignedInt() const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedInt__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_long ToLong(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToLong__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public core.stdc.config.c_long ToLong() const {
    auto ret = vtkd_im.vtkVariant_ToLong__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong ToUnsignedLong(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedLong__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public core.stdc.config.c_ulong ToUnsignedLong() const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedLong__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public long ToLongLong(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToLongLong__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public long ToLongLong() const {
    auto ret = vtkd_im.vtkVariant_ToLongLong__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public ulong ToUnsignedLongLong(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedLongLong__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public ulong ToUnsignedLongLong() const {
    auto ret = vtkd_im.vtkVariant_ToUnsignedLongLong__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public long ToTypeInt64(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToTypeInt64__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public long ToTypeInt64() const {
    auto ret = vtkd_im.vtkVariant_ToTypeInt64__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public ulong ToTypeUInt64(bool* valid) const {
    auto ret = vtkd_im.vtkVariant_ToTypeUInt64__SWIG_0(cast(void*)swigCPtr, cast(void*)valid);
    return ret;
  }

  public ulong ToTypeUInt64() const {
    auto ret = vtkd_im.vtkVariant_ToTypeUInt64__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public vtkObjectBase.vtkObjectBase ToVTKObject() const {
    void* cPtr = vtkd_im.vtkVariant_ToVTKObject(cast(void*)swigCPtr);
    vtkObjectBase.vtkObjectBase ret = (cPtr is null) ? null : new vtkObjectBase.vtkObjectBase(cPtr, false);
    return ret;
  }

  public vtkAbstractArray.vtkAbstractArray ToArray() const {
    void* cPtr = vtkd_im.vtkVariant_ToArray(cast(void*)swigCPtr);
    vtkAbstractArray.vtkAbstractArray ret = (cPtr is null) ? null : new vtkAbstractArray.vtkAbstractArray(cPtr, false);
    return ret;
  }

  public bool IsEqual(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_IsEqual(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool swigOpEquals(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_swigOpEquals(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool NotEqual(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_NotEqual(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool swigOpLt(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_swigOpLt(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool swigOpGt(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_swigOpGt(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool swigOpLtEquals(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_swigOpLtEquals(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool swigOpGtEquals(vtkVariant other) const {
    bool ret = vtkd_im.vtkVariant_swigOpGtEquals(cast(void*)swigCPtr, vtkVariant.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }
}
