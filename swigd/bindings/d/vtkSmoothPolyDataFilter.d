/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSmoothPolyDataFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkPolyDataAlgorithm;

class vtkSmoothPolyDataFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSmoothPolyDataFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSmoothPolyDataFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSmoothPolyDataFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSmoothPolyDataFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSmoothPolyDataFilter ret = (cPtr is null) ? null : new vtkSmoothPolyDataFilter(cPtr, false);
    return ret;
  }

  public vtkSmoothPolyDataFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkSmoothPolyDataFilter_NewInstance(cast(void*)swigCPtr);
    vtkSmoothPolyDataFilter ret = (cPtr is null) ? null : new vtkSmoothPolyDataFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkSmoothPolyDataFilter New() {
    void* cPtr = vtkd_im.vtkSmoothPolyDataFilter_New();
    vtkSmoothPolyDataFilter ret = (cPtr is null) ? null : new vtkSmoothPolyDataFilter(cPtr, false);
    return ret;
  }

  public void SetConvergence(double _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetConvergence(cast(void*)swigCPtr, _arg);
  }

  public double GetConvergenceMinValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetConvergenceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetConvergenceMaxValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetConvergenceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetConvergence() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetConvergence(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfIterations(int _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetNumberOfIterations(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfIterationsMinValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetNumberOfIterationsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfIterationsMaxValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetNumberOfIterationsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfIterations() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetNumberOfIterations(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRelaxationFactor(double _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetRelaxationFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetRelaxationFactor() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetRelaxationFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFeatureEdgeSmoothing(int _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetFeatureEdgeSmoothing(cast(void*)swigCPtr, _arg);
  }

  public int GetFeatureEdgeSmoothing() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetFeatureEdgeSmoothing(cast(void*)swigCPtr);
    return ret;
  }

  public void FeatureEdgeSmoothingOn() {
    vtkd_im.vtkSmoothPolyDataFilter_FeatureEdgeSmoothingOn(cast(void*)swigCPtr);
  }

  public void FeatureEdgeSmoothingOff() {
    vtkd_im.vtkSmoothPolyDataFilter_FeatureEdgeSmoothingOff(cast(void*)swigCPtr);
  }

  public void SetFeatureAngle(double _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetFeatureAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetFeatureAngleMinValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetFeatureAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFeatureAngleMaxValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetFeatureAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFeatureAngle() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetFeatureAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEdgeAngle(double _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetEdgeAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetEdgeAngleMinValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetEdgeAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEdgeAngleMaxValue() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetEdgeAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEdgeAngle() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetEdgeAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBoundarySmoothing(int _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetBoundarySmoothing(cast(void*)swigCPtr, _arg);
  }

  public int GetBoundarySmoothing() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetBoundarySmoothing(cast(void*)swigCPtr);
    return ret;
  }

  public void BoundarySmoothingOn() {
    vtkd_im.vtkSmoothPolyDataFilter_BoundarySmoothingOn(cast(void*)swigCPtr);
  }

  public void BoundarySmoothingOff() {
    vtkd_im.vtkSmoothPolyDataFilter_BoundarySmoothingOff(cast(void*)swigCPtr);
  }

  public void SetGenerateErrorScalars(int _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetGenerateErrorScalars(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateErrorScalars() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetGenerateErrorScalars(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateErrorScalarsOn() {
    vtkd_im.vtkSmoothPolyDataFilter_GenerateErrorScalarsOn(cast(void*)swigCPtr);
  }

  public void GenerateErrorScalarsOff() {
    vtkd_im.vtkSmoothPolyDataFilter_GenerateErrorScalarsOff(cast(void*)swigCPtr);
  }

  public void SetGenerateErrorVectors(int _arg) {
    vtkd_im.vtkSmoothPolyDataFilter_SetGenerateErrorVectors(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateErrorVectors() {
    auto ret = vtkd_im.vtkSmoothPolyDataFilter_GetGenerateErrorVectors(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateErrorVectorsOn() {
    vtkd_im.vtkSmoothPolyDataFilter_GenerateErrorVectorsOn(cast(void*)swigCPtr);
  }

  public void GenerateErrorVectorsOff() {
    vtkd_im.vtkSmoothPolyDataFilter_GenerateErrorVectorsOff(cast(void*)swigCPtr);
  }

  public void SetSourceData(vtkPolyData.vtkPolyData source) {
    vtkd_im.vtkSmoothPolyDataFilter_SetSourceData(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(source));
  }

  public vtkPolyData.vtkPolyData GetSource() {
    void* cPtr = vtkd_im.vtkSmoothPolyDataFilter_GetSource(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }
}
