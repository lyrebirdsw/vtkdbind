/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTreeLayoutStrategy;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGraphLayoutStrategy;

class vtkTreeLayoutStrategy : vtkGraphLayoutStrategy.vtkGraphLayoutStrategy {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTreeLayoutStrategy_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTreeLayoutStrategy obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTreeLayoutStrategy New() {
    void* cPtr = vtkd_im.vtkTreeLayoutStrategy_New();
    vtkTreeLayoutStrategy ret = (cPtr is null) ? null : new vtkTreeLayoutStrategy(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTreeLayoutStrategy SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTreeLayoutStrategy_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTreeLayoutStrategy ret = (cPtr is null) ? null : new vtkTreeLayoutStrategy(cPtr, false);
    return ret;
  }

  public vtkTreeLayoutStrategy NewInstance() const {
    void* cPtr = vtkd_im.vtkTreeLayoutStrategy_NewInstance(cast(void*)swigCPtr);
    vtkTreeLayoutStrategy ret = (cPtr is null) ? null : new vtkTreeLayoutStrategy(cPtr, false);
    return ret;
  }

  alias vtkGraphLayoutStrategy.vtkGraphLayoutStrategy.NewInstance NewInstance;

  public void SetAngle(double _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetAngleMinValue() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAngleMaxValue() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAngle() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRadial(bool _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetRadial(cast(void*)swigCPtr, _arg);
  }

  public bool GetRadial() {
    bool ret = vtkd_im.vtkTreeLayoutStrategy_GetRadial(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void RadialOn() {
    vtkd_im.vtkTreeLayoutStrategy_RadialOn(cast(void*)swigCPtr);
  }

  public void RadialOff() {
    vtkd_im.vtkTreeLayoutStrategy_RadialOff(cast(void*)swigCPtr);
  }

  public void SetLogSpacingValue(double _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetLogSpacingValue(cast(void*)swigCPtr, _arg);
  }

  public double GetLogSpacingValue() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetLogSpacingValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLeafSpacing(double _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetLeafSpacing(cast(void*)swigCPtr, _arg);
  }

  public double GetLeafSpacingMinValue() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetLeafSpacingMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLeafSpacingMaxValue() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetLeafSpacingMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLeafSpacing() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetLeafSpacing(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDistanceArrayName(string _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetDistanceArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetDistanceArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkTreeLayoutStrategy_GetDistanceArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetRotation(double _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetRotation(cast(void*)swigCPtr, _arg);
  }

  public double GetRotation() {
    auto ret = vtkd_im.vtkTreeLayoutStrategy_GetRotation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetReverseEdges(bool _arg) {
    vtkd_im.vtkTreeLayoutStrategy_SetReverseEdges(cast(void*)swigCPtr, _arg);
  }

  public bool GetReverseEdges() {
    bool ret = vtkd_im.vtkTreeLayoutStrategy_GetReverseEdges(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ReverseEdgesOn() {
    vtkd_im.vtkTreeLayoutStrategy_ReverseEdgesOn(cast(void*)swigCPtr);
  }

  public void ReverseEdgesOff() {
    vtkd_im.vtkTreeLayoutStrategy_ReverseEdgesOff(cast(void*)swigCPtr);
  }
}
