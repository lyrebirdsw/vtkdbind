/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkHierarchicalGraphPipeline;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkActor;
static import vtkActor2D;
static import vtkTextProperty;
static import vtkSelection;
static import vtkDataRepresentation;
static import vtkAlgorithmOutput;
static import vtkViewTheme;
static import vtkRenderView;
static import vtkObject;

class vtkHierarchicalGraphPipeline : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkHierarchicalGraphPipeline_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkHierarchicalGraphPipeline obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkHierarchicalGraphPipeline New() {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_New();
    vtkHierarchicalGraphPipeline ret = (cPtr is null) ? null : new vtkHierarchicalGraphPipeline(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkHierarchicalGraphPipeline_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkHierarchicalGraphPipeline SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkHierarchicalGraphPipeline ret = (cPtr is null) ? null : new vtkHierarchicalGraphPipeline(cPtr, false);
    return ret;
  }

  public vtkHierarchicalGraphPipeline NewInstance() const {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_NewInstance(cast(void*)swigCPtr);
    vtkHierarchicalGraphPipeline ret = (cPtr is null) ? null : new vtkHierarchicalGraphPipeline(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public vtkActor.vtkActor GetActor() {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_GetActor(cast(void*)swigCPtr);
    vtkActor.vtkActor ret = (cPtr is null) ? null : new vtkActor.vtkActor(cPtr, false);
    return ret;
  }

  public vtkActor2D.vtkActor2D GetLabelActor() {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_GetLabelActor(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public void SetBundlingStrength(double strength) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetBundlingStrength(cast(void*)swigCPtr, strength);
  }

  public double GetBundlingStrength() {
    auto ret = vtkd_im.vtkHierarchicalGraphPipeline_GetBundlingStrength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelArrayName(string name) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetLabelArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetLabelArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHierarchicalGraphPipeline_GetLabelArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetLabelVisibility(bool vis) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetLabelVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetLabelVisibility() {
    bool ret = vtkd_im.vtkHierarchicalGraphPipeline_GetLabelVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void LabelVisibilityOn() {
    vtkd_im.vtkHierarchicalGraphPipeline_LabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void LabelVisibilityOff() {
    vtkd_im.vtkHierarchicalGraphPipeline_LabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetLabelTextProperty(vtkTextProperty.vtkTextProperty prop) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetLabelTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(prop));
  }

  public vtkTextProperty.vtkTextProperty GetLabelTextProperty() {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_GetLabelTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetColorArrayName(string name) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetColorArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetColorArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHierarchicalGraphPipeline_GetColorArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetColorEdgesByArray(bool vis) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetColorEdgesByArray(cast(void*)swigCPtr, vis);
  }

  public bool GetColorEdgesByArray() {
    bool ret = vtkd_im.vtkHierarchicalGraphPipeline_GetColorEdgesByArray(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ColorEdgesByArrayOn() {
    vtkd_im.vtkHierarchicalGraphPipeline_ColorEdgesByArrayOn(cast(void*)swigCPtr);
  }

  public void ColorEdgesByArrayOff() {
    vtkd_im.vtkHierarchicalGraphPipeline_ColorEdgesByArrayOff(cast(void*)swigCPtr);
  }

  public void SetVisibility(bool vis) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetVisibility() {
    bool ret = vtkd_im.vtkHierarchicalGraphPipeline_GetVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void VisibilityOn() {
    vtkd_im.vtkHierarchicalGraphPipeline_VisibilityOn(cast(void*)swigCPtr);
  }

  public void VisibilityOff() {
    vtkd_im.vtkHierarchicalGraphPipeline_VisibilityOff(cast(void*)swigCPtr);
  }

  public vtkSelection.vtkSelection ConvertSelection(vtkDataRepresentation.vtkDataRepresentation rep, vtkSelection.vtkSelection sel) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphPipeline_ConvertSelection(cast(void*)swigCPtr, vtkDataRepresentation.vtkDataRepresentation.swigGetCPtr(rep), vtkSelection.vtkSelection.swigGetCPtr(sel));
    vtkSelection.vtkSelection ret = (cPtr is null) ? null : new vtkSelection.vtkSelection(cPtr, false);
    return ret;
  }

  public void PrepareInputConnections(vtkAlgorithmOutput.vtkAlgorithmOutput graphConn, vtkAlgorithmOutput.vtkAlgorithmOutput treeConn, vtkAlgorithmOutput.vtkAlgorithmOutput annConn) {
    vtkd_im.vtkHierarchicalGraphPipeline_PrepareInputConnections(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(graphConn), vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(treeConn), vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(annConn));
  }

  public void ApplyViewTheme(vtkViewTheme.vtkViewTheme theme) {
    vtkd_im.vtkHierarchicalGraphPipeline_ApplyViewTheme(cast(void*)swigCPtr, vtkViewTheme.vtkViewTheme.swigGetCPtr(theme));
  }

  public void SetHoverArrayName(string _arg) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetHoverArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetHoverArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHierarchicalGraphPipeline_GetHoverArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetSplineType(int type) {
    vtkd_im.vtkHierarchicalGraphPipeline_SetSplineType(cast(void*)swigCPtr, type);
  }

  public int GetSplineType() {
    auto ret = vtkd_im.vtkHierarchicalGraphPipeline_GetSplineType(cast(void*)swigCPtr);
    return ret;
  }

  public void RegisterProgress(vtkRenderView.vtkRenderView view) {
    vtkd_im.vtkHierarchicalGraphPipeline_RegisterProgress(cast(void*)swigCPtr, vtkRenderView.vtkRenderView.swigGetCPtr(view));
  }
}
