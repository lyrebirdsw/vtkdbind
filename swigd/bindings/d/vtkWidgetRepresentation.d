/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkWidgetRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import SWIGTYPE_p_double;
static import vtkWindow;
static import vtkViewport;
static import vtkProp;

class vtkWidgetRepresentation : vtkProp.vtkProp {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkWidgetRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkWidgetRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkWidgetRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkWidgetRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkWidgetRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkWidgetRepresentation ret = (cPtr is null) ? null : new vtkWidgetRepresentation(cPtr, false);
    return ret;
  }

  public vtkWidgetRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkWidgetRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkWidgetRepresentation ret = (cPtr is null) ? null : new vtkWidgetRepresentation(cPtr, false);
    return ret;
  }

  alias vtkProp.vtkProp.NewInstance NewInstance;

  public void PickingManagedOn() {
    vtkd_im.vtkWidgetRepresentation_PickingManagedOn(cast(void*)swigCPtr);
  }

  public void PickingManagedOff() {
    vtkd_im.vtkWidgetRepresentation_PickingManagedOff(cast(void*)swigCPtr);
  }

  public void SetPickingManaged(bool _arg) {
    vtkd_im.vtkWidgetRepresentation_SetPickingManaged(cast(void*)swigCPtr, _arg);
  }

  public bool GetPickingManaged() {
    bool ret = vtkd_im.vtkWidgetRepresentation_GetPickingManaged(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetRenderer(vtkRenderer.vtkRenderer ren) {
    vtkd_im.vtkWidgetRepresentation_SetRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren));
  }

  public vtkRenderer.vtkRenderer GetRenderer() {
    void* cPtr = vtkd_im.vtkWidgetRepresentation_GetRenderer(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }

  public void BuildRepresentation() {
    vtkd_im.vtkWidgetRepresentation_BuildRepresentation(cast(void*)swigCPtr);
  }

  public void PlaceWidget(double* arg0) {
    vtkd_im.vtkWidgetRepresentation_PlaceWidget(cast(void*)swigCPtr, cast(void*)arg0);
  }

  public void StartWidgetInteraction(SWIGTYPE_p_double.SWIGTYPE_p_double eventPos) {
    vtkd_im.vtkWidgetRepresentation_StartWidgetInteraction(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(eventPos));
  }

  public void WidgetInteraction(SWIGTYPE_p_double.SWIGTYPE_p_double newEventPos) {
    vtkd_im.vtkWidgetRepresentation_WidgetInteraction(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(newEventPos));
  }

  public void EndWidgetInteraction(SWIGTYPE_p_double.SWIGTYPE_p_double newEventPos) {
    vtkd_im.vtkWidgetRepresentation_EndWidgetInteraction(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(newEventPos));
  }

  public int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkWidgetRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkWidgetRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public int GetInteractionState() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetInteractionState(cast(void*)swigCPtr);
    return ret;
  }

  public void Highlight(int arg0) {
    vtkd_im.vtkWidgetRepresentation_Highlight(cast(void*)swigCPtr, arg0);
  }

  public void SetPlaceFactor(double _arg) {
    vtkd_im.vtkWidgetRepresentation_SetPlaceFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetPlaceFactorMinValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetPlaceFactorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetPlaceFactorMaxValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetPlaceFactorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetPlaceFactor() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetPlaceFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHandleSize(double _arg) {
    vtkd_im.vtkWidgetRepresentation_SetHandleSize(cast(void*)swigCPtr, _arg);
  }

  public double GetHandleSizeMinValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetHandleSizeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHandleSizeMaxValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetHandleSizeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHandleSize() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetHandleSize(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNeedToRender() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetNeedToRender(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNeedToRender(int _arg) {
    vtkd_im.vtkWidgetRepresentation_SetNeedToRender(cast(void*)swigCPtr, _arg);
  }

  public int GetNeedToRenderMinValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetNeedToRenderMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNeedToRenderMaxValue() {
    auto ret = vtkd_im.vtkWidgetRepresentation_GetNeedToRenderMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void NeedToRenderOn() {
    vtkd_im.vtkWidgetRepresentation_NeedToRenderOn(cast(void*)swigCPtr);
  }

  public void NeedToRenderOff() {
    vtkd_im.vtkWidgetRepresentation_NeedToRenderOff(cast(void*)swigCPtr);
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkWidgetRepresentation_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  public int RenderOverlay(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkWidgetRepresentation_RenderOverlay(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int RenderOpaqueGeometry(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkWidgetRepresentation_RenderOpaqueGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int RenderTranslucentPolygonalGeometry(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkWidgetRepresentation_RenderTranslucentPolygonalGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int RenderVolumetricGeometry(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkWidgetRepresentation_RenderVolumetricGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int HasTranslucentPolygonalGeometry() {
    auto ret = vtkd_im.vtkWidgetRepresentation_HasTranslucentPolygonalGeometry(cast(void*)swigCPtr);
    return ret;
  }
}
