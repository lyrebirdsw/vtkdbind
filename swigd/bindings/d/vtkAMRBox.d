/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAMRBox;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_ostream;
static import SWIGTYPE_p_double;

class vtkAMRBox {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkAMRBox obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkAMRBox(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkAMRBox__SWIG_0(), true);
  }

  public this(vtkAMRBox other) {
    this(vtkd_im.new_vtkAMRBox__SWIG_1(vtkAMRBox.swigGetCPtr(other)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(int ilo, int jlo, int klo, int ihi, int jhi, int khi) {
    this(vtkd_im.new_vtkAMRBox__SWIG_2(ilo, jlo, klo, ihi, jhi, khi), true);
  }

  public this(int ilo, int jlo, int ihi, int jhi) {
    this(vtkd_im.new_vtkAMRBox__SWIG_3(ilo, jlo, ihi, jhi), true);
  }

  public this(double* origin, int* dimensions, double* spacing, double* globalOrigin, int gridDescription) {
    this(vtkd_im.new_vtkAMRBox__SWIG_4(cast(void*)origin, cast(void*)dimensions, cast(void*)spacing, cast(void*)globalOrigin, gridDescription), true);
  }

  public this(double* origin, int* dimensions, double* spacing, double* globalOrigin) {
    this(vtkd_im.new_vtkAMRBox__SWIG_5(cast(void*)origin, cast(void*)dimensions, cast(void*)spacing, cast(void*)globalOrigin), true);
  }

  public this(SWIGTYPE_p_int.SWIGTYPE_p_int lo, SWIGTYPE_p_int.SWIGTYPE_p_int hi) {
    this(vtkd_im.new_vtkAMRBox__SWIG_6(SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(lo), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(hi)), true);
  }

  public this(SWIGTYPE_p_int.SWIGTYPE_p_int dims) {
    this(vtkd_im.new_vtkAMRBox__SWIG_7(SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dims)), true);
  }

  public vtkAMRBox Equal(vtkAMRBox other) {
    vtkAMRBox ret = new vtkAMRBox(vtkd_im.vtkAMRBox_Equal(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Invalidate() {
    vtkd_im.vtkAMRBox_Invalidate(cast(void*)swigCPtr);
  }

  public bool EmptyDimension(int i) const {
    bool ret = vtkd_im.vtkAMRBox_EmptyDimension(cast(void*)swigCPtr, i) ? true : false;
    return ret;
  }

  public void SetDimensions(int ilo, int jlo, int klo, int ihi, int jhi, int khi, int desc) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_0(cast(void*)swigCPtr, ilo, jlo, klo, ihi, jhi, khi, desc);
  }

  public void SetDimensions(int ilo, int jlo, int klo, int ihi, int jhi, int khi) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_1(cast(void*)swigCPtr, ilo, jlo, klo, ihi, jhi, khi);
  }

  public void SetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int lo, SWIGTYPE_p_int.SWIGTYPE_p_int hi, int desc) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(lo), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(hi), desc);
  }

  public void SetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int lo, SWIGTYPE_p_int.SWIGTYPE_p_int hi) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_3(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(lo), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(hi));
  }

  public void SetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int dims, int desc) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_4(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dims), desc);
  }

  public void SetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int dims) {
    vtkd_im.vtkAMRBox_SetDimensions__SWIG_5(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dims));
  }

  public void GetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int lo, SWIGTYPE_p_int.SWIGTYPE_p_int hi) const {
    vtkd_im.vtkAMRBox_GetDimensions__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(lo), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(hi));
  }

  public void GetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int dims) const {
    vtkd_im.vtkAMRBox_GetDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dims));
  }

  public long GetNumberOfCells() const {
    auto ret = vtkd_im.vtkAMRBox_GetNumberOfCells__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetNumberOfCells(SWIGTYPE_p_int.SWIGTYPE_p_int num) const {
    vtkd_im.vtkAMRBox_GetNumberOfCells__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(num));
  }

  public void GetNumberOfNodes(SWIGTYPE_p_int.SWIGTYPE_p_int ext) const {
    vtkd_im.vtkAMRBox_GetNumberOfNodes__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ext));
  }

  public long GetNumberOfNodes() const {
    auto ret = vtkd_im.vtkAMRBox_GetNumberOfNodes__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public int ComputeDimension() const {
    auto ret = vtkd_im.vtkAMRBox_ComputeDimension(cast(void*)swigCPtr);
    return ret;
  }

  public int* GetLoCorner() const {
    auto ret = cast(int*)vtkd_im.vtkAMRBox_GetLoCorner(cast(void*)swigCPtr);
    return ret;
  }

  public int* GetHiCorner() const {
    auto ret = cast(int*)vtkd_im.vtkAMRBox_GetHiCorner(cast(void*)swigCPtr);
    return ret;
  }

  public void GetValidHiCorner(SWIGTYPE_p_int.SWIGTYPE_p_int hi) const {
    vtkd_im.vtkAMRBox_GetValidHiCorner(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(hi));
  }

  public bool Empty() const {
    bool ret = vtkd_im.vtkAMRBox_Empty(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool IsInvalid() const {
    bool ret = vtkd_im.vtkAMRBox_IsInvalid(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool swigOpEquals(vtkAMRBox other) const {
    bool ret = vtkd_im.vtkAMRBox_swigOpEquals(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool NotEqual(vtkAMRBox other) const {
    bool ret = vtkd_im.vtkAMRBox_NotEqual(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public SWIGTYPE_p_ostream.SWIGTYPE_p_ostream Print(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream os) const {
    SWIGTYPE_p_ostream.SWIGTYPE_p_ostream ret = new SWIGTYPE_p_ostream.SWIGTYPE_p_ostream(vtkd_im.vtkAMRBox_Print(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(os)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Serialize(ubyte** buffer, long* bytesize) {
    vtkd_im.vtkAMRBox_Serialize__SWIG_0(cast(void*)swigCPtr, cast(void*)buffer, cast(void*)bytesize);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Serialize(int* buffer) const {
    vtkd_im.vtkAMRBox_Serialize__SWIG_1(cast(void*)swigCPtr, cast(void*)buffer);
  }

  public void Deserialize(ubyte* buffer, long bytesize) {
    vtkd_im.vtkAMRBox_Deserialize(cast(void*)swigCPtr, cast(void*)buffer, bytesize);
  }

  public bool DoesBoxIntersectAlongDimension(vtkAMRBox other, int q) const {
    bool ret = vtkd_im.vtkAMRBox_DoesBoxIntersectAlongDimension(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other), q) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool DoesIntersect(vtkAMRBox other) const {
    bool ret = vtkd_im.vtkAMRBox_DoesIntersect(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Coarsen(int r) {
    vtkd_im.vtkAMRBox_Coarsen(cast(void*)swigCPtr, r);
  }

  public void Refine(int r) {
    vtkd_im.vtkAMRBox_Refine(cast(void*)swigCPtr, r);
  }

  public void Grow(int byN) {
    vtkd_im.vtkAMRBox_Grow(cast(void*)swigCPtr, byN);
  }

  public void Shrink(int byN) {
    vtkd_im.vtkAMRBox_Shrink(cast(void*)swigCPtr, byN);
  }

  public void Shift(int i, int j, int k) {
    vtkd_im.vtkAMRBox_Shift__SWIG_0(cast(void*)swigCPtr, i, j, k);
  }

  public void Shift(SWIGTYPE_p_int.SWIGTYPE_p_int I) {
    vtkd_im.vtkAMRBox_Shift__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(I));
  }

  public bool Intersect(vtkAMRBox other) {
    bool ret = vtkd_im.vtkAMRBox_Intersect(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool Contains(int i, int j, int k) const {
    bool ret = vtkd_im.vtkAMRBox_Contains__SWIG_0(cast(void*)swigCPtr, i, j, k) ? true : false;
    return ret;
  }

  public bool Contains(SWIGTYPE_p_int.SWIGTYPE_p_int I) const {
    bool ret = vtkd_im.vtkAMRBox_Contains__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(I)) ? true : false;
    return ret;
  }

  public bool Contains(vtkAMRBox arg0) const {
    bool ret = vtkd_im.vtkAMRBox_Contains__SWIG_2(cast(void*)swigCPtr, vtkAMRBox.swigGetCPtr(arg0)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void GetGhostVector(int r, SWIGTYPE_p_int.SWIGTYPE_p_int nghost) const {
    vtkd_im.vtkAMRBox_GetGhostVector(cast(void*)swigCPtr, r, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(nghost));
  }

  public void RemoveGhosts(int r) {
    vtkd_im.vtkAMRBox_RemoveGhosts(cast(void*)swigCPtr, r);
  }

  public static long GetBytesize() {
    auto ret = vtkd_im.vtkAMRBox_GetBytesize();
    return ret;
  }

  public static int GetCellLinearIndex(vtkAMRBox box, int i, int j, int k, SWIGTYPE_p_int.SWIGTYPE_p_int imageDimension) {
    auto ret = vtkd_im.vtkAMRBox_GetCellLinearIndex(vtkAMRBox.swigGetCPtr(box), i, j, k, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(imageDimension));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public static void GetBounds(vtkAMRBox box, SWIGTYPE_p_double.SWIGTYPE_p_double origin, SWIGTYPE_p_double.SWIGTYPE_p_double spacing, SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkAMRBox_GetBounds(vtkAMRBox.swigGetCPtr(box), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(origin), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(spacing), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static void GetBoxOrigin(vtkAMRBox box, SWIGTYPE_p_double.SWIGTYPE_p_double X0, SWIGTYPE_p_double.SWIGTYPE_p_double spacing, SWIGTYPE_p_double.SWIGTYPE_p_double x0) {
    vtkd_im.vtkAMRBox_GetBoxOrigin(vtkAMRBox.swigGetCPtr(box), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(X0), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(spacing), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static bool HasPoint(vtkAMRBox box, SWIGTYPE_p_double.SWIGTYPE_p_double origin, SWIGTYPE_p_double.SWIGTYPE_p_double spacing, double x, double y, double z) {
    bool ret = vtkd_im.vtkAMRBox_HasPoint(vtkAMRBox.swigGetCPtr(box), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(origin), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(spacing), x, y, z) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public static int ComputeStructuredCoordinates(vtkAMRBox box, SWIGTYPE_p_double.SWIGTYPE_p_double dataOrigin, SWIGTYPE_p_double.SWIGTYPE_p_double h, SWIGTYPE_p_double.SWIGTYPE_p_double x, SWIGTYPE_p_int.SWIGTYPE_p_int ijk, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    auto ret = vtkd_im.vtkAMRBox_ComputeStructuredCoordinates(vtkAMRBox.swigGetCPtr(box), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(dataOrigin), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(h), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ijk), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }
}
