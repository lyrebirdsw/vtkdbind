/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkHyperOctreeCursor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;

class vtkHyperOctreeCursor : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkHyperOctreeCursor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkHyperOctreeCursor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkHyperOctreeCursor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkHyperOctreeCursor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkHyperOctreeCursor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkHyperOctreeCursor ret = (cPtr is null) ? null : new vtkHyperOctreeCursor(cPtr, false);
    return ret;
  }

  public vtkHyperOctreeCursor NewInstance() const {
    void* cPtr = vtkd_im.vtkHyperOctreeCursor_NewInstance(cast(void*)swigCPtr);
    vtkHyperOctreeCursor ret = (cPtr is null) ? null : new vtkHyperOctreeCursor(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public int GetLeafId() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetLeafId(cast(void*)swigCPtr);
    return ret;
  }

  public int CurrentIsLeaf() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_CurrentIsLeaf(cast(void*)swigCPtr);
    return ret;
  }

  public int CurrentIsRoot() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_CurrentIsRoot(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCurrentLevel() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetCurrentLevel(cast(void*)swigCPtr);
    return ret;
  }

  public int GetChildIndex() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetChildIndex(cast(void*)swigCPtr);
    return ret;
  }

  public int CurrentIsTerminalNode() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_CurrentIsTerminalNode(cast(void*)swigCPtr);
    return ret;
  }

  public void ToRoot() {
    vtkd_im.vtkHyperOctreeCursor_ToRoot(cast(void*)swigCPtr);
  }

  public void ToParent() {
    vtkd_im.vtkHyperOctreeCursor_ToParent(cast(void*)swigCPtr);
  }

  public void ToChild(int child) {
    vtkd_im.vtkHyperOctreeCursor_ToChild(cast(void*)swigCPtr, child);
  }

  public void ToSameNode(vtkHyperOctreeCursor other) {
    vtkd_im.vtkHyperOctreeCursor_ToSameNode(cast(void*)swigCPtr, vtkHyperOctreeCursor.swigGetCPtr(other));
  }

  public int IsEqual(vtkHyperOctreeCursor other) {
    auto ret = vtkd_im.vtkHyperOctreeCursor_IsEqual(cast(void*)swigCPtr, vtkHyperOctreeCursor.swigGetCPtr(other));
    return ret;
  }

  public vtkHyperOctreeCursor Clone() {
    void* cPtr = vtkd_im.vtkHyperOctreeCursor_Clone(cast(void*)swigCPtr);
    vtkHyperOctreeCursor ret = (cPtr is null) ? null : new vtkHyperOctreeCursor(cPtr, false);
    return ret;
  }

  public int SameTree(vtkHyperOctreeCursor other) {
    auto ret = vtkd_im.vtkHyperOctreeCursor_SameTree(cast(void*)swigCPtr, vtkHyperOctreeCursor.swigGetCPtr(other));
    return ret;
  }

  public int GetIndex(int d) {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetIndex(cast(void*)swigCPtr, d);
    return ret;
  }

  public int GetNumberOfChildren() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetNumberOfChildren(cast(void*)swigCPtr);
    return ret;
  }

  public int GetDimension() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_GetDimension(cast(void*)swigCPtr);
    return ret;
  }

  public void MoveToNode(int* indices, int level) {
    vtkd_im.vtkHyperOctreeCursor_MoveToNode(cast(void*)swigCPtr, cast(void*)indices, level);
  }

  public int Found() {
    auto ret = vtkd_im.vtkHyperOctreeCursor_Found(cast(void*)swigCPtr);
    return ret;
  }
}
