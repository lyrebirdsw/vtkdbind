/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourWidget;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkContourRepresentation;
static import vtkPolyData;
static import vtkIdList;
static import vtkAbstractWidget;

class vtkContourWidget : vtkAbstractWidget.vtkAbstractWidget {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContourWidget_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContourWidget obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkContourWidget New() {
    void* cPtr = vtkd_im.vtkContourWidget_New();
    vtkContourWidget ret = (cPtr is null) ? null : new vtkContourWidget(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContourWidget_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContourWidget SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContourWidget_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContourWidget ret = (cPtr is null) ? null : new vtkContourWidget(cPtr, false);
    return ret;
  }

  public vtkContourWidget NewInstance() const {
    void* cPtr = vtkd_im.vtkContourWidget_NewInstance(cast(void*)swigCPtr);
    vtkContourWidget ret = (cPtr is null) ? null : new vtkContourWidget(cPtr, false);
    return ret;
  }

  alias vtkAbstractWidget.vtkAbstractWidget.NewInstance NewInstance;

  public void SetRepresentation(vtkContourRepresentation.vtkContourRepresentation r) {
    vtkd_im.vtkContourWidget_SetRepresentation(cast(void*)swigCPtr, vtkContourRepresentation.vtkContourRepresentation.swigGetCPtr(r));
  }

  public vtkContourRepresentation.vtkContourRepresentation GetContourRepresentation() {
    void* cPtr = vtkd_im.vtkContourWidget_GetContourRepresentation(cast(void*)swigCPtr);
    vtkContourRepresentation.vtkContourRepresentation ret = (cPtr is null) ? null : new vtkContourRepresentation.vtkContourRepresentation(cPtr, false);
    return ret;
  }

  public void CloseLoop() {
    vtkd_im.vtkContourWidget_CloseLoop(cast(void*)swigCPtr);
  }

  public void SetWidgetState(int _arg) {
    vtkd_im.vtkContourWidget_SetWidgetState(cast(void*)swigCPtr, _arg);
  }

  public int GetWidgetState() {
    auto ret = vtkd_im.vtkContourWidget_GetWidgetState(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAllowNodePicking(int arg0) {
    vtkd_im.vtkContourWidget_SetAllowNodePicking(cast(void*)swigCPtr, arg0);
  }

  public int GetAllowNodePicking() {
    auto ret = vtkd_im.vtkContourWidget_GetAllowNodePicking(cast(void*)swigCPtr);
    return ret;
  }

  public void AllowNodePickingOn() {
    vtkd_im.vtkContourWidget_AllowNodePickingOn(cast(void*)swigCPtr);
  }

  public void AllowNodePickingOff() {
    vtkd_im.vtkContourWidget_AllowNodePickingOff(cast(void*)swigCPtr);
  }

  public void SetFollowCursor(int _arg) {
    vtkd_im.vtkContourWidget_SetFollowCursor(cast(void*)swigCPtr, _arg);
  }

  public int GetFollowCursor() {
    auto ret = vtkd_im.vtkContourWidget_GetFollowCursor(cast(void*)swigCPtr);
    return ret;
  }

  public void FollowCursorOn() {
    vtkd_im.vtkContourWidget_FollowCursorOn(cast(void*)swigCPtr);
  }

  public void FollowCursorOff() {
    vtkd_im.vtkContourWidget_FollowCursorOff(cast(void*)swigCPtr);
  }

  public void SetContinuousDraw(int _arg) {
    vtkd_im.vtkContourWidget_SetContinuousDraw(cast(void*)swigCPtr, _arg);
  }

  public int GetContinuousDraw() {
    auto ret = vtkd_im.vtkContourWidget_GetContinuousDraw(cast(void*)swigCPtr);
    return ret;
  }

  public void ContinuousDrawOn() {
    vtkd_im.vtkContourWidget_ContinuousDrawOn(cast(void*)swigCPtr);
  }

  public void ContinuousDrawOff() {
    vtkd_im.vtkContourWidget_ContinuousDrawOff(cast(void*)swigCPtr);
  }

  public void Initialize(vtkPolyData.vtkPolyData poly, int state, vtkIdList.vtkIdList idList) {
    vtkd_im.vtkContourWidget_Initialize__SWIG_0(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(poly), state, vtkIdList.vtkIdList.swigGetCPtr(idList));
  }

  public void Initialize(vtkPolyData.vtkPolyData poly, int state) {
    vtkd_im.vtkContourWidget_Initialize__SWIG_1(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(poly), state);
  }

  public void Initialize(vtkPolyData.vtkPolyData poly) {
    vtkd_im.vtkContourWidget_Initialize__SWIG_2(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(poly));
  }

  public void Initialize() {
    vtkd_im.vtkContourWidget_Initialize__SWIG_3(cast(void*)swigCPtr);
  }
}
