/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPlaneWidget;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyData;
static import vtkPlane;
static import vtkProperty;
static import vtkPolyDataSourceWidget;

class vtkPlaneWidget : vtkPolyDataSourceWidget.vtkPolyDataSourceWidget {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPlaneWidget_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPlaneWidget obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkPlaneWidget New() {
    void* cPtr = vtkd_im.vtkPlaneWidget_New();
    vtkPlaneWidget ret = (cPtr is null) ? null : new vtkPlaneWidget(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPlaneWidget_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPlaneWidget SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPlaneWidget_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPlaneWidget ret = (cPtr is null) ? null : new vtkPlaneWidget(cPtr, false);
    return ret;
  }

  public vtkPlaneWidget NewInstance() const {
    void* cPtr = vtkd_im.vtkPlaneWidget_NewInstance(cast(void*)swigCPtr);
    vtkPlaneWidget ret = (cPtr is null) ? null : new vtkPlaneWidget(cPtr, false);
    return ret;
  }

  alias vtkPolyDataSourceWidget.vtkPolyDataSourceWidget.NewInstance NewInstance;

  public override void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkPlaneWidget_PlaceWidget__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public override void PlaceWidget() {
    vtkd_im.vtkPlaneWidget_PlaceWidget__SWIG_1(cast(void*)swigCPtr);
  }

  public override void PlaceWidget(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) {
    vtkd_im.vtkPlaneWidget_PlaceWidget__SWIG_2(cast(void*)swigCPtr, xmin, xmax, ymin, ymax, zmin, zmax);
  }

  public void SetResolution(int r) {
    vtkd_im.vtkPlaneWidget_SetResolution(cast(void*)swigCPtr, r);
  }

  public int GetResolution() {
    auto ret = vtkd_im.vtkPlaneWidget_GetResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOrigin(double x, double y, double z) {
    vtkd_im.vtkPlaneWidget_SetOrigin__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkPlaneWidget_SetOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public double* GetOrigin() {
    auto ret = cast(double*)vtkd_im.vtkPlaneWidget_GetOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkPlaneWidget_GetOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetPoint1(double x, double y, double z) {
    vtkd_im.vtkPlaneWidget_SetPoint1__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetPoint1(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkPlaneWidget_SetPoint1__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public double* GetPoint1() {
    auto ret = cast(double*)vtkd_im.vtkPlaneWidget_GetPoint1__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPoint1(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkPlaneWidget_GetPoint1__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetPoint2(double x, double y, double z) {
    vtkd_im.vtkPlaneWidget_SetPoint2__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetPoint2(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkPlaneWidget_SetPoint2__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public double* GetPoint2() {
    auto ret = cast(double*)vtkd_im.vtkPlaneWidget_GetPoint2__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPoint2(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkPlaneWidget_GetPoint2__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetCenter(double x, double y, double z) {
    vtkd_im.vtkPlaneWidget_SetCenter__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkPlaneWidget_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkPlaneWidget_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkPlaneWidget_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetNormal(double x, double y, double z) {
    vtkd_im.vtkPlaneWidget_SetNormal__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetNormal(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkPlaneWidget_SetNormal__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public double* GetNormal() {
    auto ret = cast(double*)vtkd_im.vtkPlaneWidget_GetNormal__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetNormal(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkPlaneWidget_GetNormal__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetRepresentation(int _arg) {
    vtkd_im.vtkPlaneWidget_SetRepresentation(cast(void*)swigCPtr, _arg);
  }

  public int GetRepresentationMinValue() {
    auto ret = vtkd_im.vtkPlaneWidget_GetRepresentationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRepresentationMaxValue() {
    auto ret = vtkd_im.vtkPlaneWidget_GetRepresentationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRepresentation() {
    auto ret = vtkd_im.vtkPlaneWidget_GetRepresentation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRepresentationToOff() {
    vtkd_im.vtkPlaneWidget_SetRepresentationToOff(cast(void*)swigCPtr);
  }

  public void SetRepresentationToOutline() {
    vtkd_im.vtkPlaneWidget_SetRepresentationToOutline(cast(void*)swigCPtr);
  }

  public void SetRepresentationToWireframe() {
    vtkd_im.vtkPlaneWidget_SetRepresentationToWireframe(cast(void*)swigCPtr);
  }

  public void SetRepresentationToSurface() {
    vtkd_im.vtkPlaneWidget_SetRepresentationToSurface(cast(void*)swigCPtr);
  }

  public void SetNormalToXAxis(int _arg) {
    vtkd_im.vtkPlaneWidget_SetNormalToXAxis(cast(void*)swigCPtr, _arg);
  }

  public int GetNormalToXAxis() {
    auto ret = vtkd_im.vtkPlaneWidget_GetNormalToXAxis(cast(void*)swigCPtr);
    return ret;
  }

  public void NormalToXAxisOn() {
    vtkd_im.vtkPlaneWidget_NormalToXAxisOn(cast(void*)swigCPtr);
  }

  public void NormalToXAxisOff() {
    vtkd_im.vtkPlaneWidget_NormalToXAxisOff(cast(void*)swigCPtr);
  }

  public void SetNormalToYAxis(int _arg) {
    vtkd_im.vtkPlaneWidget_SetNormalToYAxis(cast(void*)swigCPtr, _arg);
  }

  public int GetNormalToYAxis() {
    auto ret = vtkd_im.vtkPlaneWidget_GetNormalToYAxis(cast(void*)swigCPtr);
    return ret;
  }

  public void NormalToYAxisOn() {
    vtkd_im.vtkPlaneWidget_NormalToYAxisOn(cast(void*)swigCPtr);
  }

  public void NormalToYAxisOff() {
    vtkd_im.vtkPlaneWidget_NormalToYAxisOff(cast(void*)swigCPtr);
  }

  public void SetNormalToZAxis(int _arg) {
    vtkd_im.vtkPlaneWidget_SetNormalToZAxis(cast(void*)swigCPtr, _arg);
  }

  public int GetNormalToZAxis() {
    auto ret = vtkd_im.vtkPlaneWidget_GetNormalToZAxis(cast(void*)swigCPtr);
    return ret;
  }

  public void NormalToZAxisOn() {
    vtkd_im.vtkPlaneWidget_NormalToZAxisOn(cast(void*)swigCPtr);
  }

  public void NormalToZAxisOff() {
    vtkd_im.vtkPlaneWidget_NormalToZAxisOff(cast(void*)swigCPtr);
  }

  public void GetPolyData(vtkPolyData.vtkPolyData pd) {
    vtkd_im.vtkPlaneWidget_GetPolyData(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(pd));
  }

  public void GetPlane(vtkPlane.vtkPlane plane) {
    vtkd_im.vtkPlaneWidget_GetPlane(cast(void*)swigCPtr, vtkPlane.vtkPlane.swigGetCPtr(plane));
  }

  public vtkProperty.vtkProperty GetHandleProperty() {
    void* cPtr = vtkd_im.vtkPlaneWidget_GetHandleProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetSelectedHandleProperty() {
    void* cPtr = vtkd_im.vtkPlaneWidget_GetSelectedHandleProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetPlaneProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPlaneWidget_SetPlaneProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetPlaneProperty() {
    void* cPtr = vtkd_im.vtkPlaneWidget_GetPlaneProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetSelectedPlaneProperty() {
    void* cPtr = vtkd_im.vtkPlaneWidget_GetSelectedPlaneProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }
}
