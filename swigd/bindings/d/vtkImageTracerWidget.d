/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageTracerWidget;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkProperty;
static import vtkProp;
static import vtkPolyData;
static import vtkGlyphSource2D;
static import vtkPoints;
static import vtk3DWidget;

class vtkImageTracerWidget : vtk3DWidget.vtk3DWidget {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageTracerWidget_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageTracerWidget obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageTracerWidget New() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_New();
    vtkImageTracerWidget ret = (cPtr is null) ? null : new vtkImageTracerWidget(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageTracerWidget_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageTracerWidget SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageTracerWidget_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageTracerWidget ret = (cPtr is null) ? null : new vtkImageTracerWidget(cPtr, false);
    return ret;
  }

  public vtkImageTracerWidget NewInstance() const {
    void* cPtr = vtkd_im.vtkImageTracerWidget_NewInstance(cast(void*)swigCPtr);
    vtkImageTracerWidget ret = (cPtr is null) ? null : new vtkImageTracerWidget(cPtr, false);
    return ret;
  }

  alias vtk3DWidget.vtk3DWidget.NewInstance NewInstance;

  public override void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkImageTracerWidget_PlaceWidget__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public override void PlaceWidget() {
    vtkd_im.vtkImageTracerWidget_PlaceWidget__SWIG_1(cast(void*)swigCPtr);
  }

  public override void PlaceWidget(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) {
    vtkd_im.vtkImageTracerWidget_PlaceWidget__SWIG_2(cast(void*)swigCPtr, xmin, xmax, ymin, ymax, zmin, zmax);
  }

  public void SetHandleProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkImageTracerWidget_SetHandleProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetHandleProperty() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_GetHandleProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetSelectedHandleProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkImageTracerWidget_SetSelectedHandleProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetSelectedHandleProperty() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_GetSelectedHandleProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetLineProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkImageTracerWidget_SetLineProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetLineProperty() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_GetLineProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetSelectedLineProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkImageTracerWidget_SetSelectedLineProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetSelectedLineProperty() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_GetSelectedLineProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetViewProp(vtkProp.vtkProp prop) {
    vtkd_im.vtkImageTracerWidget_SetViewProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(prop));
  }

  public void SetProjectToPlane(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetProjectToPlane(cast(void*)swigCPtr, _arg);
  }

  public int GetProjectToPlane() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetProjectToPlane(cast(void*)swigCPtr);
    return ret;
  }

  public void ProjectToPlaneOn() {
    vtkd_im.vtkImageTracerWidget_ProjectToPlaneOn(cast(void*)swigCPtr);
  }

  public void ProjectToPlaneOff() {
    vtkd_im.vtkImageTracerWidget_ProjectToPlaneOff(cast(void*)swigCPtr);
  }

  public void SetProjectionNormal(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetProjectionNormal(cast(void*)swigCPtr, _arg);
  }

  public int GetProjectionNormalMinValue() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetProjectionNormalMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionNormalMaxValue() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetProjectionNormalMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionNormal() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetProjectionNormal(cast(void*)swigCPtr);
    return ret;
  }

  public void SetProjectionNormalToXAxes() {
    vtkd_im.vtkImageTracerWidget_SetProjectionNormalToXAxes(cast(void*)swigCPtr);
  }

  public void SetProjectionNormalToYAxes() {
    vtkd_im.vtkImageTracerWidget_SetProjectionNormalToYAxes(cast(void*)swigCPtr);
  }

  public void SetProjectionNormalToZAxes() {
    vtkd_im.vtkImageTracerWidget_SetProjectionNormalToZAxes(cast(void*)swigCPtr);
  }

  public void SetProjectionPosition(double position) {
    vtkd_im.vtkImageTracerWidget_SetProjectionPosition(cast(void*)swigCPtr, position);
  }

  public double GetProjectionPosition() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetProjectionPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSnapToImage(int snap) {
    vtkd_im.vtkImageTracerWidget_SetSnapToImage(cast(void*)swigCPtr, snap);
  }

  public int GetSnapToImage() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetSnapToImage(cast(void*)swigCPtr);
    return ret;
  }

  public void SnapToImageOn() {
    vtkd_im.vtkImageTracerWidget_SnapToImageOn(cast(void*)swigCPtr);
  }

  public void SnapToImageOff() {
    vtkd_im.vtkImageTracerWidget_SnapToImageOff(cast(void*)swigCPtr);
  }

  public void SetAutoClose(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetAutoClose(cast(void*)swigCPtr, _arg);
  }

  public int GetAutoClose() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetAutoClose(cast(void*)swigCPtr);
    return ret;
  }

  public void AutoCloseOn() {
    vtkd_im.vtkImageTracerWidget_AutoCloseOn(cast(void*)swigCPtr);
  }

  public void AutoCloseOff() {
    vtkd_im.vtkImageTracerWidget_AutoCloseOff(cast(void*)swigCPtr);
  }

  public void SetCaptureRadius(double _arg) {
    vtkd_im.vtkImageTracerWidget_SetCaptureRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetCaptureRadius() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetCaptureRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPath(vtkPolyData.vtkPolyData pd) {
    vtkd_im.vtkImageTracerWidget_GetPath(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(pd));
  }

  public vtkGlyphSource2D.vtkGlyphSource2D GetGlyphSource() {
    void* cPtr = vtkd_im.vtkImageTracerWidget_GetGlyphSource(cast(void*)swigCPtr);
    vtkGlyphSource2D.vtkGlyphSource2D ret = (cPtr is null) ? null : new vtkGlyphSource2D.vtkGlyphSource2D(cPtr, false);
    return ret;
  }

  public void SetImageSnapType(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetImageSnapType(cast(void*)swigCPtr, _arg);
  }

  public int GetImageSnapTypeMinValue() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetImageSnapTypeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetImageSnapTypeMaxValue() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetImageSnapTypeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetImageSnapType() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetImageSnapType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHandlePosition(int handle, SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkImageTracerWidget_SetHandlePosition__SWIG_0(cast(void*)swigCPtr, handle, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public void SetHandlePosition(int handle, double x, double y, double z) {
    vtkd_im.vtkImageTracerWidget_SetHandlePosition__SWIG_1(cast(void*)swigCPtr, handle, x, y, z);
  }

  public void GetHandlePosition(int handle, SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkImageTracerWidget_GetHandlePosition__SWIG_0(cast(void*)swigCPtr, handle, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public double* GetHandlePosition(int handle) {
    auto ret = cast(double*)vtkd_im.vtkImageTracerWidget_GetHandlePosition__SWIG_1(cast(void*)swigCPtr, handle);
    return ret;
  }

  public int GetNumberOfHandles() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetNumberOfHandles(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInteraction(int interact) {
    vtkd_im.vtkImageTracerWidget_SetInteraction(cast(void*)swigCPtr, interact);
  }

  public int GetInteraction() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetInteraction(cast(void*)swigCPtr);
    return ret;
  }

  public void InteractionOn() {
    vtkd_im.vtkImageTracerWidget_InteractionOn(cast(void*)swigCPtr);
  }

  public void InteractionOff() {
    vtkd_im.vtkImageTracerWidget_InteractionOff(cast(void*)swigCPtr);
  }

  public void InitializeHandles(vtkPoints.vtkPoints arg0) {
    vtkd_im.vtkImageTracerWidget_InitializeHandles(cast(void*)swigCPtr, vtkPoints.vtkPoints.swigGetCPtr(arg0));
  }

  public int IsClosed() {
    auto ret = vtkd_im.vtkImageTracerWidget_IsClosed(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHandleLeftMouseButton(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetHandleLeftMouseButton(cast(void*)swigCPtr, _arg);
  }

  public int GetHandleLeftMouseButton() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetHandleLeftMouseButton(cast(void*)swigCPtr);
    return ret;
  }

  public void HandleLeftMouseButtonOn() {
    vtkd_im.vtkImageTracerWidget_HandleLeftMouseButtonOn(cast(void*)swigCPtr);
  }

  public void HandleLeftMouseButtonOff() {
    vtkd_im.vtkImageTracerWidget_HandleLeftMouseButtonOff(cast(void*)swigCPtr);
  }

  public void SetHandleMiddleMouseButton(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetHandleMiddleMouseButton(cast(void*)swigCPtr, _arg);
  }

  public int GetHandleMiddleMouseButton() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetHandleMiddleMouseButton(cast(void*)swigCPtr);
    return ret;
  }

  public void HandleMiddleMouseButtonOn() {
    vtkd_im.vtkImageTracerWidget_HandleMiddleMouseButtonOn(cast(void*)swigCPtr);
  }

  public void HandleMiddleMouseButtonOff() {
    vtkd_im.vtkImageTracerWidget_HandleMiddleMouseButtonOff(cast(void*)swigCPtr);
  }

  public void SetHandleRightMouseButton(int _arg) {
    vtkd_im.vtkImageTracerWidget_SetHandleRightMouseButton(cast(void*)swigCPtr, _arg);
  }

  public int GetHandleRightMouseButton() {
    auto ret = vtkd_im.vtkImageTracerWidget_GetHandleRightMouseButton(cast(void*)swigCPtr);
    return ret;
  }

  public void HandleRightMouseButtonOn() {
    vtkd_im.vtkImageTracerWidget_HandleRightMouseButtonOn(cast(void*)swigCPtr);
  }

  public void HandleRightMouseButtonOff() {
    vtkd_im.vtkImageTracerWidget_HandleRightMouseButtonOff(cast(void*)swigCPtr);
  }

  public void SetProp(vtkProp.vtkProp prop) {
    vtkd_im.vtkImageTracerWidget_SetProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(prop));
  }
}
