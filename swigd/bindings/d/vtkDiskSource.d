/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDiskSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkDiskSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDiskSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDiskSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDiskSource New() {
    void* cPtr = vtkd_im.vtkDiskSource_New();
    vtkDiskSource ret = (cPtr is null) ? null : new vtkDiskSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDiskSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDiskSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDiskSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDiskSource ret = (cPtr is null) ? null : new vtkDiskSource(cPtr, false);
    return ret;
  }

  public vtkDiskSource NewInstance() const {
    void* cPtr = vtkd_im.vtkDiskSource_NewInstance(cast(void*)swigCPtr);
    vtkDiskSource ret = (cPtr is null) ? null : new vtkDiskSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetInnerRadius(double _arg) {
    vtkd_im.vtkDiskSource_SetInnerRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetInnerRadiusMinValue() {
    auto ret = vtkd_im.vtkDiskSource_GetInnerRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetInnerRadiusMaxValue() {
    auto ret = vtkd_im.vtkDiskSource_GetInnerRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetInnerRadius() {
    auto ret = vtkd_im.vtkDiskSource_GetInnerRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOuterRadius(double _arg) {
    vtkd_im.vtkDiskSource_SetOuterRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetOuterRadiusMinValue() {
    auto ret = vtkd_im.vtkDiskSource_GetOuterRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOuterRadiusMaxValue() {
    auto ret = vtkd_im.vtkDiskSource_GetOuterRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOuterRadius() {
    auto ret = vtkd_im.vtkDiskSource_GetOuterRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRadialResolution(int _arg) {
    vtkd_im.vtkDiskSource_SetRadialResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetRadialResolutionMinValue() {
    auto ret = vtkd_im.vtkDiskSource_GetRadialResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRadialResolutionMaxValue() {
    auto ret = vtkd_im.vtkDiskSource_GetRadialResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRadialResolution() {
    auto ret = vtkd_im.vtkDiskSource_GetRadialResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCircumferentialResolution(int _arg) {
    vtkd_im.vtkDiskSource_SetCircumferentialResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetCircumferentialResolutionMinValue() {
    auto ret = vtkd_im.vtkDiskSource_GetCircumferentialResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCircumferentialResolutionMaxValue() {
    auto ret = vtkd_im.vtkDiskSource_GetCircumferentialResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCircumferentialResolution() {
    auto ret = vtkd_im.vtkDiskSource_GetCircumferentialResolution(cast(void*)swigCPtr);
    return ret;
  }
}
