/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDSPFilterDefinition;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak;
static import SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak;
static import vtkObject;

class vtkDSPFilterDefinition : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDSPFilterDefinition_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDSPFilterDefinition obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDSPFilterDefinition_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDSPFilterDefinition SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDSPFilterDefinition ret = (cPtr is null) ? null : new vtkDSPFilterDefinition(cPtr, false);
    return ret;
  }

  public vtkDSPFilterDefinition NewInstance() const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_NewInstance(cast(void*)swigCPtr);
    vtkDSPFilterDefinition ret = (cPtr is null) ? null : new vtkDSPFilterDefinition(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkDSPFilterDefinition New() {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_New();
    vtkDSPFilterDefinition ret = (cPtr is null) ? null : new vtkDSPFilterDefinition(cPtr, false);
    return ret;
  }

  public void Copy(vtkDSPFilterDefinition other) {
    vtkd_im.vtkDSPFilterDefinition_Copy(cast(void*)swigCPtr, vtkDSPFilterDefinition.swigGetCPtr(other));
  }

  public void Clear() {
    vtkd_im.vtkDSPFilterDefinition_Clear(cast(void*)swigCPtr);
  }

  public bool IsThisInputVariableInstanceNeeded(int a_timestep, int a_outputTimestep) {
    bool ret = vtkd_im.vtkDSPFilterDefinition_IsThisInputVariableInstanceNeeded(cast(void*)swigCPtr, a_timestep, a_outputTimestep) ? true : false;
    return ret;
  }

  public void PushBackNumeratorWeight(double a_value) {
    vtkd_im.vtkDSPFilterDefinition_PushBackNumeratorWeight(cast(void*)swigCPtr, a_value);
  }

  public void PushBackDenominatorWeight(double a_value) {
    vtkd_im.vtkDSPFilterDefinition_PushBackDenominatorWeight(cast(void*)swigCPtr, a_value);
  }

  public void PushBackForwardNumeratorWeight(double a_value) {
    vtkd_im.vtkDSPFilterDefinition_PushBackForwardNumeratorWeight(cast(void*)swigCPtr, a_value);
  }

  public void SetInputVariableName(string a_value) {
    vtkd_im.vtkDSPFilterDefinition_SetInputVariableName(cast(void*)swigCPtr, (a_value ? std.string.toStringz(a_value) : null));
  }

  public void SetOutputVariableName(string a_value) {
    vtkd_im.vtkDSPFilterDefinition_SetOutputVariableName(cast(void*)swigCPtr, (a_value ? std.string.toStringz(a_value) : null));
  }

  public string GetInputVariableName() {
    string ret = std.conv.to!string(vtkd_im.vtkDSPFilterDefinition_GetInputVariableName(cast(void*)swigCPtr));
    return ret;
  }

  public string GetOutputVariableName() {
    string ret = std.conv.to!string(vtkd_im.vtkDSPFilterDefinition_GetOutputVariableName(cast(void*)swigCPtr));
    return ret;
  }

  public int GetNumNumeratorWeights() {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetNumNumeratorWeights(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumDenominatorWeights() {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetNumDenominatorWeights(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumForwardNumeratorWeights() {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetNumForwardNumeratorWeights(cast(void*)swigCPtr);
    return ret;
  }

  public double GetNumeratorWeight(int a_which) {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetNumeratorWeight(cast(void*)swigCPtr, a_which);
    return ret;
  }

  public double GetDenominatorWeight(int a_which) {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetDenominatorWeight(cast(void*)swigCPtr, a_which);
    return ret;
  }

  public double GetForwardNumeratorWeight(int a_which) {
    auto ret = vtkd_im.vtkDSPFilterDefinition_GetForwardNumeratorWeight(cast(void*)swigCPtr, a_which);
    return ret;
  }

  public void NumeratorWeights(SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak value) @property {
    vtkd_im.vtkDSPFilterDefinition_NumeratorWeights_set(cast(void*)swigCPtr, SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.swigGetCPtr(value));
  }

  public SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak NumeratorWeights() @property const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_NumeratorWeights_get(cast(void*)swigCPtr);
    SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak ret = (cPtr is null) ? null : new SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak(cPtr, false);
    return ret;
  }

  public void DenominatorWeights(SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak value) @property {
    vtkd_im.vtkDSPFilterDefinition_DenominatorWeights_set(cast(void*)swigCPtr, SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.swigGetCPtr(value));
  }

  public SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak DenominatorWeights() @property const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_DenominatorWeights_get(cast(void*)swigCPtr);
    SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak ret = (cPtr is null) ? null : new SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak(cPtr, false);
    return ret;
  }

  public void ForwardNumeratorWeights(SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak value) @property {
    vtkd_im.vtkDSPFilterDefinition_ForwardNumeratorWeights_set(cast(void*)swigCPtr, SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.swigGetCPtr(value));
  }

  public SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak ForwardNumeratorWeights() @property const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_ForwardNumeratorWeights_get(cast(void*)swigCPtr);
    SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak ret = (cPtr is null) ? null : new SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionVectorDoubleSTLCloak(cPtr, false);
    return ret;
  }

  public void InputVariableName(SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak value) @property {
    vtkd_im.vtkDSPFilterDefinition_InputVariableName_set(cast(void*)swigCPtr, SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.swigGetCPtr(value));
  }

  public SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak InputVariableName() @property const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_InputVariableName_get(cast(void*)swigCPtr);
    SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak ret = (cPtr is null) ? null : new SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak(cPtr, false);
    return ret;
  }

  public void OutputVariableName(SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak value) @property {
    vtkd_im.vtkDSPFilterDefinition_OutputVariableName_set(cast(void*)swigCPtr, SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.swigGetCPtr(value));
  }

  public SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak OutputVariableName() @property const {
    void* cPtr = vtkd_im.vtkDSPFilterDefinition_OutputVariableName_get(cast(void*)swigCPtr);
    SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak ret = (cPtr is null) ? null : new SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak.SWIGTYPE_p_vtkDSPFilterDefinitionStringSTLCloak(cPtr, false);
    return ret;
  }
}
