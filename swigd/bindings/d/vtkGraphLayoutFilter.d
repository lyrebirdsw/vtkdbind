/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGraphLayoutFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkGraphLayoutFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGraphLayoutFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGraphLayoutFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGraphLayoutFilter New() {
    void* cPtr = vtkd_im.vtkGraphLayoutFilter_New();
    vtkGraphLayoutFilter ret = (cPtr is null) ? null : new vtkGraphLayoutFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGraphLayoutFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGraphLayoutFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGraphLayoutFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGraphLayoutFilter ret = (cPtr is null) ? null : new vtkGraphLayoutFilter(cPtr, false);
    return ret;
  }

  public vtkGraphLayoutFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkGraphLayoutFilter_NewInstance(cast(void*)swigCPtr);
    vtkGraphLayoutFilter ret = (cPtr is null) ? null : new vtkGraphLayoutFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetGraphBounds(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkGraphLayoutFilter_SetGraphBounds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetGraphBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGraphLayoutFilter_SetGraphBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetGraphBounds() {
    auto ret = cast(double*)vtkd_im.vtkGraphLayoutFilter_GetGraphBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetGraphBounds(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkGraphLayoutFilter_GetGraphBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetAutomaticBoundsComputation(int _arg) {
    vtkd_im.vtkGraphLayoutFilter_SetAutomaticBoundsComputation(cast(void*)swigCPtr, _arg);
  }

  public int GetAutomaticBoundsComputation() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetAutomaticBoundsComputation(cast(void*)swigCPtr);
    return ret;
  }

  public void AutomaticBoundsComputationOn() {
    vtkd_im.vtkGraphLayoutFilter_AutomaticBoundsComputationOn(cast(void*)swigCPtr);
  }

  public void AutomaticBoundsComputationOff() {
    vtkd_im.vtkGraphLayoutFilter_AutomaticBoundsComputationOff(cast(void*)swigCPtr);
  }

  public void SetMaxNumberOfIterations(int _arg) {
    vtkd_im.vtkGraphLayoutFilter_SetMaxNumberOfIterations(cast(void*)swigCPtr, _arg);
  }

  public int GetMaxNumberOfIterationsMinValue() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetMaxNumberOfIterationsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaxNumberOfIterationsMaxValue() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetMaxNumberOfIterationsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaxNumberOfIterations() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetMaxNumberOfIterations(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCoolDownRate(double _arg) {
    vtkd_im.vtkGraphLayoutFilter_SetCoolDownRate(cast(void*)swigCPtr, _arg);
  }

  public double GetCoolDownRateMinValue() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetCoolDownRateMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetCoolDownRateMaxValue() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetCoolDownRateMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetCoolDownRate() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetCoolDownRate(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThreeDimensionalLayout(int _arg) {
    vtkd_im.vtkGraphLayoutFilter_SetThreeDimensionalLayout(cast(void*)swigCPtr, _arg);
  }

  public int GetThreeDimensionalLayout() {
    auto ret = vtkd_im.vtkGraphLayoutFilter_GetThreeDimensionalLayout(cast(void*)swigCPtr);
    return ret;
  }

  public void ThreeDimensionalLayoutOn() {
    vtkd_im.vtkGraphLayoutFilter_ThreeDimensionalLayoutOn(cast(void*)swigCPtr);
  }

  public void ThreeDimensionalLayoutOff() {
    vtkd_im.vtkGraphLayoutFilter_ThreeDimensionalLayoutOff(cast(void*)swigCPtr);
  }
}
