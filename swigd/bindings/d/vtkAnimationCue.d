/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAnimationCue;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;

class vtkAnimationCue : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAnimationCue_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAnimationCue obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAnimationCue_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAnimationCue SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAnimationCue_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAnimationCue ret = (cPtr is null) ? null : new vtkAnimationCue(cPtr, false);
    return ret;
  }

  public vtkAnimationCue NewInstance() const {
    void* cPtr = vtkd_im.vtkAnimationCue_NewInstance(cast(void*)swigCPtr);
    vtkAnimationCue ret = (cPtr is null) ? null : new vtkAnimationCue(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkAnimationCue New() {
    void* cPtr = vtkd_im.vtkAnimationCue_New();
    vtkAnimationCue ret = (cPtr is null) ? null : new vtkAnimationCue(cPtr, false);
    return ret;
  }

  public void SetTimeMode(int mode) {
    vtkd_im.vtkAnimationCue_SetTimeMode(cast(void*)swigCPtr, mode);
  }

  public int GetTimeMode() {
    auto ret = vtkd_im.vtkAnimationCue_GetTimeMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTimeModeToRelative() {
    vtkd_im.vtkAnimationCue_SetTimeModeToRelative(cast(void*)swigCPtr);
  }

  public void SetTimeModeToNormalized() {
    vtkd_im.vtkAnimationCue_SetTimeModeToNormalized(cast(void*)swigCPtr);
  }

  public void SetStartTime(double _arg) {
    vtkd_im.vtkAnimationCue_SetStartTime(cast(void*)swigCPtr, _arg);
  }

  public double GetStartTime() {
    auto ret = vtkd_im.vtkAnimationCue_GetStartTime(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEndTime(double _arg) {
    vtkd_im.vtkAnimationCue_SetEndTime(cast(void*)swigCPtr, _arg);
  }

  public double GetEndTime() {
    auto ret = vtkd_im.vtkAnimationCue_GetEndTime(cast(void*)swigCPtr);
    return ret;
  }

  public void Tick(double currenttime, double deltatime, double clocktime) {
    vtkd_im.vtkAnimationCue_Tick(cast(void*)swigCPtr, currenttime, deltatime, clocktime);
  }

  public void Initialize() {
    vtkd_im.vtkAnimationCue_Initialize(cast(void*)swigCPtr);
  }

  public void Finalize() {
    vtkd_im.vtkAnimationCue_Finalize(cast(void*)swigCPtr);
  }

  public double GetAnimationTime() {
    auto ret = vtkd_im.vtkAnimationCue_GetAnimationTime(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDeltaTime() {
    auto ret = vtkd_im.vtkAnimationCue_GetDeltaTime(cast(void*)swigCPtr);
    return ret;
  }

  public double GetClockTime() {
    auto ret = vtkd_im.vtkAnimationCue_GetClockTime(cast(void*)swigCPtr);
    return ret;
  }
}
