/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkArrowSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkArrowSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkArrowSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkArrowSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkArrowSource New() {
    void* cPtr = vtkd_im.vtkArrowSource_New();
    vtkArrowSource ret = (cPtr is null) ? null : new vtkArrowSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkArrowSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkArrowSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkArrowSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkArrowSource ret = (cPtr is null) ? null : new vtkArrowSource(cPtr, false);
    return ret;
  }

  public vtkArrowSource NewInstance() const {
    void* cPtr = vtkd_im.vtkArrowSource_NewInstance(cast(void*)swigCPtr);
    vtkArrowSource ret = (cPtr is null) ? null : new vtkArrowSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetTipLength(double _arg) {
    vtkd_im.vtkArrowSource_SetTipLength(cast(void*)swigCPtr, _arg);
  }

  public double GetTipLengthMinValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTipLengthMaxValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTipLength() {
    auto ret = vtkd_im.vtkArrowSource_GetTipLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTipRadius(double _arg) {
    vtkd_im.vtkArrowSource_SetTipRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetTipRadiusMinValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTipRadiusMaxValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTipRadius() {
    auto ret = vtkd_im.vtkArrowSource_GetTipRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTipResolution(int _arg) {
    vtkd_im.vtkArrowSource_SetTipResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetTipResolutionMinValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTipResolutionMaxValue() {
    auto ret = vtkd_im.vtkArrowSource_GetTipResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTipResolution() {
    auto ret = vtkd_im.vtkArrowSource_GetTipResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShaftRadius(double _arg) {
    vtkd_im.vtkArrowSource_SetShaftRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetShaftRadiusMinValue() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetShaftRadiusMaxValue() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetShaftRadius() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShaftResolution(int _arg) {
    vtkd_im.vtkArrowSource_SetShaftResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetShaftResolutionMinValue() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShaftResolutionMaxValue() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShaftResolution() {
    auto ret = vtkd_im.vtkArrowSource_GetShaftResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void InvertOn() {
    vtkd_im.vtkArrowSource_InvertOn(cast(void*)swigCPtr);
  }

  public void InvertOff() {
    vtkd_im.vtkArrowSource_InvertOff(cast(void*)swigCPtr);
  }

  public void SetInvert(bool _arg) {
    vtkd_im.vtkArrowSource_SetInvert(cast(void*)swigCPtr, _arg);
  }

  public bool GetInvert() {
    bool ret = vtkd_im.vtkArrowSource_GetInvert(cast(void*)swigCPtr) ? true : false;
    return ret;
  }
}
