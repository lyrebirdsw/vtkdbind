/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkHierarchicalGraphView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataRepresentation;
static import vtkAlgorithmOutput;
static import vtkDataObject;
static import vtkGraphLayoutView;

class vtkHierarchicalGraphView : vtkGraphLayoutView.vtkGraphLayoutView {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkHierarchicalGraphView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkHierarchicalGraphView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkHierarchicalGraphView New() {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_New();
    vtkHierarchicalGraphView ret = (cPtr is null) ? null : new vtkHierarchicalGraphView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkHierarchicalGraphView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkHierarchicalGraphView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkHierarchicalGraphView ret = (cPtr is null) ? null : new vtkHierarchicalGraphView(cPtr, false);
    return ret;
  }

  public vtkHierarchicalGraphView NewInstance() const {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_NewInstance(cast(void*)swigCPtr);
    vtkHierarchicalGraphView ret = (cPtr is null) ? null : new vtkHierarchicalGraphView(cPtr, false);
    return ret;
  }

  alias vtkGraphLayoutView.vtkGraphLayoutView.NewInstance NewInstance;

  public vtkDataRepresentation.vtkDataRepresentation SetHierarchyFromInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_SetHierarchyFromInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation SetHierarchyFromInput(vtkDataObject.vtkDataObject input) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_SetHierarchyFromInput(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(input));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation SetGraphFromInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput conn) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_SetGraphFromInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(conn));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public vtkDataRepresentation.vtkDataRepresentation SetGraphFromInput(vtkDataObject.vtkDataObject input) {
    void* cPtr = vtkd_im.vtkHierarchicalGraphView_SetGraphFromInput(cast(void*)swigCPtr, vtkDataObject.vtkDataObject.swigGetCPtr(input));
    vtkDataRepresentation.vtkDataRepresentation ret = (cPtr is null) ? null : new vtkDataRepresentation.vtkDataRepresentation(cPtr, false);
    return ret;
  }

  public void SetGraphEdgeLabelArrayName(string name) {
    vtkd_im.vtkHierarchicalGraphView_SetGraphEdgeLabelArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetGraphEdgeLabelArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHierarchicalGraphView_GetGraphEdgeLabelArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetGraphEdgeLabelVisibility(bool vis) {
    vtkd_im.vtkHierarchicalGraphView_SetGraphEdgeLabelVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetGraphEdgeLabelVisibility() {
    bool ret = vtkd_im.vtkHierarchicalGraphView_GetGraphEdgeLabelVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GraphEdgeLabelVisibilityOn() {
    vtkd_im.vtkHierarchicalGraphView_GraphEdgeLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void GraphEdgeLabelVisibilityOff() {
    vtkd_im.vtkHierarchicalGraphView_GraphEdgeLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetGraphEdgeColorArrayName(string name) {
    vtkd_im.vtkHierarchicalGraphView_SetGraphEdgeColorArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetGraphEdgeColorArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHierarchicalGraphView_GetGraphEdgeColorArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetGraphEdgeColorToSplineFraction() {
    vtkd_im.vtkHierarchicalGraphView_SetGraphEdgeColorToSplineFraction(cast(void*)swigCPtr);
  }

  public void SetColorGraphEdgesByArray(bool vis) {
    vtkd_im.vtkHierarchicalGraphView_SetColorGraphEdgesByArray(cast(void*)swigCPtr, vis);
  }

  public bool GetColorGraphEdgesByArray() {
    bool ret = vtkd_im.vtkHierarchicalGraphView_GetColorGraphEdgesByArray(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ColorGraphEdgesByArrayOn() {
    vtkd_im.vtkHierarchicalGraphView_ColorGraphEdgesByArrayOn(cast(void*)swigCPtr);
  }

  public void ColorGraphEdgesByArrayOff() {
    vtkd_im.vtkHierarchicalGraphView_ColorGraphEdgesByArrayOff(cast(void*)swigCPtr);
  }

  public void SetBundlingStrength(double strength) {
    vtkd_im.vtkHierarchicalGraphView_SetBundlingStrength(cast(void*)swigCPtr, strength);
  }

  public double GetBundlingStrength() {
    auto ret = vtkd_im.vtkHierarchicalGraphView_GetBundlingStrength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGraphVisibility(bool b) {
    vtkd_im.vtkHierarchicalGraphView_SetGraphVisibility(cast(void*)swigCPtr, b);
  }

  public bool GetGraphVisibility() {
    bool ret = vtkd_im.vtkHierarchicalGraphView_GetGraphVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GraphVisibilityOn() {
    vtkd_im.vtkHierarchicalGraphView_GraphVisibilityOn(cast(void*)swigCPtr);
  }

  public void GraphVisibilityOff() {
    vtkd_im.vtkHierarchicalGraphView_GraphVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetGraphEdgeLabelFontSize(int size) {
    vtkd_im.vtkHierarchicalGraphView_SetGraphEdgeLabelFontSize(cast(void*)swigCPtr, size);
  }

  public int GetGraphEdgeLabelFontSize() {
    auto ret = vtkd_im.vtkHierarchicalGraphView_GetGraphEdgeLabelFontSize(cast(void*)swigCPtr);
    return ret;
  }
}
