/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRectilinearGridToTetrahedra;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkUnstructuredGridAlgorithm;

class vtkRectilinearGridToTetrahedra : vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRectilinearGridToTetrahedra_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRectilinearGridToTetrahedra obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRectilinearGridToTetrahedra_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRectilinearGridToTetrahedra SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRectilinearGridToTetrahedra_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRectilinearGridToTetrahedra ret = (cPtr is null) ? null : new vtkRectilinearGridToTetrahedra(cPtr, false);
    return ret;
  }

  public vtkRectilinearGridToTetrahedra NewInstance() const {
    void* cPtr = vtkd_im.vtkRectilinearGridToTetrahedra_NewInstance(cast(void*)swigCPtr);
    vtkRectilinearGridToTetrahedra ret = (cPtr is null) ? null : new vtkRectilinearGridToTetrahedra(cPtr, false);
    return ret;
  }

  alias vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm.NewInstance NewInstance;

  public static vtkRectilinearGridToTetrahedra New() {
    void* cPtr = vtkd_im.vtkRectilinearGridToTetrahedra_New();
    vtkRectilinearGridToTetrahedra ret = (cPtr is null) ? null : new vtkRectilinearGridToTetrahedra(cPtr, false);
    return ret;
  }

  public void SetTetraPerCellTo5() {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetTetraPerCellTo5(cast(void*)swigCPtr);
  }

  public void SetTetraPerCellTo6() {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetTetraPerCellTo6(cast(void*)swigCPtr);
  }

  public void SetTetraPerCellTo12() {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetTetraPerCellTo12(cast(void*)swigCPtr);
  }

  public void SetTetraPerCellTo5And12() {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetTetraPerCellTo5And12(cast(void*)swigCPtr);
  }

  public void SetTetraPerCell(int _arg) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetTetraPerCell(cast(void*)swigCPtr, _arg);
  }

  public int GetTetraPerCell() {
    auto ret = vtkd_im.vtkRectilinearGridToTetrahedra_GetTetraPerCell(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRememberVoxelId(int _arg) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetRememberVoxelId(cast(void*)swigCPtr, _arg);
  }

  public int GetRememberVoxelId() {
    auto ret = vtkd_im.vtkRectilinearGridToTetrahedra_GetRememberVoxelId(cast(void*)swigCPtr);
    return ret;
  }

  public void RememberVoxelIdOn() {
    vtkd_im.vtkRectilinearGridToTetrahedra_RememberVoxelIdOn(cast(void*)swigCPtr);
  }

  public void RememberVoxelIdOff() {
    vtkd_im.vtkRectilinearGridToTetrahedra_RememberVoxelIdOff(cast(void*)swigCPtr);
  }

  public void SetInput(SWIGTYPE_p_double.SWIGTYPE_p_double Extent, SWIGTYPE_p_double.SWIGTYPE_p_double Spacing, double tol) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetInput__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(Extent), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(Spacing), tol);
  }

  public void SetInput(SWIGTYPE_p_double.SWIGTYPE_p_double Extent, SWIGTYPE_p_double.SWIGTYPE_p_double Spacing) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetInput__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(Extent), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(Spacing));
  }

  public void SetInput(double ExtentX, double ExtentY, double ExtentZ, double SpacingX, double SpacingY, double SpacingZ, double tol) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetInput__SWIG_2(cast(void*)swigCPtr, ExtentX, ExtentY, ExtentZ, SpacingX, SpacingY, SpacingZ, tol);
  }

  public void SetInput(double ExtentX, double ExtentY, double ExtentZ, double SpacingX, double SpacingY, double SpacingZ) {
    vtkd_im.vtkRectilinearGridToTetrahedra_SetInput__SWIG_3(cast(void*)swigCPtr, ExtentX, ExtentY, ExtentZ, SpacingX, SpacingY, SpacingZ);
  }
}
