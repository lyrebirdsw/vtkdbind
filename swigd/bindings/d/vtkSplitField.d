/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSplitField;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSetAlgorithm;

class vtkSplitField : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSplitField_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSplitField obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSplitField_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSplitField SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSplitField_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSplitField ret = (cPtr is null) ? null : new vtkSplitField(cPtr, false);
    return ret;
  }

  public vtkSplitField NewInstance() const {
    void* cPtr = vtkd_im.vtkSplitField_NewInstance(cast(void*)swigCPtr);
    vtkSplitField ret = (cPtr is null) ? null : new vtkSplitField(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public static vtkSplitField New() {
    void* cPtr = vtkd_im.vtkSplitField_New();
    vtkSplitField ret = (cPtr is null) ? null : new vtkSplitField(cPtr, false);
    return ret;
  }

  public void SetInputField(int attributeType, int fieldLoc) {
    vtkd_im.vtkSplitField_SetInputField__SWIG_0(cast(void*)swigCPtr, attributeType, fieldLoc);
  }

  public void SetInputField(string name, int fieldLoc) {
    vtkd_im.vtkSplitField_SetInputField__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), fieldLoc);
  }

  public void SetInputField(string name, string fieldLoc) {
    vtkd_im.vtkSplitField_SetInputField__SWIG_2(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), (fieldLoc ? std.string.toStringz(fieldLoc) : null));
  }

  public void Split(int component, string arrayName) {
    vtkd_im.vtkSplitField_Split(cast(void*)swigCPtr, component, (arrayName ? std.string.toStringz(arrayName) : null));
  }
}
