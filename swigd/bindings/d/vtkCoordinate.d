/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCoordinate;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkViewport;
static import vtkObject;

class vtkCoordinate : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCoordinate_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCoordinate obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCoordinate_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCoordinate SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCoordinate_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate(cPtr, false);
    return ret;
  }

  public vtkCoordinate NewInstance() const {
    void* cPtr = vtkd_im.vtkCoordinate_NewInstance(cast(void*)swigCPtr);
    vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkCoordinate New() {
    void* cPtr = vtkd_im.vtkCoordinate_New();
    vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetCoordinateSystem(int _arg) {
    vtkd_im.vtkCoordinate_SetCoordinateSystem(cast(void*)swigCPtr, _arg);
  }

  public int GetCoordinateSystem() {
    auto ret = vtkd_im.vtkCoordinate_GetCoordinateSystem(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCoordinateSystemToDisplay() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToDisplay(cast(void*)swigCPtr);
  }

  public void SetCoordinateSystemToNormalizedDisplay() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToNormalizedDisplay(cast(void*)swigCPtr);
  }

  public void SetCoordinateSystemToViewport() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToViewport(cast(void*)swigCPtr);
  }

  public void SetCoordinateSystemToNormalizedViewport() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToNormalizedViewport(cast(void*)swigCPtr);
  }

  public void SetCoordinateSystemToView() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToView(cast(void*)swigCPtr);
  }

  public void SetCoordinateSystemToWorld() {
    vtkd_im.vtkCoordinate_SetCoordinateSystemToWorld(cast(void*)swigCPtr);
  }

  public string GetCoordinateSystemAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkCoordinate_GetCoordinateSystemAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetValue(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCoordinate_SetValue__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetValue(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCoordinate_SetValue__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetValue() {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetValue__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetValue(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCoordinate_GetValue__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetValue(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCoordinate_GetValue__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetValue(double a, double b) {
    vtkd_im.vtkCoordinate_SetValue__SWIG_2(cast(void*)swigCPtr, a, b);
  }

  public void SetReferenceCoordinate(vtkCoordinate arg0) {
    vtkd_im.vtkCoordinate_SetReferenceCoordinate(cast(void*)swigCPtr, vtkCoordinate.swigGetCPtr(arg0));
  }

  public vtkCoordinate GetReferenceCoordinate() {
    void* cPtr = vtkd_im.vtkCoordinate_GetReferenceCoordinate(cast(void*)swigCPtr);
    vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetViewport(vtkViewport.vtkViewport viewport) {
    vtkd_im.vtkCoordinate_SetViewport(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
  }

  public vtkViewport.vtkViewport GetViewport() {
    void* cPtr = vtkd_im.vtkCoordinate_GetViewport(cast(void*)swigCPtr);
    vtkViewport.vtkViewport ret = (cPtr is null) ? null : new vtkViewport.vtkViewport(cPtr, false);
    return ret;
  }

  public double* GetComputedWorldValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetComputedWorldValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int* GetComputedViewportValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(int*)vtkd_im.vtkCoordinate_GetComputedViewportValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int* GetComputedDisplayValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(int*)vtkd_im.vtkCoordinate_GetComputedDisplayValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int* GetComputedLocalDisplayValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(int*)vtkd_im.vtkCoordinate_GetComputedLocalDisplayValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public double* GetComputedDoubleViewportValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetComputedDoubleViewportValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public double* GetComputedDoubleDisplayValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetComputedDoubleDisplayValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public double* GetComputedValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetComputedValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public double* GetComputedUserDefinedValue(vtkViewport.vtkViewport arg0) {
    auto ret = cast(double*)vtkd_im.vtkCoordinate_GetComputedUserDefinedValue(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }
}
