/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkUniformGrid;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCell;
static import vtkGenericCell;
static import SWIGTYPE_p_double;
static import vtkUnsignedCharArray;
static import vtkImageData;

class vtkUniformGrid : vtkImageData.vtkImageData {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkUniformGrid_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkUniformGrid obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkUniformGrid New() {
    void* cPtr = vtkd_im.vtkUniformGrid_New();
    vtkUniformGrid ret = (cPtr is null) ? null : new vtkUniformGrid(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkUniformGrid_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkUniformGrid SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkUniformGrid_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkUniformGrid ret = (cPtr is null) ? null : new vtkUniformGrid(cPtr, false);
    return ret;
  }

  public vtkUniformGrid NewInstance() const {
    void* cPtr = vtkd_im.vtkUniformGrid_NewInstance(cast(void*)swigCPtr);
    vtkUniformGrid ret = (cPtr is null) ? null : new vtkUniformGrid(cPtr, false);
    return ret;
  }

  alias vtkImageData.vtkImageData.NewInstance NewInstance;

  public override vtkCell.vtkCell GetCell(long cellId) {
    void* cPtr = vtkd_im.vtkUniformGrid_GetCell__SWIG_0(cast(void*)swigCPtr, cellId);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }

  public override void GetCell(long cellId, vtkGenericCell.vtkGenericCell cell) {
    vtkd_im.vtkUniformGrid_GetCell__SWIG_1(cast(void*)swigCPtr, cellId, vtkGenericCell.vtkGenericCell.swigGetCPtr(cell));
  }

  public override long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkUniformGrid_FindCell__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public override long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, vtkGenericCell.vtkGenericCell gencell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkUniformGrid_FindCell__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), vtkGenericCell.vtkGenericCell.swigGetCPtr(gencell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetGridDescription() {
    auto ret = vtkd_im.vtkUniformGrid_GetGridDescription(cast(void*)swigCPtr);
    return ret;
  }

  public void BlankPoint(long ptId) {
    vtkd_im.vtkUniformGrid_BlankPoint__SWIG_0(cast(void*)swigCPtr, ptId);
  }

  public void UnBlankPoint(long ptId) {
    vtkd_im.vtkUniformGrid_UnBlankPoint__SWIG_0(cast(void*)swigCPtr, ptId);
  }

  public void BlankPoint(int i, int j, int k) {
    vtkd_im.vtkUniformGrid_BlankPoint__SWIG_1(cast(void*)swigCPtr, i, j, k);
  }

  public void UnBlankPoint(int i, int j, int k) {
    vtkd_im.vtkUniformGrid_UnBlankPoint__SWIG_1(cast(void*)swigCPtr, i, j, k);
  }

  public void BlankCell(long ptId) {
    vtkd_im.vtkUniformGrid_BlankCell__SWIG_0(cast(void*)swigCPtr, ptId);
  }

  public void UnBlankCell(long ptId) {
    vtkd_im.vtkUniformGrid_UnBlankCell__SWIG_0(cast(void*)swigCPtr, ptId);
  }

  public void BlankCell(int i, int j, int k) {
    vtkd_im.vtkUniformGrid_BlankCell__SWIG_1(cast(void*)swigCPtr, i, j, k);
  }

  public void UnBlankCell(int i, int j, int k) {
    vtkd_im.vtkUniformGrid_UnBlankCell__SWIG_1(cast(void*)swigCPtr, i, j, k);
  }

  public vtkUnsignedCharArray.vtkUnsignedCharArray GetPointVisibilityArray() {
    void* cPtr = vtkd_im.vtkUniformGrid_GetPointVisibilityArray(cast(void*)swigCPtr);
    vtkUnsignedCharArray.vtkUnsignedCharArray ret = (cPtr is null) ? null : new vtkUnsignedCharArray.vtkUnsignedCharArray(cPtr, false);
    return ret;
  }

  public void SetPointVisibilityArray(vtkUnsignedCharArray.vtkUnsignedCharArray pointVisibility) {
    vtkd_im.vtkUniformGrid_SetPointVisibilityArray(cast(void*)swigCPtr, vtkUnsignedCharArray.vtkUnsignedCharArray.swigGetCPtr(pointVisibility));
  }

  public vtkUnsignedCharArray.vtkUnsignedCharArray GetCellVisibilityArray() {
    void* cPtr = vtkd_im.vtkUniformGrid_GetCellVisibilityArray(cast(void*)swigCPtr);
    vtkUnsignedCharArray.vtkUnsignedCharArray ret = (cPtr is null) ? null : new vtkUnsignedCharArray.vtkUnsignedCharArray(cPtr, false);
    return ret;
  }

  public void SetCellVisibilityArray(vtkUnsignedCharArray.vtkUnsignedCharArray pointVisibility) {
    vtkd_im.vtkUniformGrid_SetCellVisibilityArray(cast(void*)swigCPtr, vtkUnsignedCharArray.vtkUnsignedCharArray.swigGetCPtr(pointVisibility));
  }

  public void AttachCellVisibilityToCellData() {
    vtkd_im.vtkUniformGrid_AttachCellVisibilityToCellData(cast(void*)swigCPtr);
  }

  public void AttachPointVisibilityToPointData() {
    vtkd_im.vtkUniformGrid_AttachPointVisibilityToPointData(cast(void*)swigCPtr);
  }

  public ubyte IsPointVisible(long ptId) {
    auto ret = vtkd_im.vtkUniformGrid_IsPointVisible(cast(void*)swigCPtr, ptId);
    return ret;
  }

  public ubyte IsCellVisible(long cellId) {
    auto ret = vtkd_im.vtkUniformGrid_IsCellVisible(cast(void*)swigCPtr, cellId);
    return ret;
  }

  public ubyte GetPointBlanking() {
    auto ret = vtkd_im.vtkUniformGrid_GetPointBlanking(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte GetCellBlanking() {
    auto ret = vtkd_im.vtkUniformGrid_GetCellBlanking(cast(void*)swigCPtr);
    return ret;
  }

  public vtkImageData.vtkImageData NewImageDataCopy() {
    void* cPtr = vtkd_im.vtkUniformGrid_NewImageDataCopy(cast(void*)swigCPtr);
    vtkImageData.vtkImageData ret = (cPtr is null) ? null : new vtkImageData.vtkImageData(cPtr, false);
    return ret;
  }
}
