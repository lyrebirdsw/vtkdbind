/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericEdgeTable;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkObject;

class vtkGenericEdgeTable : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericEdgeTable_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericEdgeTable obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGenericEdgeTable New() {
    void* cPtr = vtkd_im.vtkGenericEdgeTable_New();
    vtkGenericEdgeTable ret = (cPtr is null) ? null : new vtkGenericEdgeTable(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericEdgeTable_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericEdgeTable SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericEdgeTable_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericEdgeTable ret = (cPtr is null) ? null : new vtkGenericEdgeTable(cPtr, false);
    return ret;
  }

  public vtkGenericEdgeTable NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericEdgeTable_NewInstance(cast(void*)swigCPtr);
    vtkGenericEdgeTable ret = (cPtr is null) ? null : new vtkGenericEdgeTable(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void InsertEdge(long e1, long e2, long cellId, int arg3, long* ptId) {
    vtkd_im.vtkGenericEdgeTable_InsertEdge__SWIG_0(cast(void*)swigCPtr, e1, e2, cellId, arg3, cast(void*)ptId);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void InsertEdge(long e1, long e2, long cellId, int arg3) {
    vtkd_im.vtkGenericEdgeTable_InsertEdge__SWIG_1(cast(void*)swigCPtr, e1, e2, cellId, arg3);
  }

  public void InsertEdge(long e1, long e2, long cellId) {
    vtkd_im.vtkGenericEdgeTable_InsertEdge__SWIG_2(cast(void*)swigCPtr, e1, e2, cellId);
  }

  public int RemoveEdge(long e1, long e2) {
    auto ret = vtkd_im.vtkGenericEdgeTable_RemoveEdge(cast(void*)swigCPtr, e1, e2);
    return ret;
  }

  public int CheckEdge(long e1, long e2, long* ptId) {
    auto ret = vtkd_im.vtkGenericEdgeTable_CheckEdge(cast(void*)swigCPtr, e1, e2, cast(void*)ptId);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int IncrementEdgeReferenceCount(long e1, long e2, long cellId) {
    auto ret = vtkd_im.vtkGenericEdgeTable_IncrementEdgeReferenceCount(cast(void*)swigCPtr, e1, e2, cellId);
    return ret;
  }

  public int CheckEdgeReferenceCount(long e1, long e2) {
    auto ret = vtkd_im.vtkGenericEdgeTable_CheckEdgeReferenceCount(cast(void*)swigCPtr, e1, e2);
    return ret;
  }

  public void Initialize(long start) {
    vtkd_im.vtkGenericEdgeTable_Initialize(cast(void*)swigCPtr, start);
  }

  public int GetNumberOfComponents() {
    auto ret = vtkd_im.vtkGenericEdgeTable_GetNumberOfComponents(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfComponents(int count) {
    vtkd_im.vtkGenericEdgeTable_SetNumberOfComponents(cast(void*)swigCPtr, count);
  }

  public int CheckPoint(long ptId) {
    auto ret = vtkd_im.vtkGenericEdgeTable_CheckPoint__SWIG_0(cast(void*)swigCPtr, ptId);
    return ret;
  }

  public int CheckPoint(long ptId, SWIGTYPE_p_double.SWIGTYPE_p_double point, double* scalar) {
    auto ret = vtkd_im.vtkGenericEdgeTable_CheckPoint__SWIG_1(cast(void*)swigCPtr, ptId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point), cast(void*)scalar);
    return ret;
  }

  public void InsertPoint(long ptId, SWIGTYPE_p_double.SWIGTYPE_p_double point) {
    vtkd_im.vtkGenericEdgeTable_InsertPoint(cast(void*)swigCPtr, ptId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point));
  }

  public void InsertPointAndScalar(long ptId, SWIGTYPE_p_double.SWIGTYPE_p_double pt, double* s) {
    vtkd_im.vtkGenericEdgeTable_InsertPointAndScalar(cast(void*)swigCPtr, ptId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pt), cast(void*)s);
  }

  public void RemovePoint(long ptId) {
    vtkd_im.vtkGenericEdgeTable_RemovePoint(cast(void*)swigCPtr, ptId);
  }

  public void IncrementPointReferenceCount(long ptId) {
    vtkd_im.vtkGenericEdgeTable_IncrementPointReferenceCount(cast(void*)swigCPtr, ptId);
  }

  public void DumpTable() {
    vtkd_im.vtkGenericEdgeTable_DumpTable(cast(void*)swigCPtr);
  }

  public void LoadFactor() {
    vtkd_im.vtkGenericEdgeTable_LoadFactor(cast(void*)swigCPtr);
  }
}
