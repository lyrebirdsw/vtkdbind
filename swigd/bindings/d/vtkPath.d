/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPath;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_float;
static import SWIGTYPE_p_double;
static import vtkIntArray;
static import vtkCell;
static import vtkGenericCell;
static import vtkInformation;
static import vtkInformationVector;
static import vtkPointSet;

class vtkPath : vtkPointSet.vtkPointSet {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPath_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPath obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  enum ControlPointType {
    MOVE_TO = 0,
    LINE_TO,
    CONIC_CURVE,
    CUBIC_CURVE
  }

  public static vtkPath New() {
    void* cPtr = vtkd_im.vtkPath_New();
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPath_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPath SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPath_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }

  public vtkPath NewInstance() const {
    void* cPtr = vtkd_im.vtkPath_NewInstance(cast(void*)swigCPtr);
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }

  alias vtkPointSet.vtkPointSet.NewInstance NewInstance;

  public void InsertNextPoint(SWIGTYPE_p_float.SWIGTYPE_p_float pts, int code) {
    vtkd_im.vtkPath_InsertNextPoint__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(pts), code);
  }

  public void InsertNextPoint(SWIGTYPE_p_double.SWIGTYPE_p_double pts, int code) {
    vtkd_im.vtkPath_InsertNextPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pts), code);
  }

  public void InsertNextPoint(double x, double y, double z, int code) {
    vtkd_im.vtkPath_InsertNextPoint__SWIG_2(cast(void*)swigCPtr, x, y, z, code);
  }

  public void SetCodes(vtkIntArray.vtkIntArray arg0) {
    vtkd_im.vtkPath_SetCodes(cast(void*)swigCPtr, vtkIntArray.vtkIntArray.swigGetCPtr(arg0));
  }

  public vtkIntArray.vtkIntArray GetCodes() {
    void* cPtr = vtkd_im.vtkPath_GetCodes(cast(void*)swigCPtr);
    vtkIntArray.vtkIntArray ret = (cPtr is null) ? null : new vtkIntArray.vtkIntArray(cPtr, false);
    return ret;
  }

  public override vtkCell.vtkCell GetCell(long arg0) {
    void* cPtr = vtkd_im.vtkPath_GetCell__SWIG_0(cast(void*)swigCPtr, arg0);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }

  public override void GetCell(long arg0, vtkGenericCell.vtkGenericCell arg1) {
    vtkd_im.vtkPath_GetCell__SWIG_1(cast(void*)swigCPtr, arg0, vtkGenericCell.vtkGenericCell.swigGetCPtr(arg1));
  }

  public void Allocate(long size, int extSize) {
    vtkd_im.vtkPath_Allocate__SWIG_0(cast(void*)swigCPtr, size, extSize);
  }

  public void Allocate(long size) {
    vtkd_im.vtkPath_Allocate__SWIG_1(cast(void*)swigCPtr, size);
  }

  public void Allocate() {
    vtkd_im.vtkPath_Allocate__SWIG_2(cast(void*)swigCPtr);
  }

  public void Reset() {
    vtkd_im.vtkPath_Reset(cast(void*)swigCPtr);
  }

  public static vtkPath GetData(vtkInformation.vtkInformation info) {
    void* cPtr = vtkd_im.vtkPath_GetData__SWIG_0(vtkInformation.vtkInformation.swigGetCPtr(info));
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }

  public static vtkPath GetData(vtkInformationVector.vtkInformationVector v, int i) {
    void* cPtr = vtkd_im.vtkPath_GetData__SWIG_1(vtkInformationVector.vtkInformationVector.swigGetCPtr(v), i);
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }

  public static vtkPath GetData(vtkInformationVector.vtkInformationVector v) {
    void* cPtr = vtkd_im.vtkPath_GetData__SWIG_2(vtkInformationVector.vtkInformationVector.swigGetCPtr(v));
    vtkPath ret = (cPtr is null) ? null : new vtkPath(cPtr, false);
    return ret;
  }
}
