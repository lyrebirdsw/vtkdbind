/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_int;
static import vtkPointPlacer;
static import vtkContourLineInterpolator;
static import vtkPolyData;
static import vtkWidgetRepresentation;

class vtkContourRepresentation : vtkWidgetRepresentation.vtkWidgetRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContourRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContourRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContourRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContourRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContourRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContourRepresentation ret = (cPtr is null) ? null : new vtkContourRepresentation(cPtr, false);
    return ret;
  }

  public vtkContourRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkContourRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkContourRepresentation ret = (cPtr is null) ? null : new vtkContourRepresentation(cPtr, false);
    return ret;
  }

  alias vtkWidgetRepresentation.vtkWidgetRepresentation.NewInstance NewInstance;

  public int AddNodeAtWorldPosition(double x, double y, double z) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtWorldPosition__SWIG_0(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  public int AddNodeAtWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double worldPos) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtWorldPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos));
    return ret;
  }

  public int AddNodeAtWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double worldPos, SWIGTYPE_p_double.SWIGTYPE_p_double worldOrient) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtWorldPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldPos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(worldOrient));
    return ret;
  }

  public int AddNodeAtDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double displayPos) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtDisplayPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(displayPos));
    return ret;
  }

  public int AddNodeAtDisplayPosition(SWIGTYPE_p_int.SWIGTYPE_p_int displayPos) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtDisplayPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(displayPos));
    return ret;
  }

  public int AddNodeAtDisplayPosition(int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeAtDisplayPosition__SWIG_2(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public int ActivateNode(SWIGTYPE_p_double.SWIGTYPE_p_double displayPos) {
    auto ret = vtkd_im.vtkContourRepresentation_ActivateNode__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(displayPos));
    return ret;
  }

  public int ActivateNode(SWIGTYPE_p_int.SWIGTYPE_p_int displayPos) {
    auto ret = vtkd_im.vtkContourRepresentation_ActivateNode__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(displayPos));
    return ret;
  }

  public int ActivateNode(int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_ActivateNode__SWIG_2(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public int SetActiveNodeToWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetActiveNodeToWorldPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int SetActiveNodeToWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos, SWIGTYPE_p_double.SWIGTYPE_p_double orient) {
    auto ret = vtkd_im.vtkContourRepresentation_SetActiveNodeToWorldPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(orient));
    return ret;
  }

  public int SetActiveNodeToDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetActiveNodeToDisplayPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int SetActiveNodeToDisplayPosition(SWIGTYPE_p_int.SWIGTYPE_p_int pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetActiveNodeToDisplayPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(pos));
    return ret;
  }

  public int SetActiveNodeToDisplayPosition(int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_SetActiveNodeToDisplayPosition__SWIG_2(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public int ToggleActiveNodeSelected() {
    auto ret = vtkd_im.vtkContourRepresentation_ToggleActiveNodeSelected(cast(void*)swigCPtr);
    return ret;
  }

  public int GetActiveNodeSelected() {
    auto ret = vtkd_im.vtkContourRepresentation_GetActiveNodeSelected(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNthNodeSelected(int arg0) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNthNodeSelected(cast(void*)swigCPtr, arg0);
    return ret;
  }

  public int SetNthNodeSelected(int arg0) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeSelected(cast(void*)swigCPtr, arg0);
    return ret;
  }

  public int GetActiveNodeWorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_GetActiveNodeWorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int GetActiveNodeWorldOrientation(SWIGTYPE_p_double.SWIGTYPE_p_double orient) {
    auto ret = vtkd_im.vtkContourRepresentation_GetActiveNodeWorldOrientation(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(orient));
    return ret;
  }

  public int GetActiveNodeDisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_GetActiveNodeDisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int GetNumberOfNodes() {
    auto ret = vtkd_im.vtkContourRepresentation_GetNumberOfNodes(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNthNodeDisplayPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNthNodeDisplayPosition(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int GetNthNodeWorldPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNthNodeWorldPosition(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int GetNthNodeWorldOrientation(int n, SWIGTYPE_p_double.SWIGTYPE_p_double orient) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNthNodeWorldOrientation(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(orient));
    return ret;
  }

  public int SetNthNodeDisplayPosition(int n, int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeDisplayPosition__SWIG_0(cast(void*)swigCPtr, n, X, Y);
    return ret;
  }

  public int SetNthNodeDisplayPosition(int n, SWIGTYPE_p_int.SWIGTYPE_p_int pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeDisplayPosition__SWIG_1(cast(void*)swigCPtr, n, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(pos));
    return ret;
  }

  public int SetNthNodeDisplayPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeDisplayPosition__SWIG_2(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int SetNthNodeWorldPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeWorldPosition__SWIG_0(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
    return ret;
  }

  public int SetNthNodeWorldPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double pos, SWIGTYPE_p_double.SWIGTYPE_p_double orient) {
    auto ret = vtkd_im.vtkContourRepresentation_SetNthNodeWorldPosition__SWIG_1(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(orient));
    return ret;
  }

  public int GetNthNodeSlope(int idx, SWIGTYPE_p_double.SWIGTYPE_p_double slope) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNthNodeSlope(cast(void*)swigCPtr, idx, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(slope));
    return ret;
  }

  public int GetNumberOfIntermediatePoints(int n) {
    auto ret = vtkd_im.vtkContourRepresentation_GetNumberOfIntermediatePoints(cast(void*)swigCPtr, n);
    return ret;
  }

  public int GetIntermediatePointWorldPosition(int n, int idx, SWIGTYPE_p_double.SWIGTYPE_p_double point) {
    auto ret = vtkd_im.vtkContourRepresentation_GetIntermediatePointWorldPosition(cast(void*)swigCPtr, n, idx, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point));
    return ret;
  }

  public int AddIntermediatePointWorldPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double point) {
    auto ret = vtkd_im.vtkContourRepresentation_AddIntermediatePointWorldPosition__SWIG_0(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point));
    return ret;
  }

  public int AddIntermediatePointWorldPosition(int n, SWIGTYPE_p_double.SWIGTYPE_p_double point, long ptId) {
    auto ret = vtkd_im.vtkContourRepresentation_AddIntermediatePointWorldPosition__SWIG_1(cast(void*)swigCPtr, n, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(point), ptId);
    return ret;
  }

  public int DeleteLastNode() {
    auto ret = vtkd_im.vtkContourRepresentation_DeleteLastNode(cast(void*)swigCPtr);
    return ret;
  }

  public int DeleteActiveNode() {
    auto ret = vtkd_im.vtkContourRepresentation_DeleteActiveNode(cast(void*)swigCPtr);
    return ret;
  }

  public int DeleteNthNode(int n) {
    auto ret = vtkd_im.vtkContourRepresentation_DeleteNthNode(cast(void*)swigCPtr, n);
    return ret;
  }

  public void ClearAllNodes() {
    vtkd_im.vtkContourRepresentation_ClearAllNodes(cast(void*)swigCPtr);
  }

  public int AddNodeOnContour(int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_AddNodeOnContour(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void SetPixelTolerance(int _arg) {
    vtkd_im.vtkContourRepresentation_SetPixelTolerance(cast(void*)swigCPtr, _arg);
  }

  public int GetPixelToleranceMinValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetPixelToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPixelToleranceMaxValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetPixelToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPixelTolerance() {
    auto ret = vtkd_im.vtkContourRepresentation_GetPixelTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetWorldTolerance(double _arg) {
    vtkd_im.vtkContourRepresentation_SetWorldTolerance(cast(void*)swigCPtr, _arg);
  }

  public double GetWorldToleranceMinValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetWorldToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetWorldToleranceMaxValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetWorldToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetWorldTolerance() {
    auto ret = vtkd_im.vtkContourRepresentation_GetWorldTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCurrentOperation() {
    auto ret = vtkd_im.vtkContourRepresentation_GetCurrentOperation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCurrentOperation(int _arg) {
    vtkd_im.vtkContourRepresentation_SetCurrentOperation(cast(void*)swigCPtr, _arg);
  }

  public int GetCurrentOperationMinValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetCurrentOperationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCurrentOperationMaxValue() {
    auto ret = vtkd_im.vtkContourRepresentation_GetCurrentOperationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCurrentOperationToInactive() {
    vtkd_im.vtkContourRepresentation_SetCurrentOperationToInactive(cast(void*)swigCPtr);
  }

  public void SetCurrentOperationToTranslate() {
    vtkd_im.vtkContourRepresentation_SetCurrentOperationToTranslate(cast(void*)swigCPtr);
  }

  public void SetCurrentOperationToShift() {
    vtkd_im.vtkContourRepresentation_SetCurrentOperationToShift(cast(void*)swigCPtr);
  }

  public void SetCurrentOperationToScale() {
    vtkd_im.vtkContourRepresentation_SetCurrentOperationToScale(cast(void*)swigCPtr);
  }

  public void SetPointPlacer(vtkPointPlacer.vtkPointPlacer arg0) {
    vtkd_im.vtkContourRepresentation_SetPointPlacer(cast(void*)swigCPtr, vtkPointPlacer.vtkPointPlacer.swigGetCPtr(arg0));
  }

  public vtkPointPlacer.vtkPointPlacer GetPointPlacer() {
    void* cPtr = vtkd_im.vtkContourRepresentation_GetPointPlacer(cast(void*)swigCPtr);
    vtkPointPlacer.vtkPointPlacer ret = (cPtr is null) ? null : new vtkPointPlacer.vtkPointPlacer(cPtr, false);
    return ret;
  }

  public void SetLineInterpolator(vtkContourLineInterpolator.vtkContourLineInterpolator arg0) {
    vtkd_im.vtkContourRepresentation_SetLineInterpolator(cast(void*)swigCPtr, vtkContourLineInterpolator.vtkContourLineInterpolator.swigGetCPtr(arg0));
  }

  public vtkContourLineInterpolator.vtkContourLineInterpolator GetLineInterpolator() {
    void* cPtr = vtkd_im.vtkContourRepresentation_GetLineInterpolator(cast(void*)swigCPtr);
    vtkContourLineInterpolator.vtkContourLineInterpolator ret = (cPtr is null) ? null : new vtkContourLineInterpolator.vtkContourLineInterpolator(cPtr, false);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modified) {
    auto ret = vtkd_im.vtkContourRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modified);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkContourRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void SetClosedLoop(int val) {
    vtkd_im.vtkContourRepresentation_SetClosedLoop(cast(void*)swigCPtr, val);
  }

  public int GetClosedLoop() {
    auto ret = vtkd_im.vtkContourRepresentation_GetClosedLoop(cast(void*)swigCPtr);
    return ret;
  }

  public void ClosedLoopOn() {
    vtkd_im.vtkContourRepresentation_ClosedLoopOn(cast(void*)swigCPtr);
  }

  public void ClosedLoopOff() {
    vtkd_im.vtkContourRepresentation_ClosedLoopOff(cast(void*)swigCPtr);
  }

  public void SetShowSelectedNodes(int arg0) {
    vtkd_im.vtkContourRepresentation_SetShowSelectedNodes(cast(void*)swigCPtr, arg0);
  }

  public int GetShowSelectedNodes() {
    auto ret = vtkd_im.vtkContourRepresentation_GetShowSelectedNodes(cast(void*)swigCPtr);
    return ret;
  }

  public void ShowSelectedNodesOn() {
    vtkd_im.vtkContourRepresentation_ShowSelectedNodesOn(cast(void*)swigCPtr);
  }

  public void ShowSelectedNodesOff() {
    vtkd_im.vtkContourRepresentation_ShowSelectedNodesOff(cast(void*)swigCPtr);
  }

  public void GetNodePolyData(vtkPolyData.vtkPolyData poly) {
    vtkd_im.vtkContourRepresentation_GetNodePolyData(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(poly));
  }

  public void SetRebuildLocator(bool _arg) {
    vtkd_im.vtkContourRepresentation_SetRebuildLocator(cast(void*)swigCPtr, _arg);
  }
}
