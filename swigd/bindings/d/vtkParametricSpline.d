/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkParametricSpline;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkSpline;
static import vtkPoints;
static import vtkParametricFunction;

class vtkParametricSpline : vtkParametricFunction.vtkParametricFunction {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkParametricSpline_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkParametricSpline obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkParametricSpline_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkParametricSpline SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkParametricSpline_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkParametricSpline ret = (cPtr is null) ? null : new vtkParametricSpline(cPtr, false);
    return ret;
  }

  public vtkParametricSpline NewInstance() const {
    void* cPtr = vtkd_im.vtkParametricSpline_NewInstance(cast(void*)swigCPtr);
    vtkParametricSpline ret = (cPtr is null) ? null : new vtkParametricSpline(cPtr, false);
    return ret;
  }

  alias vtkParametricFunction.vtkParametricFunction.NewInstance NewInstance;

  public static vtkParametricSpline New() {
    void* cPtr = vtkd_im.vtkParametricSpline_New();
    vtkParametricSpline ret = (cPtr is null) ? null : new vtkParametricSpline(cPtr, false);
    return ret;
  }

  public void SetXSpline(vtkSpline.vtkSpline arg0) {
    vtkd_im.vtkParametricSpline_SetXSpline(cast(void*)swigCPtr, vtkSpline.vtkSpline.swigGetCPtr(arg0));
  }

  public void SetYSpline(vtkSpline.vtkSpline arg0) {
    vtkd_im.vtkParametricSpline_SetYSpline(cast(void*)swigCPtr, vtkSpline.vtkSpline.swigGetCPtr(arg0));
  }

  public void SetZSpline(vtkSpline.vtkSpline arg0) {
    vtkd_im.vtkParametricSpline_SetZSpline(cast(void*)swigCPtr, vtkSpline.vtkSpline.swigGetCPtr(arg0));
  }

  public vtkSpline.vtkSpline GetXSpline() {
    void* cPtr = vtkd_im.vtkParametricSpline_GetXSpline(cast(void*)swigCPtr);
    vtkSpline.vtkSpline ret = (cPtr is null) ? null : new vtkSpline.vtkSpline(cPtr, false);
    return ret;
  }

  public vtkSpline.vtkSpline GetYSpline() {
    void* cPtr = vtkd_im.vtkParametricSpline_GetYSpline(cast(void*)swigCPtr);
    vtkSpline.vtkSpline ret = (cPtr is null) ? null : new vtkSpline.vtkSpline(cPtr, false);
    return ret;
  }

  public vtkSpline.vtkSpline GetZSpline() {
    void* cPtr = vtkd_im.vtkParametricSpline_GetZSpline(cast(void*)swigCPtr);
    vtkSpline.vtkSpline ret = (cPtr is null) ? null : new vtkSpline.vtkSpline(cPtr, false);
    return ret;
  }

  public void SetPoints(vtkPoints.vtkPoints arg0) {
    vtkd_im.vtkParametricSpline_SetPoints(cast(void*)swigCPtr, vtkPoints.vtkPoints.swigGetCPtr(arg0));
  }

  public vtkPoints.vtkPoints GetPoints() {
    void* cPtr = vtkd_im.vtkParametricSpline_GetPoints(cast(void*)swigCPtr);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public void SetNumberOfPoints(long numPts) {
    vtkd_im.vtkParametricSpline_SetNumberOfPoints(cast(void*)swigCPtr, numPts);
  }

  public void SetPoint(long index, double x, double y, double z) {
    vtkd_im.vtkParametricSpline_SetPoint(cast(void*)swigCPtr, index, x, y, z);
  }

  public void SetClosed(int _arg) {
    vtkd_im.vtkParametricSpline_SetClosed(cast(void*)swigCPtr, _arg);
  }

  public int GetClosed() {
    auto ret = vtkd_im.vtkParametricSpline_GetClosed(cast(void*)swigCPtr);
    return ret;
  }

  public void ClosedOn() {
    vtkd_im.vtkParametricSpline_ClosedOn(cast(void*)swigCPtr);
  }

  public void ClosedOff() {
    vtkd_im.vtkParametricSpline_ClosedOff(cast(void*)swigCPtr);
  }

  public void SetParameterizeByLength(int _arg) {
    vtkd_im.vtkParametricSpline_SetParameterizeByLength(cast(void*)swigCPtr, _arg);
  }

  public int GetParameterizeByLength() {
    auto ret = vtkd_im.vtkParametricSpline_GetParameterizeByLength(cast(void*)swigCPtr);
    return ret;
  }

  public void ParameterizeByLengthOn() {
    vtkd_im.vtkParametricSpline_ParameterizeByLengthOn(cast(void*)swigCPtr);
  }

  public void ParameterizeByLengthOff() {
    vtkd_im.vtkParametricSpline_ParameterizeByLengthOff(cast(void*)swigCPtr);
  }

  public void SetLeftConstraint(int _arg) {
    vtkd_im.vtkParametricSpline_SetLeftConstraint(cast(void*)swigCPtr, _arg);
  }

  public int GetLeftConstraintMinValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetLeftConstraintMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLeftConstraintMaxValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetLeftConstraintMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLeftConstraint() {
    auto ret = vtkd_im.vtkParametricSpline_GetLeftConstraint(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRightConstraint(int _arg) {
    vtkd_im.vtkParametricSpline_SetRightConstraint(cast(void*)swigCPtr, _arg);
  }

  public int GetRightConstraintMinValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetRightConstraintMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRightConstraintMaxValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetRightConstraintMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRightConstraint() {
    auto ret = vtkd_im.vtkParametricSpline_GetRightConstraint(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLeftValue(double _arg) {
    vtkd_im.vtkParametricSpline_SetLeftValue(cast(void*)swigCPtr, _arg);
  }

  public double GetLeftValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetLeftValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRightValue(double _arg) {
    vtkd_im.vtkParametricSpline_SetRightValue(cast(void*)swigCPtr, _arg);
  }

  public double GetRightValue() {
    auto ret = vtkd_im.vtkParametricSpline_GetRightValue(cast(void*)swigCPtr);
    return ret;
  }
}
