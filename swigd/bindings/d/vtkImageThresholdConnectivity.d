/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageThresholdConnectivity;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPoints;
static import SWIGTYPE_p_int;
static import vtkImageStencilData;
static import SWIGTYPE_p_double;
static import vtkImageAlgorithm;

class vtkImageThresholdConnectivity : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageThresholdConnectivity_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageThresholdConnectivity obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageThresholdConnectivity New() {
    void* cPtr = vtkd_im.vtkImageThresholdConnectivity_New();
    vtkImageThresholdConnectivity ret = (cPtr is null) ? null : new vtkImageThresholdConnectivity(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageThresholdConnectivity SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageThresholdConnectivity_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageThresholdConnectivity ret = (cPtr is null) ? null : new vtkImageThresholdConnectivity(cPtr, false);
    return ret;
  }

  public vtkImageThresholdConnectivity NewInstance() const {
    void* cPtr = vtkd_im.vtkImageThresholdConnectivity_NewInstance(cast(void*)swigCPtr);
    vtkImageThresholdConnectivity ret = (cPtr is null) ? null : new vtkImageThresholdConnectivity(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void SetSeedPoints(vtkPoints.vtkPoints points) {
    vtkd_im.vtkImageThresholdConnectivity_SetSeedPoints(cast(void*)swigCPtr, vtkPoints.vtkPoints.swigGetCPtr(points));
  }

  public vtkPoints.vtkPoints GetSeedPoints() {
    void* cPtr = vtkd_im.vtkImageThresholdConnectivity_GetSeedPoints(cast(void*)swigCPtr);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public void ThresholdByUpper(double thresh) {
    vtkd_im.vtkImageThresholdConnectivity_ThresholdByUpper(cast(void*)swigCPtr, thresh);
  }

  public void ThresholdByLower(double thresh) {
    vtkd_im.vtkImageThresholdConnectivity_ThresholdByLower(cast(void*)swigCPtr, thresh);
  }

  public void ThresholdBetween(double lower, double upper) {
    vtkd_im.vtkImageThresholdConnectivity_ThresholdBetween(cast(void*)swigCPtr, lower, upper);
  }

  public void SetReplaceIn(int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetReplaceIn(cast(void*)swigCPtr, _arg);
  }

  public int GetReplaceIn() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetReplaceIn(cast(void*)swigCPtr);
    return ret;
  }

  public void ReplaceInOn() {
    vtkd_im.vtkImageThresholdConnectivity_ReplaceInOn(cast(void*)swigCPtr);
  }

  public void ReplaceInOff() {
    vtkd_im.vtkImageThresholdConnectivity_ReplaceInOff(cast(void*)swigCPtr);
  }

  public void SetInValue(double val) {
    vtkd_im.vtkImageThresholdConnectivity_SetInValue(cast(void*)swigCPtr, val);
  }

  public double GetInValue() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetInValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetReplaceOut(int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetReplaceOut(cast(void*)swigCPtr, _arg);
  }

  public int GetReplaceOut() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetReplaceOut(cast(void*)swigCPtr);
    return ret;
  }

  public void ReplaceOutOn() {
    vtkd_im.vtkImageThresholdConnectivity_ReplaceOutOn(cast(void*)swigCPtr);
  }

  public void ReplaceOutOff() {
    vtkd_im.vtkImageThresholdConnectivity_ReplaceOutOff(cast(void*)swigCPtr);
  }

  public void SetOutValue(double val) {
    vtkd_im.vtkImageThresholdConnectivity_SetOutValue(cast(void*)swigCPtr, val);
  }

  public double GetOutValue() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetOutValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetUpperThreshold() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetUpperThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLowerThreshold() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetLowerThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSliceRangeX(int _arg1, int _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeX__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetSliceRangeX(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeX__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetSliceRangeX() {
    auto ret = cast(int*)vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeX__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSliceRangeX(int* _arg1, int* _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeX__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSliceRangeX(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeX__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetSliceRangeY(int _arg1, int _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeY__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetSliceRangeY(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeY__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetSliceRangeY() {
    auto ret = cast(int*)vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeY__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSliceRangeY(int* _arg1, int* _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeY__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSliceRangeY(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeY__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetSliceRangeZ(int _arg1, int _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeZ__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetSliceRangeZ(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetSliceRangeZ__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetSliceRangeZ() {
    auto ret = cast(int*)vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeZ__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSliceRangeZ(int* _arg1, int* _arg2) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeZ__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSliceRangeZ(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_GetSliceRangeZ__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetStencilData(vtkImageStencilData.vtkImageStencilData stencil) {
    vtkd_im.vtkImageThresholdConnectivity_SetStencilData(cast(void*)swigCPtr, vtkImageStencilData.vtkImageStencilData.swigGetCPtr(stencil));
  }

  public vtkImageStencilData.vtkImageStencilData GetStencil() {
    void* cPtr = vtkd_im.vtkImageThresholdConnectivity_GetStencil(cast(void*)swigCPtr);
    vtkImageStencilData.vtkImageStencilData ret = (cPtr is null) ? null : new vtkImageStencilData.vtkImageStencilData(cPtr, false);
    return ret;
  }

  public void SetActiveComponent(int _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetActiveComponent(cast(void*)swigCPtr, _arg);
  }

  public int GetActiveComponent() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetActiveComponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNeighborhoodRadius(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkImageThresholdConnectivity_SetNeighborhoodRadius__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetNeighborhoodRadius(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetNeighborhoodRadius__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetNeighborhoodRadius() {
    auto ret = cast(double*)vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodRadius__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetNeighborhoodRadius(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodRadius__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetNeighborhoodRadius(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodRadius__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetNeighborhoodFraction(double _arg) {
    vtkd_im.vtkImageThresholdConnectivity_SetNeighborhoodFraction(cast(void*)swigCPtr, _arg);
  }

  public double GetNeighborhoodFractionMinValue() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodFractionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetNeighborhoodFractionMaxValue() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodFractionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetNeighborhoodFraction() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetNeighborhoodFraction(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfInVoxels() {
    auto ret = vtkd_im.vtkImageThresholdConnectivity_GetNumberOfInVoxels(cast(void*)swigCPtr);
    return ret;
  }
}
