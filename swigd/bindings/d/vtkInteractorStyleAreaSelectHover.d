/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkInteractorStyleAreaSelectHover;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAreaLayout;
static import vtkInteractorStyleRubberBand2D;

class vtkInteractorStyleAreaSelectHover : vtkInteractorStyleRubberBand2D.vtkInteractorStyleRubberBand2D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkInteractorStyleAreaSelectHover_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkInteractorStyleAreaSelectHover obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkInteractorStyleAreaSelectHover New() {
    void* cPtr = vtkd_im.vtkInteractorStyleAreaSelectHover_New();
    vtkInteractorStyleAreaSelectHover ret = (cPtr is null) ? null : new vtkInteractorStyleAreaSelectHover(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkInteractorStyleAreaSelectHover_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkInteractorStyleAreaSelectHover SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkInteractorStyleAreaSelectHover_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkInteractorStyleAreaSelectHover ret = (cPtr is null) ? null : new vtkInteractorStyleAreaSelectHover(cPtr, false);
    return ret;
  }

  public vtkInteractorStyleAreaSelectHover NewInstance() const {
    void* cPtr = vtkd_im.vtkInteractorStyleAreaSelectHover_NewInstance(cast(void*)swigCPtr);
    vtkInteractorStyleAreaSelectHover ret = (cPtr is null) ? null : new vtkInteractorStyleAreaSelectHover(cPtr, false);
    return ret;
  }

  alias vtkInteractorStyleRubberBand2D.vtkInteractorStyleRubberBand2D.NewInstance NewInstance;

  public void SetLayout(vtkAreaLayout.vtkAreaLayout layout) {
    vtkd_im.vtkInteractorStyleAreaSelectHover_SetLayout(cast(void*)swigCPtr, vtkAreaLayout.vtkAreaLayout.swigGetCPtr(layout));
  }

  public vtkAreaLayout.vtkAreaLayout GetLayout() {
    void* cPtr = vtkd_im.vtkInteractorStyleAreaSelectHover_GetLayout(cast(void*)swigCPtr);
    vtkAreaLayout.vtkAreaLayout ret = (cPtr is null) ? null : new vtkAreaLayout.vtkAreaLayout(cPtr, false);
    return ret;
  }

  public void SetLabelField(string _arg) {
    vtkd_im.vtkInteractorStyleAreaSelectHover_SetLabelField(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelField() {
    string ret = std.conv.to!string(vtkd_im.vtkInteractorStyleAreaSelectHover_GetLabelField(cast(void*)swigCPtr));
    return ret;
  }

  public void SetUseRectangularCoordinates(bool _arg) {
    vtkd_im.vtkInteractorStyleAreaSelectHover_SetUseRectangularCoordinates(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseRectangularCoordinates() {
    bool ret = vtkd_im.vtkInteractorStyleAreaSelectHover_GetUseRectangularCoordinates(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseRectangularCoordinatesOn() {
    vtkd_im.vtkInteractorStyleAreaSelectHover_UseRectangularCoordinatesOn(cast(void*)swigCPtr);
  }

  public void UseRectangularCoordinatesOff() {
    vtkd_im.vtkInteractorStyleAreaSelectHover_UseRectangularCoordinatesOff(cast(void*)swigCPtr);
  }

  public void SetHighLightColor(double r, double g, double b) {
    vtkd_im.vtkInteractorStyleAreaSelectHover_SetHighLightColor(cast(void*)swigCPtr, r, g, b);
  }

  public void SetHighLightWidth(double lw) {
    vtkd_im.vtkInteractorStyleAreaSelectHover_SetHighLightWidth(cast(void*)swigCPtr, lw);
  }

  public double GetHighLightWidth() {
    auto ret = vtkd_im.vtkInteractorStyleAreaSelectHover_GetHighLightWidth(cast(void*)swigCPtr);
    return ret;
  }

  public long GetIdAtPos(int x, int y) {
    auto ret = vtkd_im.vtkInteractorStyleAreaSelectHover_GetIdAtPos(cast(void*)swigCPtr, x, y);
    return ret;
  }
}
