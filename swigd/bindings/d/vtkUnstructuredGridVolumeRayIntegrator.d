/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkUnstructuredGridVolumeRayIntegrator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkVolume;
static import vtkDataArray;
static import vtkDoubleArray;
static import SWIGTYPE_p_float;
static import vtkObject;

class vtkUnstructuredGridVolumeRayIntegrator : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkUnstructuredGridVolumeRayIntegrator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkUnstructuredGridVolumeRayIntegrator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkUnstructuredGridVolumeRayIntegrator ret = (cPtr is null) ? null : new vtkUnstructuredGridVolumeRayIntegrator(cPtr, false);
    return ret;
  }

  public vtkUnstructuredGridVolumeRayIntegrator NewInstance() const {
    void* cPtr = vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_NewInstance(cast(void*)swigCPtr);
    vtkUnstructuredGridVolumeRayIntegrator ret = (cPtr is null) ? null : new vtkUnstructuredGridVolumeRayIntegrator(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void Initialize(vtkVolume.vtkVolume volume, vtkDataArray.vtkDataArray scalars) {
    vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_Initialize(cast(void*)swigCPtr, vtkVolume.vtkVolume.swigGetCPtr(volume), vtkDataArray.vtkDataArray.swigGetCPtr(scalars));
  }

  public void Integrate(vtkDoubleArray.vtkDoubleArray intersectionLengths, vtkDataArray.vtkDataArray nearIntersections, vtkDataArray.vtkDataArray farIntersections, SWIGTYPE_p_float.SWIGTYPE_p_float color) {
    vtkd_im.vtkUnstructuredGridVolumeRayIntegrator_Integrate(cast(void*)swigCPtr, vtkDoubleArray.vtkDoubleArray.swigGetCPtr(intersectionLengths), vtkDataArray.vtkDataArray.swigGetCPtr(nearIntersections), vtkDataArray.vtkDataArray.swigGetCPtr(farIntersections), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(color));
  }
}
