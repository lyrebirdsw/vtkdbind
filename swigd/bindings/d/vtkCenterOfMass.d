/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCenterOfMass;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPoints;
static import vtkDataArray;
static import vtkPointSetAlgorithm;

class vtkCenterOfMass : vtkPointSetAlgorithm.vtkPointSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCenterOfMass_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCenterOfMass obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkCenterOfMass(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkCenterOfMass New() {
    void* cPtr = vtkd_im.vtkCenterOfMass_New();
    vtkCenterOfMass ret = (cPtr is null) ? null : new vtkCenterOfMass(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCenterOfMass_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCenterOfMass SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCenterOfMass_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCenterOfMass ret = (cPtr is null) ? null : new vtkCenterOfMass(cPtr, false);
    return ret;
  }

  public vtkCenterOfMass NewInstance() const {
    void* cPtr = vtkd_im.vtkCenterOfMass_NewInstance(cast(void*)swigCPtr);
    vtkCenterOfMass ret = (cPtr is null) ? null : new vtkCenterOfMass(cPtr, false);
    return ret;
  }

  alias vtkPointSetAlgorithm.vtkPointSetAlgorithm.NewInstance NewInstance;

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCenterOfMass_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCenterOfMass_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkCenterOfMass_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCenterOfMass_GetCenter__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCenterOfMass_GetCenter__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetUseScalarsAsWeights(bool _arg) {
    vtkd_im.vtkCenterOfMass_SetUseScalarsAsWeights(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseScalarsAsWeights() {
    bool ret = vtkd_im.vtkCenterOfMass_GetUseScalarsAsWeights(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public static void ComputeCenterOfMass(vtkPoints.vtkPoints input, vtkDataArray.vtkDataArray scalars, SWIGTYPE_p_double.SWIGTYPE_p_double center) {
    vtkd_im.vtkCenterOfMass_ComputeCenterOfMass(vtkPoints.vtkPoints.swigGetCPtr(input), vtkDataArray.vtkDataArray.swigGetCPtr(scalars), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(center));
  }
}
