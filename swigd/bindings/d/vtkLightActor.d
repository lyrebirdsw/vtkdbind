/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLightActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkLight;
static import SWIGTYPE_p_double;
static import vtkViewport;
static import vtkWindow;
static import vtkProp3D;

class vtkLightActor : vtkProp3D.vtkProp3D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLightActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLightActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLightActor New() {
    void* cPtr = vtkd_im.vtkLightActor_New();
    vtkLightActor ret = (cPtr is null) ? null : new vtkLightActor(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLightActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLightActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLightActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLightActor ret = (cPtr is null) ? null : new vtkLightActor(cPtr, false);
    return ret;
  }

  public vtkLightActor NewInstance() const {
    void* cPtr = vtkd_im.vtkLightActor_NewInstance(cast(void*)swigCPtr);
    vtkLightActor ret = (cPtr is null) ? null : new vtkLightActor(cPtr, false);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.NewInstance NewInstance;

  public void SetLight(vtkLight.vtkLight light) {
    vtkd_im.vtkLightActor_SetLight(cast(void*)swigCPtr, vtkLight.vtkLight.swigGetCPtr(light));
  }

  public vtkLight.vtkLight GetLight() {
    void* cPtr = vtkd_im.vtkLightActor_GetLight(cast(void*)swigCPtr);
    vtkLight.vtkLight ret = (cPtr is null) ? null : new vtkLight.vtkLight(cPtr, false);
    return ret;
  }

  public void SetClippingRange(double dNear, double dFar) {
    vtkd_im.vtkLightActor_SetClippingRange__SWIG_0(cast(void*)swigCPtr, dNear, dFar);
  }

  public void SetClippingRange(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkLightActor_SetClippingRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetClippingRange() {
    auto ret = cast(double*)vtkd_im.vtkLightActor_GetClippingRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetClippingRange(double* _arg1, double* _arg2) {
    vtkd_im.vtkLightActor_GetClippingRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetClippingRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLightActor_GetClippingRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public int RenderOpaqueGeometry(vtkViewport.vtkViewport viewport) {
    auto ret = vtkd_im.vtkLightActor_RenderOpaqueGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
    return ret;
  }

  public int HasTranslucentPolygonalGeometry() {
    auto ret = vtkd_im.vtkLightActor_HasTranslucentPolygonalGeometry(cast(void*)swigCPtr);
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkLightActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }
}
