/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMultiProcessStream;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_std__string;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_float;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_unsigned_int;
static import SWIGTYPE_p_unsigned_char;
static import SWIGTYPE_p_long_long;
static import SWIGTYPE_p_unsigned_long_long;
static import SWIGTYPE_p_std__vectorT_unsigned_char_t;

class vtkMultiProcessStream {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkMultiProcessStream obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkMultiProcessStream(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkMultiProcessStream__SWIG_0(), true);
  }

  public this(vtkMultiProcessStream arg0) {
    this(vtkd_im.new_vtkMultiProcessStream__SWIG_1(vtkMultiProcessStream.swigGetCPtr(arg0)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkMultiProcessStream Equal(vtkMultiProcessStream arg0) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_Equal(cast(void*)swigCPtr, vtkMultiProcessStream.swigGetCPtr(arg0)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(double value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_0(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(float value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_1(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(int value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_2(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(char value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_3(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(uint value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_4(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(ubyte value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_5(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(long value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_6(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(ulong value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_7(cast(void*)swigCPtr, value), false);
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(string value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_8(cast(void*)swigCPtr, (value ? std.string.toStringz(value) : null)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShl(vtkMultiProcessStream arg0) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShl__SWIG_9(cast(void*)swigCPtr, vtkMultiProcessStream.swigGetCPtr(arg0)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(double* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_0(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(float* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_1(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(int* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_2(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(char* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_3(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(uint* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_4(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(ubyte* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_5(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(long* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_6(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(ulong* value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_7(cast(void*)swigCPtr, cast(void*)value), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(SWIGTYPE_p_std__string.SWIGTYPE_p_std__string value) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_8(cast(void*)swigCPtr, SWIGTYPE_p_std__string.SWIGTYPE_p_std__string.swigGetCPtr(value)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkMultiProcessStream swigOpShr(vtkMultiProcessStream arg0) {
    vtkMultiProcessStream ret = new vtkMultiProcessStream(vtkd_im.vtkMultiProcessStream_swigOpShr__SWIG_9(cast(void*)swigCPtr, vtkMultiProcessStream.swigGetCPtr(arg0)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Push(SWIGTYPE_p_double.SWIGTYPE_p_double array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(array), size);
  }

  public void Push(SWIGTYPE_p_float.SWIGTYPE_p_float array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(array), size);
  }

  public void Push(SWIGTYPE_p_int.SWIGTYPE_p_int array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(array), size);
  }

  public void Push(string array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_3(cast(void*)swigCPtr, (array ? std.string.toStringz(array) : null), size);
  }

  public void Push(SWIGTYPE_p_unsigned_int.SWIGTYPE_p_unsigned_int array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_4(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_int.SWIGTYPE_p_unsigned_int.swigGetCPtr(array), size);
  }

  public void Push(SWIGTYPE_p_unsigned_char.SWIGTYPE_p_unsigned_char array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_5(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_char.SWIGTYPE_p_unsigned_char.swigGetCPtr(array), size);
  }

  public void Push(SWIGTYPE_p_long_long.SWIGTYPE_p_long_long array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_6(cast(void*)swigCPtr, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(array), size);
  }

  public void Push(SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long array, uint size) {
    vtkd_im.vtkMultiProcessStream_Push__SWIG_7(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long.swigGetCPtr(array), size);
  }

  public void Pop(double** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_0(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(float** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_1(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(int** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_2(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(string array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_3(cast(void*)swigCPtr, (array ? std.string.toStringz(array) : null), cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(uint** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_4(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(ubyte** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_5(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(long** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_6(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Pop(ulong** array, uint* size) {
    vtkd_im.vtkMultiProcessStream_Pop__SWIG_7(cast(void*)swigCPtr, cast(void*)array, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void Reset() {
    vtkd_im.vtkMultiProcessStream_Reset(cast(void*)swigCPtr);
  }

  public int Size() {
    auto ret = vtkd_im.vtkMultiProcessStream_Size(cast(void*)swigCPtr);
    return ret;
  }

  public bool Empty() {
    bool ret = vtkd_im.vtkMultiProcessStream_Empty(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GetRawData(SWIGTYPE_p_std__vectorT_unsigned_char_t.SWIGTYPE_p_std__vectorT_unsigned_char_t data) const {
    vtkd_im.vtkMultiProcessStream_GetRawData__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_unsigned_char_t.SWIGTYPE_p_std__vectorT_unsigned_char_t.swigGetCPtr(data));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetRawData(ubyte** data, uint* size) {
    vtkd_im.vtkMultiProcessStream_GetRawData__SWIG_1(cast(void*)swigCPtr, cast(void*)data, cast(void*)size);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void SetRawData(SWIGTYPE_p_std__vectorT_unsigned_char_t.SWIGTYPE_p_std__vectorT_unsigned_char_t data) {
    vtkd_im.vtkMultiProcessStream_SetRawData__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_unsigned_char_t.SWIGTYPE_p_std__vectorT_unsigned_char_t.swigGetCPtr(data));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void SetRawData(ubyte* arg0, uint size) {
    vtkd_im.vtkMultiProcessStream_SetRawData__SWIG_1(cast(void*)swigCPtr, cast(void*)arg0, size);
  }
}
