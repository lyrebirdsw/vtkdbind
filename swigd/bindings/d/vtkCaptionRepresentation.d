/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCaptionRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkCaptionActor2D;
static import vtkPointHandleRepresentation3D;
static import vtkBorderRepresentation;

class vtkCaptionRepresentation : vtkBorderRepresentation.vtkBorderRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCaptionRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCaptionRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkCaptionRepresentation New() {
    void* cPtr = vtkd_im.vtkCaptionRepresentation_New();
    vtkCaptionRepresentation ret = (cPtr is null) ? null : new vtkCaptionRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCaptionRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCaptionRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCaptionRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCaptionRepresentation ret = (cPtr is null) ? null : new vtkCaptionRepresentation(cPtr, false);
    return ret;
  }

  public vtkCaptionRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkCaptionRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkCaptionRepresentation ret = (cPtr is null) ? null : new vtkCaptionRepresentation(cPtr, false);
    return ret;
  }

  alias vtkBorderRepresentation.vtkBorderRepresentation.NewInstance NewInstance;

  public void SetAnchorPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkCaptionRepresentation_SetAnchorPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetAnchorPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkCaptionRepresentation_GetAnchorPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetCaptionActor2D(vtkCaptionActor2D.vtkCaptionActor2D captionActor) {
    vtkd_im.vtkCaptionRepresentation_SetCaptionActor2D(cast(void*)swigCPtr, vtkCaptionActor2D.vtkCaptionActor2D.swigGetCPtr(captionActor));
  }

  public vtkCaptionActor2D.vtkCaptionActor2D GetCaptionActor2D() {
    void* cPtr = vtkd_im.vtkCaptionRepresentation_GetCaptionActor2D(cast(void*)swigCPtr);
    vtkCaptionActor2D.vtkCaptionActor2D ret = (cPtr is null) ? null : new vtkCaptionActor2D.vtkCaptionActor2D(cPtr, false);
    return ret;
  }

  public void SetAnchorRepresentation(vtkPointHandleRepresentation3D.vtkPointHandleRepresentation3D arg0) {
    vtkd_im.vtkCaptionRepresentation_SetAnchorRepresentation(cast(void*)swigCPtr, vtkPointHandleRepresentation3D.vtkPointHandleRepresentation3D.swigGetCPtr(arg0));
  }

  public vtkPointHandleRepresentation3D.vtkPointHandleRepresentation3D GetAnchorRepresentation() {
    void* cPtr = vtkd_im.vtkCaptionRepresentation_GetAnchorRepresentation(cast(void*)swigCPtr);
    vtkPointHandleRepresentation3D.vtkPointHandleRepresentation3D ret = (cPtr is null) ? null : new vtkPointHandleRepresentation3D.vtkPointHandleRepresentation3D(cPtr, false);
    return ret;
  }

  public void SetFontFactor(double _arg) {
    vtkd_im.vtkCaptionRepresentation_SetFontFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetFontFactorMinValue() {
    auto ret = vtkd_im.vtkCaptionRepresentation_GetFontFactorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFontFactorMaxValue() {
    auto ret = vtkd_im.vtkCaptionRepresentation_GetFontFactorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFontFactor() {
    auto ret = vtkd_im.vtkCaptionRepresentation_GetFontFactor(cast(void*)swigCPtr);
    return ret;
  }
}
