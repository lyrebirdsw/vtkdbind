/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGraphLayout;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGraphLayoutStrategy;
static import vtkAbstractTransform;
static import vtkGraphAlgorithm;

class vtkGraphLayout : vtkGraphAlgorithm.vtkGraphAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGraphLayout_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGraphLayout obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGraphLayout New() {
    void* cPtr = vtkd_im.vtkGraphLayout_New();
    vtkGraphLayout ret = (cPtr is null) ? null : new vtkGraphLayout(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGraphLayout_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGraphLayout SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGraphLayout_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGraphLayout ret = (cPtr is null) ? null : new vtkGraphLayout(cPtr, false);
    return ret;
  }

  public vtkGraphLayout NewInstance() const {
    void* cPtr = vtkd_im.vtkGraphLayout_NewInstance(cast(void*)swigCPtr);
    vtkGraphLayout ret = (cPtr is null) ? null : new vtkGraphLayout(cPtr, false);
    return ret;
  }

  alias vtkGraphAlgorithm.vtkGraphAlgorithm.NewInstance NewInstance;

  public void SetLayoutStrategy(vtkGraphLayoutStrategy.vtkGraphLayoutStrategy strategy) {
    vtkd_im.vtkGraphLayout_SetLayoutStrategy(cast(void*)swigCPtr, vtkGraphLayoutStrategy.vtkGraphLayoutStrategy.swigGetCPtr(strategy));
  }

  public vtkGraphLayoutStrategy.vtkGraphLayoutStrategy GetLayoutStrategy() {
    void* cPtr = vtkd_im.vtkGraphLayout_GetLayoutStrategy(cast(void*)swigCPtr);
    vtkGraphLayoutStrategy.vtkGraphLayoutStrategy ret = (cPtr is null) ? null : new vtkGraphLayoutStrategy.vtkGraphLayoutStrategy(cPtr, false);
    return ret;
  }

  public int IsLayoutComplete() {
    auto ret = vtkd_im.vtkGraphLayout_IsLayoutComplete(cast(void*)swigCPtr);
    return ret;
  }

  public double GetZRange() {
    auto ret = vtkd_im.vtkGraphLayout_GetZRange(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZRange(double _arg) {
    vtkd_im.vtkGraphLayout_SetZRange(cast(void*)swigCPtr, _arg);
  }

  public vtkAbstractTransform.vtkAbstractTransform GetTransform() {
    void* cPtr = vtkd_im.vtkGraphLayout_GetTransform(cast(void*)swigCPtr);
    vtkAbstractTransform.vtkAbstractTransform ret = (cPtr is null) ? null : new vtkAbstractTransform.vtkAbstractTransform(cPtr, false);
    return ret;
  }

  public void SetTransform(vtkAbstractTransform.vtkAbstractTransform t) {
    vtkd_im.vtkGraphLayout_SetTransform(cast(void*)swigCPtr, vtkAbstractTransform.vtkAbstractTransform.swigGetCPtr(t));
  }

  public void SetUseTransform(bool _arg) {
    vtkd_im.vtkGraphLayout_SetUseTransform(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseTransform() {
    bool ret = vtkd_im.vtkGraphLayout_GetUseTransform(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseTransformOn() {
    vtkd_im.vtkGraphLayout_UseTransformOn(cast(void*)swigCPtr);
  }

  public void UseTransformOff() {
    vtkd_im.vtkGraphLayout_UseTransformOff(cast(void*)swigCPtr);
  }
}
