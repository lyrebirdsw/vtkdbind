/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkStripper;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkStripper : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkStripper_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkStripper obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkStripper_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkStripper SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkStripper_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkStripper ret = (cPtr is null) ? null : new vtkStripper(cPtr, false);
    return ret;
  }

  public vtkStripper NewInstance() const {
    void* cPtr = vtkd_im.vtkStripper_NewInstance(cast(void*)swigCPtr);
    vtkStripper ret = (cPtr is null) ? null : new vtkStripper(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkStripper New() {
    void* cPtr = vtkd_im.vtkStripper_New();
    vtkStripper ret = (cPtr is null) ? null : new vtkStripper(cPtr, false);
    return ret;
  }

  public void SetMaximumLength(int _arg) {
    vtkd_im.vtkStripper_SetMaximumLength(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumLengthMinValue() {
    auto ret = vtkd_im.vtkStripper_GetMaximumLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaximumLengthMaxValue() {
    auto ret = vtkd_im.vtkStripper_GetMaximumLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaximumLength() {
    auto ret = vtkd_im.vtkStripper_GetMaximumLength(cast(void*)swigCPtr);
    return ret;
  }

  public void PassCellDataAsFieldDataOn() {
    vtkd_im.vtkStripper_PassCellDataAsFieldDataOn(cast(void*)swigCPtr);
  }

  public void PassCellDataAsFieldDataOff() {
    vtkd_im.vtkStripper_PassCellDataAsFieldDataOff(cast(void*)swigCPtr);
  }

  public void SetPassCellDataAsFieldData(int _arg) {
    vtkd_im.vtkStripper_SetPassCellDataAsFieldData(cast(void*)swigCPtr, _arg);
  }

  public int GetPassCellDataAsFieldData() {
    auto ret = vtkd_im.vtkStripper_GetPassCellDataAsFieldData(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPassThroughCellIds(int _arg) {
    vtkd_im.vtkStripper_SetPassThroughCellIds(cast(void*)swigCPtr, _arg);
  }

  public int GetPassThroughCellIds() {
    auto ret = vtkd_im.vtkStripper_GetPassThroughCellIds(cast(void*)swigCPtr);
    return ret;
  }

  public void PassThroughCellIdsOn() {
    vtkd_im.vtkStripper_PassThroughCellIdsOn(cast(void*)swigCPtr);
  }

  public void PassThroughCellIdsOff() {
    vtkd_im.vtkStripper_PassThroughCellIdsOff(cast(void*)swigCPtr);
  }

  public void SetPassThroughPointIds(int _arg) {
    vtkd_im.vtkStripper_SetPassThroughPointIds(cast(void*)swigCPtr, _arg);
  }

  public int GetPassThroughPointIds() {
    auto ret = vtkd_im.vtkStripper_GetPassThroughPointIds(cast(void*)swigCPtr);
    return ret;
  }

  public void PassThroughPointIdsOn() {
    vtkd_im.vtkStripper_PassThroughPointIdsOn(cast(void*)swigCPtr);
  }

  public void PassThroughPointIdsOff() {
    vtkd_im.vtkStripper_PassThroughPointIdsOff(cast(void*)swigCPtr);
  }
}
