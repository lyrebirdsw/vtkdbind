/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkInformationDoubleVectorKey;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformation;
static import vtkInformationKey;

class vtkInformationDoubleVectorKey : vtkInformationKey.vtkInformationKey {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkInformationDoubleVectorKey_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkInformationDoubleVectorKey obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkInformationDoubleVectorKey(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkInformationDoubleVectorKey_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkInformationDoubleVectorKey SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkInformationDoubleVectorKey_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public vtkInformationDoubleVectorKey NewInstance() const {
    void* cPtr = vtkd_im.vtkInformationDoubleVectorKey_NewInstance(cast(void*)swigCPtr);
    vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  alias vtkInformationKey.vtkInformationKey.NewInstance NewInstance;

  public this(string name, string location, int length) {
    this(vtkd_im.new_vtkInformationDoubleVectorKey__SWIG_0((name ? std.string.toStringz(name) : null), (location ? std.string.toStringz(location) : null), length), true);
  }

  public this(string name, string location) {
    this(vtkd_im.new_vtkInformationDoubleVectorKey__SWIG_1((name ? std.string.toStringz(name) : null), (location ? std.string.toStringz(location) : null)), true);
  }

  public void Append(vtkInformation.vtkInformation info, double value) {
    vtkd_im.vtkInformationDoubleVectorKey_Append(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info), value);
  }

  public void Set(vtkInformation.vtkInformation info, double* value, int length) {
    vtkd_im.vtkInformationDoubleVectorKey_Set(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info), cast(void*)value, length);
  }

  public double* Get(vtkInformation.vtkInformation info) {
    auto ret = cast(double*)vtkd_im.vtkInformationDoubleVectorKey_Get__SWIG_0(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public double Get(vtkInformation.vtkInformation info, int idx) {
    auto ret = vtkd_im.vtkInformationDoubleVectorKey_Get__SWIG_1(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info), idx);
    return ret;
  }

  public void Get(vtkInformation.vtkInformation info, double* value) {
    vtkd_im.vtkInformationDoubleVectorKey_Get__SWIG_2(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info), cast(void*)value);
  }

  public int Length(vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkInformationDoubleVectorKey_Length(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }
}
