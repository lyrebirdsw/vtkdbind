/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTableToPolyData;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkTableToPolyData : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTableToPolyData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTableToPolyData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkTableToPolyData(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTableToPolyData New() {
    void* cPtr = vtkd_im.vtkTableToPolyData_New();
    vtkTableToPolyData ret = (cPtr is null) ? null : new vtkTableToPolyData(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTableToPolyData_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTableToPolyData SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTableToPolyData_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTableToPolyData ret = (cPtr is null) ? null : new vtkTableToPolyData(cPtr, false);
    return ret;
  }

  public vtkTableToPolyData NewInstance() const {
    void* cPtr = vtkd_im.vtkTableToPolyData_NewInstance(cast(void*)swigCPtr);
    vtkTableToPolyData ret = (cPtr is null) ? null : new vtkTableToPolyData(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetXColumn(string _arg) {
    vtkd_im.vtkTableToPolyData_SetXColumn(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXColumn() {
    string ret = std.conv.to!string(vtkd_im.vtkTableToPolyData_GetXColumn(cast(void*)swigCPtr));
    return ret;
  }

  public void SetXColumnIndex(int _arg) {
    vtkd_im.vtkTableToPolyData_SetXColumnIndex(cast(void*)swigCPtr, _arg);
  }

  public int GetXColumnIndexMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXColumnIndexMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetXColumnIndexMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXColumnIndexMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetXColumnIndex() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXColumnIndex(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXComponent(int _arg) {
    vtkd_im.vtkTableToPolyData_SetXComponent(cast(void*)swigCPtr, _arg);
  }

  public int GetXComponentMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXComponentMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetXComponentMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXComponentMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetXComponent() {
    auto ret = vtkd_im.vtkTableToPolyData_GetXComponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetYColumn(string _arg) {
    vtkd_im.vtkTableToPolyData_SetYColumn(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetYColumn() {
    string ret = std.conv.to!string(vtkd_im.vtkTableToPolyData_GetYColumn(cast(void*)swigCPtr));
    return ret;
  }

  public void SetYColumnIndex(int _arg) {
    vtkd_im.vtkTableToPolyData_SetYColumnIndex(cast(void*)swigCPtr, _arg);
  }

  public int GetYColumnIndexMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYColumnIndexMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetYColumnIndexMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYColumnIndexMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetYColumnIndex() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYColumnIndex(cast(void*)swigCPtr);
    return ret;
  }

  public void SetYComponent(int _arg) {
    vtkd_im.vtkTableToPolyData_SetYComponent(cast(void*)swigCPtr, _arg);
  }

  public int GetYComponentMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYComponentMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetYComponentMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYComponentMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetYComponent() {
    auto ret = vtkd_im.vtkTableToPolyData_GetYComponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZColumn(string _arg) {
    vtkd_im.vtkTableToPolyData_SetZColumn(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetZColumn() {
    string ret = std.conv.to!string(vtkd_im.vtkTableToPolyData_GetZColumn(cast(void*)swigCPtr));
    return ret;
  }

  public void SetZColumnIndex(int _arg) {
    vtkd_im.vtkTableToPolyData_SetZColumnIndex(cast(void*)swigCPtr, _arg);
  }

  public int GetZColumnIndexMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZColumnIndexMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetZColumnIndexMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZColumnIndexMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetZColumnIndex() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZColumnIndex(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZComponent(int _arg) {
    vtkd_im.vtkTableToPolyData_SetZComponent(cast(void*)swigCPtr, _arg);
  }

  public int GetZComponentMinValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZComponentMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetZComponentMaxValue() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZComponentMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetZComponent() {
    auto ret = vtkd_im.vtkTableToPolyData_GetZComponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCreate2DPoints(bool _arg) {
    vtkd_im.vtkTableToPolyData_SetCreate2DPoints(cast(void*)swigCPtr, _arg);
  }

  public bool GetCreate2DPoints() {
    bool ret = vtkd_im.vtkTableToPolyData_GetCreate2DPoints(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void Create2DPointsOn() {
    vtkd_im.vtkTableToPolyData_Create2DPointsOn(cast(void*)swigCPtr);
  }

  public void Create2DPointsOff() {
    vtkd_im.vtkTableToPolyData_Create2DPointsOff(cast(void*)swigCPtr);
  }

  public void SetPreserveCoordinateColumnsAsDataArrays(bool _arg) {
    vtkd_im.vtkTableToPolyData_SetPreserveCoordinateColumnsAsDataArrays(cast(void*)swigCPtr, _arg);
  }

  public bool GetPreserveCoordinateColumnsAsDataArrays() {
    bool ret = vtkd_im.vtkTableToPolyData_GetPreserveCoordinateColumnsAsDataArrays(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void PreserveCoordinateColumnsAsDataArraysOn() {
    vtkd_im.vtkTableToPolyData_PreserveCoordinateColumnsAsDataArraysOn(cast(void*)swigCPtr);
  }

  public void PreserveCoordinateColumnsAsDataArraysOff() {
    vtkd_im.vtkTableToPolyData_PreserveCoordinateColumnsAsDataArraysOff(cast(void*)swigCPtr);
  }

  public this() {
    this(vtkd_im.new_vtkTableToPolyData(), true);
  }
}
