/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkStreamer;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkDataSet;
static import vtkAlgorithmOutput;
static import vtkInitialValueProblemSolver;
static import vtkPolyDataAlgorithm;

class vtkStreamer : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkStreamer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkStreamer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkStreamer_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkStreamer SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkStreamer_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkStreamer ret = (cPtr is null) ? null : new vtkStreamer(cPtr, false);
    return ret;
  }

  public vtkStreamer NewInstance() const {
    void* cPtr = vtkd_im.vtkStreamer_NewInstance(cast(void*)swigCPtr);
    vtkStreamer ret = (cPtr is null) ? null : new vtkStreamer(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetStartLocation(long cellId, int subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    vtkd_im.vtkStreamer_SetStartLocation__SWIG_0(cast(void*)swigCPtr, cellId, subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
  }

  public void SetStartLocation(long cellId, int subId, double r, double s, double t) {
    vtkd_im.vtkStreamer_SetStartLocation__SWIG_1(cast(void*)swigCPtr, cellId, subId, r, s, t);
  }

  public long GetStartLocation(int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    auto ret = vtkd_im.vtkStreamer_GetStartLocation(cast(void*)swigCPtr, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void SetStartPosition(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkStreamer_SetStartPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetStartPosition(double x, double y, double z) {
    vtkd_im.vtkStreamer_SetStartPosition__SWIG_1(cast(void*)swigCPtr, x, y, z);
  }

  public double* GetStartPosition() {
    auto ret = cast(double*)vtkd_im.vtkStreamer_GetStartPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSourceData(vtkDataSet.vtkDataSet source) {
    vtkd_im.vtkStreamer_SetSourceData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(source));
  }

  public vtkDataSet.vtkDataSet GetSource() {
    void* cPtr = vtkd_im.vtkStreamer_GetSource(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetSourceConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkStreamer_SetSourceConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public void SetMaximumPropagationTime(double _arg) {
    vtkd_im.vtkStreamer_SetMaximumPropagationTime(cast(void*)swigCPtr, _arg);
  }

  public double GetMaximumPropagationTimeMinValue() {
    auto ret = vtkd_im.vtkStreamer_GetMaximumPropagationTimeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumPropagationTimeMaxValue() {
    auto ret = vtkd_im.vtkStreamer_GetMaximumPropagationTimeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumPropagationTime() {
    auto ret = vtkd_im.vtkStreamer_GetMaximumPropagationTime(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegrationDirection(int _arg) {
    vtkd_im.vtkStreamer_SetIntegrationDirection(cast(void*)swigCPtr, _arg);
  }

  public int GetIntegrationDirectionMinValue() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationDirectionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetIntegrationDirectionMaxValue() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationDirectionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetIntegrationDirection() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationDirection(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegrationDirectionToForward() {
    vtkd_im.vtkStreamer_SetIntegrationDirectionToForward(cast(void*)swigCPtr);
  }

  public void SetIntegrationDirectionToBackward() {
    vtkd_im.vtkStreamer_SetIntegrationDirectionToBackward(cast(void*)swigCPtr);
  }

  public void SetIntegrationDirectionToIntegrateBothDirections() {
    vtkd_im.vtkStreamer_SetIntegrationDirectionToIntegrateBothDirections(cast(void*)swigCPtr);
  }

  public string GetIntegrationDirectionAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkStreamer_GetIntegrationDirectionAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetIntegrationStepLength(double _arg) {
    vtkd_im.vtkStreamer_SetIntegrationStepLength(cast(void*)swigCPtr, _arg);
  }

  public double GetIntegrationStepLengthMinValue() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationStepLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetIntegrationStepLengthMaxValue() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationStepLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetIntegrationStepLength() {
    auto ret = vtkd_im.vtkStreamer_GetIntegrationStepLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSpeedScalars(int _arg) {
    vtkd_im.vtkStreamer_SetSpeedScalars(cast(void*)swigCPtr, _arg);
  }

  public int GetSpeedScalars() {
    auto ret = vtkd_im.vtkStreamer_GetSpeedScalars(cast(void*)swigCPtr);
    return ret;
  }

  public void SpeedScalarsOn() {
    vtkd_im.vtkStreamer_SpeedScalarsOn(cast(void*)swigCPtr);
  }

  public void SpeedScalarsOff() {
    vtkd_im.vtkStreamer_SpeedScalarsOff(cast(void*)swigCPtr);
  }

  public void SetOrientationScalars(int _arg) {
    vtkd_im.vtkStreamer_SetOrientationScalars(cast(void*)swigCPtr, _arg);
  }

  public int GetOrientationScalars() {
    auto ret = vtkd_im.vtkStreamer_GetOrientationScalars(cast(void*)swigCPtr);
    return ret;
  }

  public void OrientationScalarsOn() {
    vtkd_im.vtkStreamer_OrientationScalarsOn(cast(void*)swigCPtr);
  }

  public void OrientationScalarsOff() {
    vtkd_im.vtkStreamer_OrientationScalarsOff(cast(void*)swigCPtr);
  }

  public void SetTerminalSpeed(double _arg) {
    vtkd_im.vtkStreamer_SetTerminalSpeed(cast(void*)swigCPtr, _arg);
  }

  public double GetTerminalSpeedMinValue() {
    auto ret = vtkd_im.vtkStreamer_GetTerminalSpeedMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTerminalSpeedMaxValue() {
    auto ret = vtkd_im.vtkStreamer_GetTerminalSpeedMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTerminalSpeed() {
    auto ret = vtkd_im.vtkStreamer_GetTerminalSpeed(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVorticity(int _arg) {
    vtkd_im.vtkStreamer_SetVorticity(cast(void*)swigCPtr, _arg);
  }

  public int GetVorticity() {
    auto ret = vtkd_im.vtkStreamer_GetVorticity(cast(void*)swigCPtr);
    return ret;
  }

  public void VorticityOn() {
    vtkd_im.vtkStreamer_VorticityOn(cast(void*)swigCPtr);
  }

  public void VorticityOff() {
    vtkd_im.vtkStreamer_VorticityOff(cast(void*)swigCPtr);
  }

  public void SetNumberOfThreads(int _arg) {
    vtkd_im.vtkStreamer_SetNumberOfThreads(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfThreads() {
    auto ret = vtkd_im.vtkStreamer_GetNumberOfThreads(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSavePointInterval(double _arg) {
    vtkd_im.vtkStreamer_SetSavePointInterval(cast(void*)swigCPtr, _arg);
  }

  public double GetSavePointInterval() {
    auto ret = vtkd_im.vtkStreamer_GetSavePointInterval(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegrator(vtkInitialValueProblemSolver.vtkInitialValueProblemSolver arg0) {
    vtkd_im.vtkStreamer_SetIntegrator(cast(void*)swigCPtr, vtkInitialValueProblemSolver.vtkInitialValueProblemSolver.swigGetCPtr(arg0));
  }

  public vtkInitialValueProblemSolver.vtkInitialValueProblemSolver GetIntegrator() {
    void* cPtr = vtkd_im.vtkStreamer_GetIntegrator(cast(void*)swigCPtr);
    vtkInitialValueProblemSolver.vtkInitialValueProblemSolver ret = (cPtr is null) ? null : new vtkInitialValueProblemSolver.vtkInitialValueProblemSolver(cPtr, false);
    return ret;
  }

  public void SetEpsilon(double _arg) {
    vtkd_im.vtkStreamer_SetEpsilon(cast(void*)swigCPtr, _arg);
  }

  public double GetEpsilon() {
    auto ret = vtkd_im.vtkStreamer_GetEpsilon(cast(void*)swigCPtr);
    return ret;
  }
}
