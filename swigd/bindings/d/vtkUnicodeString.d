/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkUnicodeString;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_std__string__size_type;
static import SWIGTYPE_p_vtkUnicodeString__const_iterator;
static import SWIGTYPE_p_std__string;
static import SWIGTYPE_p_std__vectorT_unsigned_short_t;

class vtkUnicodeString {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkUnicodeString obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkUnicodeString(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkUnicodeString__SWIG_0(), true);
  }

  public this(vtkUnicodeString arg0) {
    this(vtkd_im.new_vtkUnicodeString__SWIG_1(vtkUnicodeString.swigGetCPtr(arg0)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type count, uint character) {
    this(vtkd_im.new_vtkUnicodeString__SWIG_2(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(count), character), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator begin, SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator end) {
    this(vtkd_im.new_vtkUnicodeString__SWIG_3(SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(begin), SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(end)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static bool is_utf8(string arg0) {
    bool ret = vtkd_im.vtkUnicodeString_is_utf8__SWIG_0((arg0 ? std.string.toStringz(arg0) : null)) ? true : false;
    return ret;
  }

  public static vtkUnicodeString from_utf8(string arg0) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_from_utf8__SWIG_0((arg0 ? std.string.toStringz(arg0) : null)), true);
    return ret;
  }

  public static vtkUnicodeString from_utf8(string begin, string end) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_from_utf8__SWIG_1((begin ? std.string.toStringz(begin) : null), (end ? std.string.toStringz(end) : null)), true);
    return ret;
  }

  public static vtkUnicodeString from_utf16(ushort* arg0) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_from_utf16(cast(void*)arg0), true);
    return ret;
  }

  public vtkUnicodeString Equal(vtkUnicodeString arg0) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_Equal(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(arg0)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator begin() const {
    SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator ret = new SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator(vtkd_im.vtkUnicodeString_begin(cast(void*)swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator end() const {
    SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator ret = new SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator(vtkd_im.vtkUnicodeString_end(cast(void*)swigCPtr), true);
    return ret;
  }

  public uint at(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type offset) const {
    auto ret = vtkd_im.vtkUnicodeString_at(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(offset));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public uint opIndex(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type offset) const {
    auto ret = vtkd_im.vtkUnicodeString_opIndex(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(offset));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public string utf8_str() const {
    string ret = std.conv.to!string(vtkd_im.vtkUnicodeString_utf8_str__SWIG_0(cast(void*)swigCPtr));
    return ret;
  }

  public void utf8_str(SWIGTYPE_p_std__string.SWIGTYPE_p_std__string result) const {
    vtkd_im.vtkUnicodeString_utf8_str__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__string.SWIGTYPE_p_std__string.swigGetCPtr(result));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_std__vectorT_unsigned_short_t.SWIGTYPE_p_std__vectorT_unsigned_short_t utf16_str() const {
    SWIGTYPE_p_std__vectorT_unsigned_short_t.SWIGTYPE_p_std__vectorT_unsigned_short_t ret = new SWIGTYPE_p_std__vectorT_unsigned_short_t.SWIGTYPE_p_std__vectorT_unsigned_short_t(vtkd_im.vtkUnicodeString_utf16_str__SWIG_0(cast(void*)swigCPtr), true);
    return ret;
  }

  public void utf16_str(SWIGTYPE_p_std__vectorT_unsigned_short_t.SWIGTYPE_p_std__vectorT_unsigned_short_t result) const {
    vtkd_im.vtkUnicodeString_utf16_str__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_unsigned_short_t.SWIGTYPE_p_std__vectorT_unsigned_short_t.swigGetCPtr(result));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type byte_count() const {
    SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type ret = new SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type(vtkd_im.vtkUnicodeString_byte_count(cast(void*)swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type character_count() const {
    SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type ret = new SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type(vtkd_im.vtkUnicodeString_character_count(cast(void*)swigCPtr), true);
    return ret;
  }

  public bool empty() const {
    bool ret = vtkd_im.vtkUnicodeString_empty(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public static SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type npos() @property {
    SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type ret = new SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type(vtkd_im.vtkUnicodeString_npos_get(), true);
    return ret;
  }

  public vtkUnicodeString swigOpAddAssign(uint arg0) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_swigOpAddAssign__SWIG_0(cast(void*)swigCPtr, arg0), false);
    return ret;
  }

  public vtkUnicodeString swigOpAddAssign(vtkUnicodeString rhs) {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_swigOpAddAssign__SWIG_1(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(rhs)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void push_back(uint arg0) {
    vtkd_im.vtkUnicodeString_push_back(cast(void*)swigCPtr, arg0);
  }

  public void append(vtkUnicodeString value) {
    vtkd_im.vtkUnicodeString_append__SWIG_0(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void append(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type count, uint character) {
    vtkd_im.vtkUnicodeString_append__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(count), character);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void append(SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator begin, SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator end) {
    vtkd_im.vtkUnicodeString_append__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(begin), SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(end));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void assign(vtkUnicodeString value) {
    vtkd_im.vtkUnicodeString_assign__SWIG_0(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void assign(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type count, uint character) {
    vtkd_im.vtkUnicodeString_assign__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(count), character);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void assign(SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator begin, SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator end) {
    vtkd_im.vtkUnicodeString_assign__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(begin), SWIGTYPE_p_vtkUnicodeString__const_iterator.SWIGTYPE_p_vtkUnicodeString__const_iterator.swigGetCPtr(end));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void clear() {
    vtkd_im.vtkUnicodeString_clear(cast(void*)swigCPtr);
  }

  public vtkUnicodeString fold_case() const {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_fold_case(cast(void*)swigCPtr), true);
    return ret;
  }

  public int compare(vtkUnicodeString arg0) const {
    auto ret = vtkd_im.vtkUnicodeString_compare(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(arg0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkUnicodeString substr(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type offset, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type count) const {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_substr__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(offset), SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(count)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkUnicodeString substr(SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type offset) const {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_substr__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_std__string__size_type.SWIGTYPE_p_std__string__size_type.swigGetCPtr(offset)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkUnicodeString substr() const {
    vtkUnicodeString ret = new vtkUnicodeString(vtkd_im.vtkUnicodeString_substr__SWIG_2(cast(void*)swigCPtr), true);
    return ret;
  }

  public void swap(vtkUnicodeString arg0) {
    vtkd_im.vtkUnicodeString_swap(cast(void*)swigCPtr, vtkUnicodeString.swigGetCPtr(arg0));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }
}
