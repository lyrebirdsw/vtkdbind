/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkClipPolyData;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImplicitFunction;
static import vtkPolyData;
static import vtkAlgorithmOutput;
static import vtkIncrementalPointLocator;
static import vtkPolyDataAlgorithm;

class vtkClipPolyData : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkClipPolyData_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkClipPolyData obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkClipPolyData_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkClipPolyData SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkClipPolyData_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkClipPolyData ret = (cPtr is null) ? null : new vtkClipPolyData(cPtr, false);
    return ret;
  }

  public vtkClipPolyData NewInstance() const {
    void* cPtr = vtkd_im.vtkClipPolyData_NewInstance(cast(void*)swigCPtr);
    vtkClipPolyData ret = (cPtr is null) ? null : new vtkClipPolyData(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkClipPolyData New() {
    void* cPtr = vtkd_im.vtkClipPolyData_New();
    vtkClipPolyData ret = (cPtr is null) ? null : new vtkClipPolyData(cPtr, false);
    return ret;
  }

  public void SetValue(double _arg) {
    vtkd_im.vtkClipPolyData_SetValue(cast(void*)swigCPtr, _arg);
  }

  public double GetValue() {
    auto ret = vtkd_im.vtkClipPolyData_GetValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInsideOut(int _arg) {
    vtkd_im.vtkClipPolyData_SetInsideOut(cast(void*)swigCPtr, _arg);
  }

  public int GetInsideOut() {
    auto ret = vtkd_im.vtkClipPolyData_GetInsideOut(cast(void*)swigCPtr);
    return ret;
  }

  public void InsideOutOn() {
    vtkd_im.vtkClipPolyData_InsideOutOn(cast(void*)swigCPtr);
  }

  public void InsideOutOff() {
    vtkd_im.vtkClipPolyData_InsideOutOff(cast(void*)swigCPtr);
  }

  public void SetClipFunction(vtkImplicitFunction.vtkImplicitFunction arg0) {
    vtkd_im.vtkClipPolyData_SetClipFunction(cast(void*)swigCPtr, vtkImplicitFunction.vtkImplicitFunction.swigGetCPtr(arg0));
  }

  public vtkImplicitFunction.vtkImplicitFunction GetClipFunction() {
    void* cPtr = vtkd_im.vtkClipPolyData_GetClipFunction(cast(void*)swigCPtr);
    vtkImplicitFunction.vtkImplicitFunction ret = (cPtr is null) ? null : new vtkImplicitFunction.vtkImplicitFunction(cPtr, false);
    return ret;
  }

  public void SetGenerateClipScalars(int _arg) {
    vtkd_im.vtkClipPolyData_SetGenerateClipScalars(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateClipScalars() {
    auto ret = vtkd_im.vtkClipPolyData_GetGenerateClipScalars(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateClipScalarsOn() {
    vtkd_im.vtkClipPolyData_GenerateClipScalarsOn(cast(void*)swigCPtr);
  }

  public void GenerateClipScalarsOff() {
    vtkd_im.vtkClipPolyData_GenerateClipScalarsOff(cast(void*)swigCPtr);
  }

  public void SetGenerateClippedOutput(int _arg) {
    vtkd_im.vtkClipPolyData_SetGenerateClippedOutput(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateClippedOutput() {
    auto ret = vtkd_im.vtkClipPolyData_GetGenerateClippedOutput(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateClippedOutputOn() {
    vtkd_im.vtkClipPolyData_GenerateClippedOutputOn(cast(void*)swigCPtr);
  }

  public void GenerateClippedOutputOff() {
    vtkd_im.vtkClipPolyData_GenerateClippedOutputOff(cast(void*)swigCPtr);
  }

  public vtkPolyData.vtkPolyData GetClippedOutput() {
    void* cPtr = vtkd_im.vtkClipPolyData_GetClippedOutput(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public vtkAlgorithmOutput.vtkAlgorithmOutput GetClippedOutputPort() {
    void* cPtr = vtkd_im.vtkClipPolyData_GetClippedOutputPort(cast(void*)swigCPtr);
    vtkAlgorithmOutput.vtkAlgorithmOutput ret = (cPtr is null) ? null : new vtkAlgorithmOutput.vtkAlgorithmOutput(cPtr, false);
    return ret;
  }

  public void SetLocator(vtkIncrementalPointLocator.vtkIncrementalPointLocator locator) {
    vtkd_im.vtkClipPolyData_SetLocator(cast(void*)swigCPtr, vtkIncrementalPointLocator.vtkIncrementalPointLocator.swigGetCPtr(locator));
  }

  public vtkIncrementalPointLocator.vtkIncrementalPointLocator GetLocator() {
    void* cPtr = vtkd_im.vtkClipPolyData_GetLocator(cast(void*)swigCPtr);
    vtkIncrementalPointLocator.vtkIncrementalPointLocator ret = (cPtr is null) ? null : new vtkIncrementalPointLocator.vtkIncrementalPointLocator(cPtr, false);
    return ret;
  }

  public void CreateDefaultLocator() {
    vtkd_im.vtkClipPolyData_CreateDefaultLocator(cast(void*)swigCPtr);
  }
}
