/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuadricClustering;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkFeatureEdges;
static import vtkPolyData;
static import vtkPolyDataAlgorithm;

class vtkQuadricClustering : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuadricClustering_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuadricClustering obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkQuadricClustering_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkQuadricClustering SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkQuadricClustering_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkQuadricClustering ret = (cPtr is null) ? null : new vtkQuadricClustering(cPtr, false);
    return ret;
  }

  public vtkQuadricClustering NewInstance() const {
    void* cPtr = vtkd_im.vtkQuadricClustering_NewInstance(cast(void*)swigCPtr);
    vtkQuadricClustering ret = (cPtr is null) ? null : new vtkQuadricClustering(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkQuadricClustering New() {
    void* cPtr = vtkd_im.vtkQuadricClustering_New();
    vtkQuadricClustering ret = (cPtr is null) ? null : new vtkQuadricClustering(cPtr, false);
    return ret;
  }

  public void SetNumberOfXDivisions(int num) {
    vtkd_im.vtkQuadricClustering_SetNumberOfXDivisions(cast(void*)swigCPtr, num);
  }

  public void SetNumberOfYDivisions(int num) {
    vtkd_im.vtkQuadricClustering_SetNumberOfYDivisions(cast(void*)swigCPtr, num);
  }

  public void SetNumberOfZDivisions(int num) {
    vtkd_im.vtkQuadricClustering_SetNumberOfZDivisions(cast(void*)swigCPtr, num);
  }

  public int GetNumberOfXDivisions() {
    auto ret = vtkd_im.vtkQuadricClustering_GetNumberOfXDivisions(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfYDivisions() {
    auto ret = vtkd_im.vtkQuadricClustering_GetNumberOfYDivisions(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfZDivisions() {
    auto ret = vtkd_im.vtkQuadricClustering_GetNumberOfZDivisions(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfDivisions(SWIGTYPE_p_int.SWIGTYPE_p_int div) {
    vtkd_im.vtkQuadricClustering_SetNumberOfDivisions__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(div));
  }

  public void SetNumberOfDivisions(int div0, int div1, int div2) {
    vtkd_im.vtkQuadricClustering_SetNumberOfDivisions__SWIG_1(cast(void*)swigCPtr, div0, div1, div2);
  }

  public int* GetNumberOfDivisions() {
    auto ret = cast(int*)vtkd_im.vtkQuadricClustering_GetNumberOfDivisions__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetNumberOfDivisions(SWIGTYPE_p_int.SWIGTYPE_p_int div) {
    vtkd_im.vtkQuadricClustering_GetNumberOfDivisions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(div));
  }

  public void SetAutoAdjustNumberOfDivisions(int _arg) {
    vtkd_im.vtkQuadricClustering_SetAutoAdjustNumberOfDivisions(cast(void*)swigCPtr, _arg);
  }

  public int GetAutoAdjustNumberOfDivisions() {
    auto ret = vtkd_im.vtkQuadricClustering_GetAutoAdjustNumberOfDivisions(cast(void*)swigCPtr);
    return ret;
  }

  public void AutoAdjustNumberOfDivisionsOn() {
    vtkd_im.vtkQuadricClustering_AutoAdjustNumberOfDivisionsOn(cast(void*)swigCPtr);
  }

  public void AutoAdjustNumberOfDivisionsOff() {
    vtkd_im.vtkQuadricClustering_AutoAdjustNumberOfDivisionsOff(cast(void*)swigCPtr);
  }

  public void SetDivisionOrigin(double x, double y, double z) {
    vtkd_im.vtkQuadricClustering_SetDivisionOrigin__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetDivisionOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double o) {
    vtkd_im.vtkQuadricClustering_SetDivisionOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(o));
  }

  public double* GetDivisionOrigin() {
    auto ret = cast(double*)vtkd_im.vtkQuadricClustering_GetDivisionOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDivisionOrigin(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkQuadricClustering_GetDivisionOrigin__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDivisionOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkQuadricClustering_GetDivisionOrigin__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetDivisionSpacing(double x, double y, double z) {
    vtkd_im.vtkQuadricClustering_SetDivisionSpacing__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetDivisionSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double s) {
    vtkd_im.vtkQuadricClustering_SetDivisionSpacing__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(s));
  }

  public double* GetDivisionSpacing() {
    auto ret = cast(double*)vtkd_im.vtkQuadricClustering_GetDivisionSpacing__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDivisionSpacing(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkQuadricClustering_GetDivisionSpacing__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDivisionSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkQuadricClustering_GetDivisionSpacing__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetUseInputPoints(int _arg) {
    vtkd_im.vtkQuadricClustering_SetUseInputPoints(cast(void*)swigCPtr, _arg);
  }

  public int GetUseInputPoints() {
    auto ret = vtkd_im.vtkQuadricClustering_GetUseInputPoints(cast(void*)swigCPtr);
    return ret;
  }

  public void UseInputPointsOn() {
    vtkd_im.vtkQuadricClustering_UseInputPointsOn(cast(void*)swigCPtr);
  }

  public void UseInputPointsOff() {
    vtkd_im.vtkQuadricClustering_UseInputPointsOff(cast(void*)swigCPtr);
  }

  public void SetUseFeatureEdges(int _arg) {
    vtkd_im.vtkQuadricClustering_SetUseFeatureEdges(cast(void*)swigCPtr, _arg);
  }

  public int GetUseFeatureEdges() {
    auto ret = vtkd_im.vtkQuadricClustering_GetUseFeatureEdges(cast(void*)swigCPtr);
    return ret;
  }

  public void UseFeatureEdgesOn() {
    vtkd_im.vtkQuadricClustering_UseFeatureEdgesOn(cast(void*)swigCPtr);
  }

  public void UseFeatureEdgesOff() {
    vtkd_im.vtkQuadricClustering_UseFeatureEdgesOff(cast(void*)swigCPtr);
  }

  public vtkFeatureEdges.vtkFeatureEdges GetFeatureEdges() {
    void* cPtr = vtkd_im.vtkQuadricClustering_GetFeatureEdges(cast(void*)swigCPtr);
    vtkFeatureEdges.vtkFeatureEdges ret = (cPtr is null) ? null : new vtkFeatureEdges.vtkFeatureEdges(cPtr, false);
    return ret;
  }

  public void SetUseFeaturePoints(int _arg) {
    vtkd_im.vtkQuadricClustering_SetUseFeaturePoints(cast(void*)swigCPtr, _arg);
  }

  public int GetUseFeaturePoints() {
    auto ret = vtkd_im.vtkQuadricClustering_GetUseFeaturePoints(cast(void*)swigCPtr);
    return ret;
  }

  public void UseFeaturePointsOn() {
    vtkd_im.vtkQuadricClustering_UseFeaturePointsOn(cast(void*)swigCPtr);
  }

  public void UseFeaturePointsOff() {
    vtkd_im.vtkQuadricClustering_UseFeaturePointsOff(cast(void*)swigCPtr);
  }

  public void SetFeaturePointsAngle(double _arg) {
    vtkd_im.vtkQuadricClustering_SetFeaturePointsAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetFeaturePointsAngleMinValue() {
    auto ret = vtkd_im.vtkQuadricClustering_GetFeaturePointsAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFeaturePointsAngleMaxValue() {
    auto ret = vtkd_im.vtkQuadricClustering_GetFeaturePointsAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFeaturePointsAngle() {
    auto ret = vtkd_im.vtkQuadricClustering_GetFeaturePointsAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseInternalTriangles(int _arg) {
    vtkd_im.vtkQuadricClustering_SetUseInternalTriangles(cast(void*)swigCPtr, _arg);
  }

  public int GetUseInternalTriangles() {
    auto ret = vtkd_im.vtkQuadricClustering_GetUseInternalTriangles(cast(void*)swigCPtr);
    return ret;
  }

  public void UseInternalTrianglesOn() {
    vtkd_im.vtkQuadricClustering_UseInternalTrianglesOn(cast(void*)swigCPtr);
  }

  public void UseInternalTrianglesOff() {
    vtkd_im.vtkQuadricClustering_UseInternalTrianglesOff(cast(void*)swigCPtr);
  }

  public void StartAppend(double* bounds) {
    vtkd_im.vtkQuadricClustering_StartAppend__SWIG_0(cast(void*)swigCPtr, cast(void*)bounds);
  }

  public void StartAppend(double x0, double x1, double y0, double y1, double z0, double z1) {
    vtkd_im.vtkQuadricClustering_StartAppend__SWIG_1(cast(void*)swigCPtr, x0, x1, y0, y1, z0, z1);
  }

  public void Append(vtkPolyData.vtkPolyData piece) {
    vtkd_im.vtkQuadricClustering_Append(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(piece));
  }

  public void EndAppend() {
    vtkd_im.vtkQuadricClustering_EndAppend(cast(void*)swigCPtr);
  }

  public void SetCopyCellData(int _arg) {
    vtkd_im.vtkQuadricClustering_SetCopyCellData(cast(void*)swigCPtr, _arg);
  }

  public int GetCopyCellData() {
    auto ret = vtkd_im.vtkQuadricClustering_GetCopyCellData(cast(void*)swigCPtr);
    return ret;
  }

  public void CopyCellDataOn() {
    vtkd_im.vtkQuadricClustering_CopyCellDataOn(cast(void*)swigCPtr);
  }

  public void CopyCellDataOff() {
    vtkd_im.vtkQuadricClustering_CopyCellDataOff(cast(void*)swigCPtr);
  }

  public void SetPreventDuplicateCells(int _arg) {
    vtkd_im.vtkQuadricClustering_SetPreventDuplicateCells(cast(void*)swigCPtr, _arg);
  }

  public int GetPreventDuplicateCells() {
    auto ret = vtkd_im.vtkQuadricClustering_GetPreventDuplicateCells(cast(void*)swigCPtr);
    return ret;
  }

  public void PreventDuplicateCellsOn() {
    vtkd_im.vtkQuadricClustering_PreventDuplicateCellsOn(cast(void*)swigCPtr);
  }

  public void PreventDuplicateCellsOff() {
    vtkd_im.vtkQuadricClustering_PreventDuplicateCellsOff(cast(void*)swigCPtr);
  }
}
