/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageStencilToImage;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageAlgorithm;

class vtkImageStencilToImage : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageStencilToImage_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageStencilToImage obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageStencilToImage New() {
    void* cPtr = vtkd_im.vtkImageStencilToImage_New();
    vtkImageStencilToImage ret = (cPtr is null) ? null : new vtkImageStencilToImage(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageStencilToImage_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageStencilToImage SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageStencilToImage_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageStencilToImage ret = (cPtr is null) ? null : new vtkImageStencilToImage(cPtr, false);
    return ret;
  }

  public vtkImageStencilToImage NewInstance() const {
    void* cPtr = vtkd_im.vtkImageStencilToImage_NewInstance(cast(void*)swigCPtr);
    vtkImageStencilToImage ret = (cPtr is null) ? null : new vtkImageStencilToImage(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void SetOutsideValue(double _arg) {
    vtkd_im.vtkImageStencilToImage_SetOutsideValue(cast(void*)swigCPtr, _arg);
  }

  public double GetOutsideValue() {
    auto ret = vtkd_im.vtkImageStencilToImage_GetOutsideValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInsideValue(double _arg) {
    vtkd_im.vtkImageStencilToImage_SetInsideValue(cast(void*)swigCPtr, _arg);
  }

  public double GetInsideValue() {
    auto ret = vtkd_im.vtkImageStencilToImage_GetInsideValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputScalarType(int _arg) {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarType(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputScalarType() {
    auto ret = vtkd_im.vtkImageStencilToImage_GetOutputScalarType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputScalarTypeToFloat() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToFloat(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToDouble() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToDouble(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToInt() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToInt(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedInt() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToUnsignedInt(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToLong() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToLong(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedLong() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToUnsignedLong(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToShort() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToShort(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedShort() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToUnsignedShort(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedChar() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToUnsignedChar(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToChar() {
    vtkd_im.vtkImageStencilToImage_SetOutputScalarTypeToChar(cast(void*)swigCPtr);
  }
}
