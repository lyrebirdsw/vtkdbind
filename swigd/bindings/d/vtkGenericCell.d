/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericCell;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkCell;

class vtkGenericCell : vtkCell.vtkCell {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericCell_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericCell obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGenericCell New() {
    void* cPtr = vtkd_im.vtkGenericCell_New();
    vtkGenericCell ret = (cPtr is null) ? null : new vtkGenericCell(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericCell_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericCell SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericCell_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericCell ret = (cPtr is null) ? null : new vtkGenericCell(cPtr, false);
    return ret;
  }

  public vtkGenericCell NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericCell_NewInstance(cast(void*)swigCPtr);
    vtkGenericCell ret = (cPtr is null) ? null : new vtkGenericCell(cPtr, false);
    return ret;
  }

  alias vtkCell.vtkCell.NewInstance NewInstance;

  public void InterpolateFunctions(SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    vtkd_im.vtkGenericCell_InterpolateFunctions(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
  }

  alias vtkCell.vtkCell.InterpolateFunctions InterpolateFunctions;

  public void InterpolateDerivs(SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* derivs) {
    vtkd_im.vtkGenericCell_InterpolateDerivs(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)derivs);
  }

  alias vtkCell.vtkCell.InterpolateDerivs InterpolateDerivs;

  public void SetCellType(int cellType) {
    vtkd_im.vtkGenericCell_SetCellType(cast(void*)swigCPtr, cellType);
  }

  public void SetCellTypeToEmptyCell() {
    vtkd_im.vtkGenericCell_SetCellTypeToEmptyCell(cast(void*)swigCPtr);
  }

  public void SetCellTypeToVertex() {
    vtkd_im.vtkGenericCell_SetCellTypeToVertex(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPolyVertex() {
    vtkd_im.vtkGenericCell_SetCellTypeToPolyVertex(cast(void*)swigCPtr);
  }

  public void SetCellTypeToLine() {
    vtkd_im.vtkGenericCell_SetCellTypeToLine(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPolyLine() {
    vtkd_im.vtkGenericCell_SetCellTypeToPolyLine(cast(void*)swigCPtr);
  }

  public void SetCellTypeToTriangle() {
    vtkd_im.vtkGenericCell_SetCellTypeToTriangle(cast(void*)swigCPtr);
  }

  public void SetCellTypeToTriangleStrip() {
    vtkd_im.vtkGenericCell_SetCellTypeToTriangleStrip(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPolygon() {
    vtkd_im.vtkGenericCell_SetCellTypeToPolygon(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPixel() {
    vtkd_im.vtkGenericCell_SetCellTypeToPixel(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuad() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuad(cast(void*)swigCPtr);
  }

  public void SetCellTypeToTetra() {
    vtkd_im.vtkGenericCell_SetCellTypeToTetra(cast(void*)swigCPtr);
  }

  public void SetCellTypeToVoxel() {
    vtkd_im.vtkGenericCell_SetCellTypeToVoxel(cast(void*)swigCPtr);
  }

  public void SetCellTypeToHexahedron() {
    vtkd_im.vtkGenericCell_SetCellTypeToHexahedron(cast(void*)swigCPtr);
  }

  public void SetCellTypeToWedge() {
    vtkd_im.vtkGenericCell_SetCellTypeToWedge(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPyramid() {
    vtkd_im.vtkGenericCell_SetCellTypeToPyramid(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPentagonalPrism() {
    vtkd_im.vtkGenericCell_SetCellTypeToPentagonalPrism(cast(void*)swigCPtr);
  }

  public void SetCellTypeToHexagonalPrism() {
    vtkd_im.vtkGenericCell_SetCellTypeToHexagonalPrism(cast(void*)swigCPtr);
  }

  public void SetCellTypeToPolyhedron() {
    vtkd_im.vtkGenericCell_SetCellTypeToPolyhedron(cast(void*)swigCPtr);
  }

  public void SetCellTypeToConvexPointSet() {
    vtkd_im.vtkGenericCell_SetCellTypeToConvexPointSet(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticEdge() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticEdge(cast(void*)swigCPtr);
  }

  public void SetCellTypeToCubicLine() {
    vtkd_im.vtkGenericCell_SetCellTypeToCubicLine(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticTriangle() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticTriangle(cast(void*)swigCPtr);
  }

  public void SetCellTypeToBiQuadraticTriangle() {
    vtkd_im.vtkGenericCell_SetCellTypeToBiQuadraticTriangle(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticQuad() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticQuad(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticTetra() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticTetra(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticHexahedron() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticHexahedron(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticWedge() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticWedge(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticPyramid() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticPyramid(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticLinearQuad() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticLinearQuad(cast(void*)swigCPtr);
  }

  public void SetCellTypeToBiQuadraticQuad() {
    vtkd_im.vtkGenericCell_SetCellTypeToBiQuadraticQuad(cast(void*)swigCPtr);
  }

  public void SetCellTypeToQuadraticLinearWedge() {
    vtkd_im.vtkGenericCell_SetCellTypeToQuadraticLinearWedge(cast(void*)swigCPtr);
  }

  public void SetCellTypeToBiQuadraticQuadraticWedge() {
    vtkd_im.vtkGenericCell_SetCellTypeToBiQuadraticQuadraticWedge(cast(void*)swigCPtr);
  }

  public void SetCellTypeToTriQuadraticHexahedron() {
    vtkd_im.vtkGenericCell_SetCellTypeToTriQuadraticHexahedron(cast(void*)swigCPtr);
  }

  public void SetCellTypeToBiQuadraticQuadraticHexahedron() {
    vtkd_im.vtkGenericCell_SetCellTypeToBiQuadraticQuadraticHexahedron(cast(void*)swigCPtr);
  }

  public static vtkCell.vtkCell InstantiateCell(int cellType) {
    void* cPtr = vtkd_im.vtkGenericCell_InstantiateCell(cellType);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }
}
