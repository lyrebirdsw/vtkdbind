/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkViewport;
static import vtkRenderer;
static import vtkMapper;
static import vtkWindow;
static import vtkProperty;
static import vtkTexture;
static import SWIGTYPE_p_double;
static import vtkProp3D;

class vtkActor : vtkProp3D.vtkProp3D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkActor ret = (cPtr is null) ? null : new vtkActor(cPtr, false);
    return ret;
  }

  public vtkActor NewInstance() const {
    void* cPtr = vtkd_im.vtkActor_NewInstance(cast(void*)swigCPtr);
    vtkActor ret = (cPtr is null) ? null : new vtkActor(cPtr, false);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.NewInstance NewInstance;

  public static vtkActor New() {
    void* cPtr = vtkd_im.vtkActor_New();
    vtkActor ret = (cPtr is null) ? null : new vtkActor(cPtr, false);
    return ret;
  }

  public int RenderOpaqueGeometry(vtkViewport.vtkViewport viewport) {
    auto ret = vtkd_im.vtkActor_RenderOpaqueGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
    return ret;
  }

  public int RenderTranslucentPolygonalGeometry(vtkViewport.vtkViewport viewport) {
    auto ret = vtkd_im.vtkActor_RenderTranslucentPolygonalGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
    return ret;
  }

  public int HasTranslucentPolygonalGeometry() {
    auto ret = vtkd_im.vtkActor_HasTranslucentPolygonalGeometry(cast(void*)swigCPtr);
    return ret;
  }

  public void Render(vtkRenderer.vtkRenderer arg0, vtkMapper.vtkMapper arg1) {
    vtkd_im.vtkActor_Render(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0), vtkMapper.vtkMapper.swigGetCPtr(arg1));
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  public void SetProperty(vtkProperty.vtkProperty lut) {
    vtkd_im.vtkActor_SetProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(lut));
  }

  public vtkProperty.vtkProperty GetProperty() {
    void* cPtr = vtkd_im.vtkActor_GetProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty MakeProperty() {
    void* cPtr = vtkd_im.vtkActor_MakeProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetBackfaceProperty(vtkProperty.vtkProperty lut) {
    vtkd_im.vtkActor_SetBackfaceProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(lut));
  }

  public vtkProperty.vtkProperty GetBackfaceProperty() {
    void* cPtr = vtkd_im.vtkActor_GetBackfaceProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetTexture(vtkTexture.vtkTexture arg0) {
    vtkd_im.vtkActor_SetTexture(cast(void*)swigCPtr, vtkTexture.vtkTexture.swigGetCPtr(arg0));
  }

  public vtkTexture.vtkTexture GetTexture() {
    void* cPtr = vtkd_im.vtkActor_GetTexture(cast(void*)swigCPtr);
    vtkTexture.vtkTexture ret = (cPtr is null) ? null : new vtkTexture.vtkTexture(cPtr, false);
    return ret;
  }

  public void SetMapper(vtkMapper.vtkMapper arg0) {
    vtkd_im.vtkActor_SetMapper(cast(void*)swigCPtr, vtkMapper.vtkMapper.swigGetCPtr(arg0));
  }

  public vtkMapper.vtkMapper GetMapper() {
    void* cPtr = vtkd_im.vtkActor_GetMapper(cast(void*)swigCPtr);
    vtkMapper.vtkMapper ret = (cPtr is null) ? null : new vtkMapper.vtkMapper(cPtr, false);
    return ret;
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkActor_GetBounds__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkActor_GetBounds__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.GetBounds GetBounds;

  public void ApplyProperties() {
    vtkd_im.vtkActor_ApplyProperties(cast(void*)swigCPtr);
  }

  public bool GetSupportsSelection() {
    bool ret = vtkd_im.vtkActor_GetSupportsSelection(cast(void*)swigCPtr) ? true : false;
    return ret;
  }
}
