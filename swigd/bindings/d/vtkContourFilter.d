/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkScalarTree;
static import vtkIncrementalPointLocator;
static import vtkPolyDataAlgorithm;

class vtkContourFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContourFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContourFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContourFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContourFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContourFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContourFilter ret = (cPtr is null) ? null : new vtkContourFilter(cPtr, false);
    return ret;
  }

  public vtkContourFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkContourFilter_NewInstance(cast(void*)swigCPtr);
    vtkContourFilter ret = (cPtr is null) ? null : new vtkContourFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkContourFilter New() {
    void* cPtr = vtkd_im.vtkContourFilter_New();
    vtkContourFilter ret = (cPtr is null) ? null : new vtkContourFilter(cPtr, false);
    return ret;
  }

  public void SetValue(int i, double value) {
    vtkd_im.vtkContourFilter_SetValue(cast(void*)swigCPtr, i, value);
  }

  public double GetValue(int i) {
    auto ret = vtkd_im.vtkContourFilter_GetValue(cast(void*)swigCPtr, i);
    return ret;
  }

  public double* GetValues() {
    auto ret = cast(double*)vtkd_im.vtkContourFilter_GetValues__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetValues(double* contourValues) {
    vtkd_im.vtkContourFilter_GetValues__SWIG_1(cast(void*)swigCPtr, cast(void*)contourValues);
  }

  public void SetNumberOfContours(int number) {
    vtkd_im.vtkContourFilter_SetNumberOfContours(cast(void*)swigCPtr, number);
  }

  public int GetNumberOfContours() {
    auto ret = vtkd_im.vtkContourFilter_GetNumberOfContours(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateValues(int numContours, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkContourFilter_GenerateValues__SWIG_0(cast(void*)swigCPtr, numContours, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public void GenerateValues(int numContours, double rangeStart, double rangeEnd) {
    vtkd_im.vtkContourFilter_GenerateValues__SWIG_1(cast(void*)swigCPtr, numContours, rangeStart, rangeEnd);
  }

  public void SetComputeNormals(int _arg) {
    vtkd_im.vtkContourFilter_SetComputeNormals(cast(void*)swigCPtr, _arg);
  }

  public int GetComputeNormals() {
    auto ret = vtkd_im.vtkContourFilter_GetComputeNormals(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeNormalsOn() {
    vtkd_im.vtkContourFilter_ComputeNormalsOn(cast(void*)swigCPtr);
  }

  public void ComputeNormalsOff() {
    vtkd_im.vtkContourFilter_ComputeNormalsOff(cast(void*)swigCPtr);
  }

  public void SetComputeGradients(int _arg) {
    vtkd_im.vtkContourFilter_SetComputeGradients(cast(void*)swigCPtr, _arg);
  }

  public int GetComputeGradients() {
    auto ret = vtkd_im.vtkContourFilter_GetComputeGradients(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeGradientsOn() {
    vtkd_im.vtkContourFilter_ComputeGradientsOn(cast(void*)swigCPtr);
  }

  public void ComputeGradientsOff() {
    vtkd_im.vtkContourFilter_ComputeGradientsOff(cast(void*)swigCPtr);
  }

  public void SetComputeScalars(int _arg) {
    vtkd_im.vtkContourFilter_SetComputeScalars(cast(void*)swigCPtr, _arg);
  }

  public int GetComputeScalars() {
    auto ret = vtkd_im.vtkContourFilter_GetComputeScalars(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeScalarsOn() {
    vtkd_im.vtkContourFilter_ComputeScalarsOn(cast(void*)swigCPtr);
  }

  public void ComputeScalarsOff() {
    vtkd_im.vtkContourFilter_ComputeScalarsOff(cast(void*)swigCPtr);
  }

  public void SetUseScalarTree(int _arg) {
    vtkd_im.vtkContourFilter_SetUseScalarTree(cast(void*)swigCPtr, _arg);
  }

  public int GetUseScalarTree() {
    auto ret = vtkd_im.vtkContourFilter_GetUseScalarTree(cast(void*)swigCPtr);
    return ret;
  }

  public void UseScalarTreeOn() {
    vtkd_im.vtkContourFilter_UseScalarTreeOn(cast(void*)swigCPtr);
  }

  public void UseScalarTreeOff() {
    vtkd_im.vtkContourFilter_UseScalarTreeOff(cast(void*)swigCPtr);
  }

  public void SetScalarTree(vtkScalarTree.vtkScalarTree arg0) {
    vtkd_im.vtkContourFilter_SetScalarTree(cast(void*)swigCPtr, vtkScalarTree.vtkScalarTree.swigGetCPtr(arg0));
  }

  public vtkScalarTree.vtkScalarTree GetScalarTree() {
    void* cPtr = vtkd_im.vtkContourFilter_GetScalarTree(cast(void*)swigCPtr);
    vtkScalarTree.vtkScalarTree ret = (cPtr is null) ? null : new vtkScalarTree.vtkScalarTree(cPtr, false);
    return ret;
  }

  public void SetLocator(vtkIncrementalPointLocator.vtkIncrementalPointLocator locator) {
    vtkd_im.vtkContourFilter_SetLocator(cast(void*)swigCPtr, vtkIncrementalPointLocator.vtkIncrementalPointLocator.swigGetCPtr(locator));
  }

  public vtkIncrementalPointLocator.vtkIncrementalPointLocator GetLocator() {
    void* cPtr = vtkd_im.vtkContourFilter_GetLocator(cast(void*)swigCPtr);
    vtkIncrementalPointLocator.vtkIncrementalPointLocator ret = (cPtr is null) ? null : new vtkIncrementalPointLocator.vtkIncrementalPointLocator(cPtr, false);
    return ret;
  }

  public void CreateDefaultLocator() {
    vtkd_im.vtkContourFilter_CreateDefaultLocator(cast(void*)swigCPtr);
  }

  public void SetArrayComponent(int arg0) {
    vtkd_im.vtkContourFilter_SetArrayComponent(cast(void*)swigCPtr, arg0);
  }

  public int GetArrayComponent() {
    auto ret = vtkd_im.vtkContourFilter_GetArrayComponent(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateTriangles(int _arg) {
    vtkd_im.vtkContourFilter_SetGenerateTriangles(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateTriangles() {
    auto ret = vtkd_im.vtkContourFilter_GetGenerateTriangles(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateTrianglesOn() {
    vtkd_im.vtkContourFilter_GenerateTrianglesOn(cast(void*)swigCPtr);
  }

  public void GenerateTrianglesOff() {
    vtkd_im.vtkContourFilter_GenerateTrianglesOff(cast(void*)swigCPtr);
  }

  public void SetOutputPointsPrecision(int precision) {
    vtkd_im.vtkContourFilter_SetOutputPointsPrecision(cast(void*)swigCPtr, precision);
  }

  public int GetOutputPointsPrecision() const {
    auto ret = vtkd_im.vtkContourFilter_GetOutputPointsPrecision(cast(void*)swigCPtr);
    return ret;
  }
}
