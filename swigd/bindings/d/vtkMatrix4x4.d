/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMatrix4x4;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_a_4__double;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_float;
static import vtkObject;

class vtkMatrix4x4 : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMatrix4x4_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMatrix4x4 obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public void Element(SWIGTYPE_p_a_4__double.SWIGTYPE_p_a_4__double value) @property {
    vtkd_im.vtkMatrix4x4_Element_set(cast(void*)swigCPtr, SWIGTYPE_p_a_4__double.SWIGTYPE_p_a_4__double.swigGetCPtr(value));
  }

  public SWIGTYPE_p_a_4__double.SWIGTYPE_p_a_4__double Element() @property const {
    void* cPtr = vtkd_im.vtkMatrix4x4_Element_get(cast(void*)swigCPtr);
    SWIGTYPE_p_a_4__double.SWIGTYPE_p_a_4__double ret = (cPtr is null) ? null : new SWIGTYPE_p_a_4__double.SWIGTYPE_p_a_4__double(cPtr, false);
    return ret;
  }

  public static vtkMatrix4x4 New() {
    void* cPtr = vtkd_im.vtkMatrix4x4_New();
    vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMatrix4x4_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMatrix4x4 SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMatrix4x4_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4 NewInstance() const {
    void* cPtr = vtkd_im.vtkMatrix4x4_NewInstance(cast(void*)swigCPtr);
    vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void DeepCopy(vtkMatrix4x4 source) {
    vtkd_im.vtkMatrix4x4_DeepCopy__SWIG_0(cast(void*)swigCPtr, vtkMatrix4x4.swigGetCPtr(source));
  }

  public void DeepCopy(SWIGTYPE_p_double.SWIGTYPE_p_double Elements) {
    vtkd_im.vtkMatrix4x4_DeepCopy__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(Elements));
  }

  public void Zero() {
    vtkd_im.vtkMatrix4x4_Zero(cast(void*)swigCPtr);
  }

  public void Identity() {
    vtkd_im.vtkMatrix4x4_Identity(cast(void*)swigCPtr);
  }

  public static void Invert(vtkMatrix4x4 arg0, vtkMatrix4x4 arg1) {
    vtkd_im.vtkMatrix4x4_Invert__SWIG_0(vtkMatrix4x4.swigGetCPtr(arg0), vtkMatrix4x4.swigGetCPtr(arg1));
  }

  public void Invert() {
    vtkd_im.vtkMatrix4x4_Invert__SWIG_1(cast(void*)swigCPtr);
  }

  public static void Transpose(vtkMatrix4x4 arg0, vtkMatrix4x4 arg1) {
    vtkd_im.vtkMatrix4x4_Transpose__SWIG_0(vtkMatrix4x4.swigGetCPtr(arg0), vtkMatrix4x4.swigGetCPtr(arg1));
  }

  public void Transpose() {
    vtkd_im.vtkMatrix4x4_Transpose__SWIG_1(cast(void*)swigCPtr);
  }

  public void MultiplyPoint(SWIGTYPE_p_float.SWIGTYPE_p_float arg0, SWIGTYPE_p_float.SWIGTYPE_p_float arg1) {
    vtkd_im.vtkMatrix4x4_MultiplyPoint__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg0), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg1));
  }

  public void MultiplyPoint(SWIGTYPE_p_double.SWIGTYPE_p_double arg0, SWIGTYPE_p_double.SWIGTYPE_p_double arg1) {
    vtkd_im.vtkMatrix4x4_MultiplyPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg0), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg1));
  }

  public float* MultiplyPoint(SWIGTYPE_p_float.SWIGTYPE_p_float arg0) {
    auto ret = cast(float*)vtkd_im.vtkMatrix4x4_MultiplyPoint__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg0));
    return ret;
  }

  public float* MultiplyFloatPoint(SWIGTYPE_p_float.SWIGTYPE_p_float arg0) {
    auto ret = cast(float*)vtkd_im.vtkMatrix4x4_MultiplyFloatPoint(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(arg0));
    return ret;
  }

  public double* MultiplyDoublePoint(SWIGTYPE_p_double.SWIGTYPE_p_double arg0) {
    auto ret = cast(double*)vtkd_im.vtkMatrix4x4_MultiplyDoublePoint(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(arg0));
    return ret;
  }

  public static void Multiply4x4(vtkMatrix4x4 a, vtkMatrix4x4 b, vtkMatrix4x4 c) {
    vtkd_im.vtkMatrix4x4_Multiply4x4(vtkMatrix4x4.swigGetCPtr(a), vtkMatrix4x4.swigGetCPtr(b), vtkMatrix4x4.swigGetCPtr(c));
  }

  public void Adjoint(vtkMatrix4x4 arg0, vtkMatrix4x4 arg1) {
    vtkd_im.vtkMatrix4x4_Adjoint(cast(void*)swigCPtr, vtkMatrix4x4.swigGetCPtr(arg0), vtkMatrix4x4.swigGetCPtr(arg1));
  }

  public double Determinant() {
    auto ret = vtkd_im.vtkMatrix4x4_Determinant(cast(void*)swigCPtr);
    return ret;
  }

  public void SetElement(int i, int j, double value) {
    vtkd_im.vtkMatrix4x4_SetElement(cast(void*)swigCPtr, i, j, value);
  }

  public double GetElement(int i, int j) const {
    auto ret = vtkd_im.vtkMatrix4x4_GetElement(cast(void*)swigCPtr, i, j);
    return ret;
  }
}
