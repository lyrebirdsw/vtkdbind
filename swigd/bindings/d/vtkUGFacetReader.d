/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkUGFacetReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkIncrementalPointLocator;
static import vtkPolyDataAlgorithm;

class vtkUGFacetReader : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkUGFacetReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkUGFacetReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkUGFacetReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkUGFacetReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkUGFacetReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkUGFacetReader ret = (cPtr is null) ? null : new vtkUGFacetReader(cPtr, false);
    return ret;
  }

  public vtkUGFacetReader NewInstance() const {
    void* cPtr = vtkd_im.vtkUGFacetReader_NewInstance(cast(void*)swigCPtr);
    vtkUGFacetReader ret = (cPtr is null) ? null : new vtkUGFacetReader(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkUGFacetReader New() {
    void* cPtr = vtkd_im.vtkUGFacetReader_New();
    vtkUGFacetReader ret = (cPtr is null) ? null : new vtkUGFacetReader(cPtr, false);
    return ret;
  }

  public void SetFileName(string _arg) {
    vtkd_im.vtkUGFacetReader_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkUGFacetReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public int GetNumberOfParts() {
    auto ret = vtkd_im.vtkUGFacetReader_GetNumberOfParts(cast(void*)swigCPtr);
    return ret;
  }

  public short GetPartColorIndex(int partId) {
    auto ret = vtkd_im.vtkUGFacetReader_GetPartColorIndex(cast(void*)swigCPtr, partId);
    return ret;
  }

  public void SetPartNumber(int _arg) {
    vtkd_im.vtkUGFacetReader_SetPartNumber(cast(void*)swigCPtr, _arg);
  }

  public int GetPartNumber() {
    auto ret = vtkd_im.vtkUGFacetReader_GetPartNumber(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMerging(int _arg) {
    vtkd_im.vtkUGFacetReader_SetMerging(cast(void*)swigCPtr, _arg);
  }

  public int GetMerging() {
    auto ret = vtkd_im.vtkUGFacetReader_GetMerging(cast(void*)swigCPtr);
    return ret;
  }

  public void MergingOn() {
    vtkd_im.vtkUGFacetReader_MergingOn(cast(void*)swigCPtr);
  }

  public void MergingOff() {
    vtkd_im.vtkUGFacetReader_MergingOff(cast(void*)swigCPtr);
  }

  public void SetLocator(vtkIncrementalPointLocator.vtkIncrementalPointLocator locator) {
    vtkd_im.vtkUGFacetReader_SetLocator(cast(void*)swigCPtr, vtkIncrementalPointLocator.vtkIncrementalPointLocator.swigGetCPtr(locator));
  }

  public vtkIncrementalPointLocator.vtkIncrementalPointLocator GetLocator() {
    void* cPtr = vtkd_im.vtkUGFacetReader_GetLocator(cast(void*)swigCPtr);
    vtkIncrementalPointLocator.vtkIncrementalPointLocator ret = (cPtr is null) ? null : new vtkIncrementalPointLocator.vtkIncrementalPointLocator(cPtr, false);
    return ret;
  }

  public void CreateDefaultLocator() {
    vtkd_im.vtkUGFacetReader_CreateDefaultLocator(cast(void*)swigCPtr);
  }
}
