/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataObjectWriter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStdString;
static import vtkWriter;

class vtkDataObjectWriter : vtkWriter.vtkWriter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataObjectWriter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataObjectWriter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDataObjectWriter New() {
    void* cPtr = vtkd_im.vtkDataObjectWriter_New();
    vtkDataObjectWriter ret = (cPtr is null) ? null : new vtkDataObjectWriter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataObjectWriter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataObjectWriter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataObjectWriter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataObjectWriter ret = (cPtr is null) ? null : new vtkDataObjectWriter(cPtr, false);
    return ret;
  }

  public vtkDataObjectWriter NewInstance() const {
    void* cPtr = vtkd_im.vtkDataObjectWriter_NewInstance(cast(void*)swigCPtr);
    vtkDataObjectWriter ret = (cPtr is null) ? null : new vtkDataObjectWriter(cPtr, false);
    return ret;
  }

  alias vtkWriter.vtkWriter.NewInstance NewInstance;

  public void SetFileName(string filename) {
    vtkd_im.vtkDataObjectWriter_SetFileName(cast(void*)swigCPtr, (filename ? std.string.toStringz(filename) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkDataObjectWriter_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetHeader(string header) {
    vtkd_im.vtkDataObjectWriter_SetHeader(cast(void*)swigCPtr, (header ? std.string.toStringz(header) : null));
  }

  public string GetHeader() {
    string ret = std.conv.to!string(vtkd_im.vtkDataObjectWriter_GetHeader(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileType(int type) {
    vtkd_im.vtkDataObjectWriter_SetFileType(cast(void*)swigCPtr, type);
  }

  public int GetFileType() {
    auto ret = vtkd_im.vtkDataObjectWriter_GetFileType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFileTypeToASCII() {
    vtkd_im.vtkDataObjectWriter_SetFileTypeToASCII(cast(void*)swigCPtr);
  }

  public void SetFileTypeToBinary() {
    vtkd_im.vtkDataObjectWriter_SetFileTypeToBinary(cast(void*)swigCPtr);
  }

  public void SetWriteToOutputString(int b) {
    vtkd_im.vtkDataObjectWriter_SetWriteToOutputString(cast(void*)swigCPtr, b);
  }

  public void WriteToOutputStringOn() {
    vtkd_im.vtkDataObjectWriter_WriteToOutputStringOn(cast(void*)swigCPtr);
  }

  public void WriteToOutputStringOff() {
    vtkd_im.vtkDataObjectWriter_WriteToOutputStringOff(cast(void*)swigCPtr);
  }

  public int GetWriteToOutputString() {
    auto ret = vtkd_im.vtkDataObjectWriter_GetWriteToOutputString(cast(void*)swigCPtr);
    return ret;
  }

  public string GetOutputString() {
    string ret = std.conv.to!string(vtkd_im.vtkDataObjectWriter_GetOutputString(cast(void*)swigCPtr));
    return ret;
  }

  public vtkStdString.vtkStdString GetOutputStdString() {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkDataObjectWriter_GetOutputStdString(cast(void*)swigCPtr), true);
    return ret;
  }

  public int GetOutputStringLength() {
    auto ret = vtkd_im.vtkDataObjectWriter_GetOutputStringLength(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte* GetBinaryOutputString() {
    auto ret = cast(ubyte*)vtkd_im.vtkDataObjectWriter_GetBinaryOutputString(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFieldDataName(string fieldname) {
    vtkd_im.vtkDataObjectWriter_SetFieldDataName(cast(void*)swigCPtr, (fieldname ? std.string.toStringz(fieldname) : null));
  }

  public string GetFieldDataName() {
    string ret = std.conv.to!string(vtkd_im.vtkDataObjectWriter_GetFieldDataName(cast(void*)swigCPtr));
    return ret;
  }
}
