/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMapArrayValues;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkVariant;
static import vtkPassInputTypeAlgorithm;

class vtkMapArrayValues : vtkPassInputTypeAlgorithm.vtkPassInputTypeAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMapArrayValues_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMapArrayValues obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMapArrayValues_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMapArrayValues SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMapArrayValues_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMapArrayValues ret = (cPtr is null) ? null : new vtkMapArrayValues(cPtr, false);
    return ret;
  }

  public vtkMapArrayValues NewInstance() const {
    void* cPtr = vtkd_im.vtkMapArrayValues_NewInstance(cast(void*)swigCPtr);
    vtkMapArrayValues ret = (cPtr is null) ? null : new vtkMapArrayValues(cPtr, false);
    return ret;
  }

  alias vtkPassInputTypeAlgorithm.vtkPassInputTypeAlgorithm.NewInstance NewInstance;

  public static vtkMapArrayValues New() {
    void* cPtr = vtkd_im.vtkMapArrayValues_New();
    vtkMapArrayValues ret = (cPtr is null) ? null : new vtkMapArrayValues(cPtr, false);
    return ret;
  }

  public void SetFieldType(int _arg) {
    vtkd_im.vtkMapArrayValues_SetFieldType(cast(void*)swigCPtr, _arg);
  }

  public int GetFieldType() {
    auto ret = vtkd_im.vtkMapArrayValues_GetFieldType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPassArray(int _arg) {
    vtkd_im.vtkMapArrayValues_SetPassArray(cast(void*)swigCPtr, _arg);
  }

  public int GetPassArray() {
    auto ret = vtkd_im.vtkMapArrayValues_GetPassArray(cast(void*)swigCPtr);
    return ret;
  }

  public void PassArrayOn() {
    vtkd_im.vtkMapArrayValues_PassArrayOn(cast(void*)swigCPtr);
  }

  public void PassArrayOff() {
    vtkd_im.vtkMapArrayValues_PassArrayOff(cast(void*)swigCPtr);
  }

  public void SetFillValue(double _arg) {
    vtkd_im.vtkMapArrayValues_SetFillValue(cast(void*)swigCPtr, _arg);
  }

  public double GetFillValue() {
    auto ret = vtkd_im.vtkMapArrayValues_GetFillValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInputArrayName(string _arg) {
    vtkd_im.vtkMapArrayValues_SetInputArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetInputArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkMapArrayValues_GetInputArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetOutputArrayName(string _arg) {
    vtkd_im.vtkMapArrayValues_SetOutputArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetOutputArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkMapArrayValues_GetOutputArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public int GetOutputArrayType() {
    auto ret = vtkd_im.vtkMapArrayValues_GetOutputArrayType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputArrayType(int _arg) {
    vtkd_im.vtkMapArrayValues_SetOutputArrayType(cast(void*)swigCPtr, _arg);
  }

  public void AddToMap(vtkVariant.vtkVariant from, vtkVariant.vtkVariant to) {
    vtkd_im.vtkMapArrayValues_AddToMap__SWIG_0(cast(void*)swigCPtr, vtkVariant.vtkVariant.swigGetCPtr(from), vtkVariant.vtkVariant.swigGetCPtr(to));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void AddToMap(int from, int to) {
    vtkd_im.vtkMapArrayValues_AddToMap__SWIG_1(cast(void*)swigCPtr, from, to);
  }

  public void AddToMap(int from, string to) {
    vtkd_im.vtkMapArrayValues_AddToMap__SWIG_2(cast(void*)swigCPtr, from, (to ? std.string.toStringz(to) : null));
  }

  public void AddToMap(string from, int to) {
    vtkd_im.vtkMapArrayValues_AddToMap__SWIG_3(cast(void*)swigCPtr, (from ? std.string.toStringz(from) : null), to);
  }

  public void AddToMap(string from, string to) {
    vtkd_im.vtkMapArrayValues_AddToMap__SWIG_4(cast(void*)swigCPtr, (from ? std.string.toStringz(from) : null), (to ? std.string.toStringz(to) : null));
  }

  public void ClearMap() {
    vtkd_im.vtkMapArrayValues_ClearMap(cast(void*)swigCPtr);
  }

  public int GetMapSize() {
    auto ret = vtkd_im.vtkMapArrayValues_GetMapSize(cast(void*)swigCPtr);
    return ret;
  }
}
