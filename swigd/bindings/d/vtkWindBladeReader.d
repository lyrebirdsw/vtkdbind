/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkWindBladeReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkStructuredGrid;
static import vtkUnstructuredGrid;
static import vtkStructuredGridAlgorithm;

class vtkWindBladeReader : vtkStructuredGridAlgorithm.vtkStructuredGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkWindBladeReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkWindBladeReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkWindBladeReader New() {
    void* cPtr = vtkd_im.vtkWindBladeReader_New();
    vtkWindBladeReader ret = (cPtr is null) ? null : new vtkWindBladeReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkWindBladeReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkWindBladeReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkWindBladeReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkWindBladeReader ret = (cPtr is null) ? null : new vtkWindBladeReader(cPtr, false);
    return ret;
  }

  public vtkWindBladeReader NewInstance() const {
    void* cPtr = vtkd_im.vtkWindBladeReader_NewInstance(cast(void*)swigCPtr);
    vtkWindBladeReader ret = (cPtr is null) ? null : new vtkWindBladeReader(cPtr, false);
    return ret;
  }

  alias vtkStructuredGridAlgorithm.vtkStructuredGridAlgorithm.NewInstance NewInstance;

  public void SetFilename(string _arg) {
    vtkd_im.vtkWindBladeReader_SetFilename(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFilename() {
    string ret = std.conv.to!string(vtkd_im.vtkWindBladeReader_GetFilename(cast(void*)swigCPtr));
    return ret;
  }

  public void SetWholeExtent(int _arg1, int _arg2, int _arg3, int _arg4, int _arg5, int _arg6) {
    vtkd_im.vtkWindBladeReader_SetWholeExtent__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetWholeExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkWindBladeReader_SetWholeExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetWholeExtent() {
    auto ret = cast(int*)vtkd_im.vtkWindBladeReader_GetWholeExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetWholeExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkWindBladeReader_GetWholeExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetWholeExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkWindBladeReader_GetWholeExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetSubExtent(int _arg1, int _arg2, int _arg3, int _arg4, int _arg5, int _arg6) {
    vtkd_im.vtkWindBladeReader_SetSubExtent__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetSubExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkWindBladeReader_SetSubExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetSubExtent() {
    auto ret = cast(int*)vtkd_im.vtkWindBladeReader_GetSubExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSubExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkWindBladeReader_GetSubExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSubExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkWindBladeReader_GetSubExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public vtkStructuredGrid.vtkStructuredGrid GetFieldOutput() {
    void* cPtr = vtkd_im.vtkWindBladeReader_GetFieldOutput(cast(void*)swigCPtr);
    vtkStructuredGrid.vtkStructuredGrid ret = (cPtr is null) ? null : new vtkStructuredGrid.vtkStructuredGrid(cPtr, false);
    return ret;
  }

  public vtkUnstructuredGrid.vtkUnstructuredGrid GetBladeOutput() {
    void* cPtr = vtkd_im.vtkWindBladeReader_GetBladeOutput(cast(void*)swigCPtr);
    vtkUnstructuredGrid.vtkUnstructuredGrid ret = (cPtr is null) ? null : new vtkUnstructuredGrid.vtkUnstructuredGrid(cPtr, false);
    return ret;
  }

  public vtkStructuredGrid.vtkStructuredGrid GetGroundOutput() {
    void* cPtr = vtkd_im.vtkWindBladeReader_GetGroundOutput(cast(void*)swigCPtr);
    vtkStructuredGrid.vtkStructuredGrid ret = (cPtr is null) ? null : new vtkStructuredGrid.vtkStructuredGrid(cPtr, false);
    return ret;
  }

  public int GetNumberOfPointArrays() {
    auto ret = vtkd_im.vtkWindBladeReader_GetNumberOfPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public string GetPointArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkWindBladeReader_GetPointArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public int GetPointArrayStatus(string name) {
    auto ret = vtkd_im.vtkWindBladeReader_GetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPointArrayStatus(string name, int status) {
    vtkd_im.vtkWindBladeReader_SetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void DisableAllPointArrays() {
    vtkd_im.vtkWindBladeReader_DisableAllPointArrays(cast(void*)swigCPtr);
  }

  public void EnableAllPointArrays() {
    vtkd_im.vtkWindBladeReader_EnableAllPointArrays(cast(void*)swigCPtr);
  }
}
