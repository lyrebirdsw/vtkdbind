/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkExtentRCBPartitioner;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkObject;

class vtkExtentRCBPartitioner : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkExtentRCBPartitioner_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkExtentRCBPartitioner obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkExtentRCBPartitioner New() {
    void* cPtr = vtkd_im.vtkExtentRCBPartitioner_New();
    vtkExtentRCBPartitioner ret = (cPtr is null) ? null : new vtkExtentRCBPartitioner(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkExtentRCBPartitioner_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkExtentRCBPartitioner SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkExtentRCBPartitioner_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkExtentRCBPartitioner ret = (cPtr is null) ? null : new vtkExtentRCBPartitioner(cPtr, false);
    return ret;
  }

  public vtkExtentRCBPartitioner NewInstance() const {
    void* cPtr = vtkd_im.vtkExtentRCBPartitioner_NewInstance(cast(void*)swigCPtr);
    vtkExtentRCBPartitioner ret = (cPtr is null) ? null : new vtkExtentRCBPartitioner(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetNumberOfPartitions(int N) {
    vtkd_im.vtkExtentRCBPartitioner_SetNumberOfPartitions(cast(void*)swigCPtr, N);
  }

  public void SetGlobalExtent(int imin, int imax, int jmin, int jmax, int kmin, int kmax) {
    vtkd_im.vtkExtentRCBPartitioner_SetGlobalExtent__SWIG_0(cast(void*)swigCPtr, imin, imax, jmin, jmax, kmin, kmax);
  }

  public void SetGlobalExtent(SWIGTYPE_p_int.SWIGTYPE_p_int ext) {
    vtkd_im.vtkExtentRCBPartitioner_SetGlobalExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ext));
  }

  public void SetNumberOfGhostLayers(int _arg) {
    vtkd_im.vtkExtentRCBPartitioner_SetNumberOfGhostLayers(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfGhostLayers() {
    auto ret = vtkd_im.vtkExtentRCBPartitioner_GetNumberOfGhostLayers(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumExtents() {
    auto ret = vtkd_im.vtkExtentRCBPartitioner_GetNumExtents(cast(void*)swigCPtr);
    return ret;
  }

  public void Partition() {
    vtkd_im.vtkExtentRCBPartitioner_Partition(cast(void*)swigCPtr);
  }

  public void GetPartitionExtent(int idx, SWIGTYPE_p_int.SWIGTYPE_p_int ext) {
    vtkd_im.vtkExtentRCBPartitioner_GetPartitionExtent(cast(void*)swigCPtr, idx, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(ext));
  }
}
