/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourTriangulator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkIdList;
static import vtkPoints;
static import vtkCellArray;
static import vtkPolyData;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkContourTriangulator : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContourTriangulator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContourTriangulator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkContourTriangulator New() {
    void* cPtr = vtkd_im.vtkContourTriangulator_New();
    vtkContourTriangulator ret = (cPtr is null) ? null : new vtkContourTriangulator(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContourTriangulator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContourTriangulator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContourTriangulator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContourTriangulator ret = (cPtr is null) ? null : new vtkContourTriangulator(cPtr, false);
    return ret;
  }

  public vtkContourTriangulator NewInstance() const {
    void* cPtr = vtkd_im.vtkContourTriangulator_NewInstance(cast(void*)swigCPtr);
    vtkContourTriangulator ret = (cPtr is null) ? null : new vtkContourTriangulator(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public int GetTriangulationError() {
    auto ret = vtkd_im.vtkContourTriangulator_GetTriangulationError(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTriangulationErrorDisplay(int _arg) {
    vtkd_im.vtkContourTriangulator_SetTriangulationErrorDisplay(cast(void*)swigCPtr, _arg);
  }

  public void TriangulationErrorDisplayOn() {
    vtkd_im.vtkContourTriangulator_TriangulationErrorDisplayOn(cast(void*)swigCPtr);
  }

  public void TriangulationErrorDisplayOff() {
    vtkd_im.vtkContourTriangulator_TriangulationErrorDisplayOff(cast(void*)swigCPtr);
  }

  public int GetTriangulationErrorDisplay() {
    auto ret = vtkd_im.vtkContourTriangulator_GetTriangulationErrorDisplay(cast(void*)swigCPtr);
    return ret;
  }

  public static int TriangulatePolygon(vtkIdList.vtkIdList polygon, vtkPoints.vtkPoints points, vtkCellArray.vtkCellArray triangles) {
    auto ret = vtkd_im.vtkContourTriangulator_TriangulatePolygon(vtkIdList.vtkIdList.swigGetCPtr(polygon), vtkPoints.vtkPoints.swigGetCPtr(points), vtkCellArray.vtkCellArray.swigGetCPtr(triangles));
    return ret;
  }

  public static int TriangulateContours(vtkPolyData.vtkPolyData data, long firstLine, long numLines, vtkCellArray.vtkCellArray outputPolys, SWIGTYPE_p_double.SWIGTYPE_p_double normal) {
    auto ret = vtkd_im.vtkContourTriangulator_TriangulateContours(vtkPolyData.vtkPolyData.swigGetCPtr(data), firstLine, numLines, vtkCellArray.vtkCellArray.swigGetCPtr(outputPolys), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(normal));
    return ret;
  }
}
