/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkStructuredVisibilityConstraint;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkUnsignedCharArray;
static import vtkObject;

class vtkStructuredVisibilityConstraint : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkStructuredVisibilityConstraint_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkStructuredVisibilityConstraint obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkStructuredVisibilityConstraint New() {
    void* cPtr = vtkd_im.vtkStructuredVisibilityConstraint_New();
    vtkStructuredVisibilityConstraint ret = (cPtr is null) ? null : new vtkStructuredVisibilityConstraint(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkStructuredVisibilityConstraint_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkStructuredVisibilityConstraint SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkStructuredVisibilityConstraint_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkStructuredVisibilityConstraint ret = (cPtr is null) ? null : new vtkStructuredVisibilityConstraint(cPtr, false);
    return ret;
  }

  public vtkStructuredVisibilityConstraint NewInstance() const {
    void* cPtr = vtkd_im.vtkStructuredVisibilityConstraint_NewInstance(cast(void*)swigCPtr);
    vtkStructuredVisibilityConstraint ret = (cPtr is null) ? null : new vtkStructuredVisibilityConstraint(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public ubyte IsVisible(long id) {
    auto ret = vtkd_im.vtkStructuredVisibilityConstraint_IsVisible(cast(void*)swigCPtr, id);
    return ret;
  }

  public void Blank(long id) {
    vtkd_im.vtkStructuredVisibilityConstraint_Blank(cast(void*)swigCPtr, id);
  }

  public void UnBlank(long id) {
    vtkd_im.vtkStructuredVisibilityConstraint_UnBlank(cast(void*)swigCPtr, id);
  }

  public int* GetDimensions() {
    auto ret = cast(int*)vtkd_im.vtkStructuredVisibilityConstraint_GetDimensions__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDimensions(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkStructuredVisibilityConstraint_GetDimensions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public void Initialize(SWIGTYPE_p_int.SWIGTYPE_p_int dims) {
    vtkd_im.vtkStructuredVisibilityConstraint_Initialize(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(dims));
  }

  public void Allocate() {
    vtkd_im.vtkStructuredVisibilityConstraint_Allocate(cast(void*)swigCPtr);
  }

  public void SetVisibilityById(vtkUnsignedCharArray.vtkUnsignedCharArray vis) {
    vtkd_im.vtkStructuredVisibilityConstraint_SetVisibilityById(cast(void*)swigCPtr, vtkUnsignedCharArray.vtkUnsignedCharArray.swigGetCPtr(vis));
  }

  public vtkUnsignedCharArray.vtkUnsignedCharArray GetVisibilityById() {
    void* cPtr = vtkd_im.vtkStructuredVisibilityConstraint_GetVisibilityById(cast(void*)swigCPtr);
    vtkUnsignedCharArray.vtkUnsignedCharArray ret = (cPtr is null) ? null : new vtkUnsignedCharArray.vtkUnsignedCharArray(cPtr, false);
    return ret;
  }

  public void ShallowCopy(vtkStructuredVisibilityConstraint src) {
    vtkd_im.vtkStructuredVisibilityConstraint_ShallowCopy(cast(void*)swigCPtr, vtkStructuredVisibilityConstraint.swigGetCPtr(src));
  }

  public void DeepCopy(vtkStructuredVisibilityConstraint src) {
    vtkd_im.vtkStructuredVisibilityConstraint_DeepCopy(cast(void*)swigCPtr, vtkStructuredVisibilityConstraint.swigGetCPtr(src));
  }

  public ubyte IsConstrained() {
    auto ret = vtkd_im.vtkStructuredVisibilityConstraint_IsConstrained(cast(void*)swigCPtr);
    return ret;
  }
}
