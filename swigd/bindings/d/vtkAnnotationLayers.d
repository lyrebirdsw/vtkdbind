/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAnnotationLayers;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAnnotation;
static import vtkSelection;
static import vtkInformation;
static import vtkInformationVector;
static import vtkDataObject;

class vtkAnnotationLayers : vtkDataObject.vtkDataObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAnnotationLayers_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAnnotationLayers obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkAnnotationLayers(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAnnotationLayers_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAnnotationLayers SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAnnotationLayers_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public vtkAnnotationLayers NewInstance() const {
    void* cPtr = vtkd_im.vtkAnnotationLayers_NewInstance(cast(void*)swigCPtr);
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  alias vtkDataObject.vtkDataObject.NewInstance NewInstance;

  public static vtkAnnotationLayers New() {
    void* cPtr = vtkd_im.vtkAnnotationLayers_New();
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public void SetCurrentAnnotation(vtkAnnotation.vtkAnnotation ann) {
    vtkd_im.vtkAnnotationLayers_SetCurrentAnnotation(cast(void*)swigCPtr, vtkAnnotation.vtkAnnotation.swigGetCPtr(ann));
  }

  public vtkAnnotation.vtkAnnotation GetCurrentAnnotation() {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetCurrentAnnotation(cast(void*)swigCPtr);
    vtkAnnotation.vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation.vtkAnnotation(cPtr, false);
    return ret;
  }

  public void SetCurrentSelection(vtkSelection.vtkSelection sel) {
    vtkd_im.vtkAnnotationLayers_SetCurrentSelection(cast(void*)swigCPtr, vtkSelection.vtkSelection.swigGetCPtr(sel));
  }

  public vtkSelection.vtkSelection GetCurrentSelection() {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetCurrentSelection(cast(void*)swigCPtr);
    vtkSelection.vtkSelection ret = (cPtr is null) ? null : new vtkSelection.vtkSelection(cPtr, false);
    return ret;
  }

  public uint GetNumberOfAnnotations() {
    auto ret = vtkd_im.vtkAnnotationLayers_GetNumberOfAnnotations(cast(void*)swigCPtr);
    return ret;
  }

  public vtkAnnotation.vtkAnnotation GetAnnotation(uint idx) {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetAnnotation(cast(void*)swigCPtr, idx);
    vtkAnnotation.vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation.vtkAnnotation(cPtr, false);
    return ret;
  }

  public void AddAnnotation(vtkAnnotation.vtkAnnotation ann) {
    vtkd_im.vtkAnnotationLayers_AddAnnotation(cast(void*)swigCPtr, vtkAnnotation.vtkAnnotation.swigGetCPtr(ann));
  }

  public void RemoveAnnotation(vtkAnnotation.vtkAnnotation ann) {
    vtkd_im.vtkAnnotationLayers_RemoveAnnotation(cast(void*)swigCPtr, vtkAnnotation.vtkAnnotation.swigGetCPtr(ann));
  }

  public static vtkAnnotationLayers GetData(vtkInformation.vtkInformation info) {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetData__SWIG_0(vtkInformation.vtkInformation.swigGetCPtr(info));
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public static vtkAnnotationLayers GetData(vtkInformationVector.vtkInformationVector v, int i) {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetData__SWIG_1(vtkInformationVector.vtkInformationVector.swigGetCPtr(v), i);
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public static vtkAnnotationLayers GetData(vtkInformationVector.vtkInformationVector v) {
    void* cPtr = vtkd_im.vtkAnnotationLayers_GetData__SWIG_2(vtkInformationVector.vtkInformationVector.swigGetCPtr(v));
    vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkAnnotationLayers(), true);
  }
}
