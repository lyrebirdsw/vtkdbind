/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageCroppingRegionsWidget;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_float;
static import vtkVolumeMapper;
static import vtk3DWidget;

class vtkImageCroppingRegionsWidget : vtk3DWidget.vtk3DWidget {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageCroppingRegionsWidget_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageCroppingRegionsWidget obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageCroppingRegionsWidget New() {
    void* cPtr = vtkd_im.vtkImageCroppingRegionsWidget_New();
    vtkImageCroppingRegionsWidget ret = (cPtr is null) ? null : new vtkImageCroppingRegionsWidget(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageCroppingRegionsWidget_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageCroppingRegionsWidget SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageCroppingRegionsWidget_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageCroppingRegionsWidget ret = (cPtr is null) ? null : new vtkImageCroppingRegionsWidget(cPtr, false);
    return ret;
  }

  public vtkImageCroppingRegionsWidget NewInstance() const {
    void* cPtr = vtkd_im.vtkImageCroppingRegionsWidget_NewInstance(cast(void*)swigCPtr);
    vtkImageCroppingRegionsWidget ret = (cPtr is null) ? null : new vtkImageCroppingRegionsWidget(cPtr, false);
    return ret;
  }

  alias vtk3DWidget.vtk3DWidget.NewInstance NewInstance;

  public override void PlaceWidget() {
    vtkd_im.vtkImageCroppingRegionsWidget_PlaceWidget__SWIG_0_0(cast(void*)swigCPtr);
  }

  public override void PlaceWidget(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) {
    vtkd_im.vtkImageCroppingRegionsWidget_PlaceWidget__SWIG_0_1(cast(void*)swigCPtr, xmin, xmax, ymin, ymax, zmin, zmax);
  }

  public override void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkImageCroppingRegionsWidget_PlaceWidget__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public double* GetPlanePositions() {
    auto ret = cast(double*)vtkd_im.vtkImageCroppingRegionsWidget_GetPlanePositions__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPlanePositions(double* _arg1, double* _arg2, double* _arg3, double* _arg4, double* _arg5, double* _arg6) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetPlanePositions__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetPlanePositions(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetPlanePositions__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetPlanePositions(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetPlanePositions__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPlanePositions(SWIGTYPE_p_float.SWIGTYPE_p_float pos) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetPlanePositions__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(pos));
  }

  public void SetPlanePositions(double xMin, double xMax, double yMin, double yMax, double zMin, double zMax) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetPlanePositions__SWIG_2(cast(void*)swigCPtr, xMin, xMax, yMin, yMax, zMin, zMax);
  }

  public void SetCroppingRegionFlags(int flags) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetCroppingRegionFlags(cast(void*)swigCPtr, flags);
  }

  public int GetCroppingRegionFlags() {
    auto ret = vtkd_im.vtkImageCroppingRegionsWidget_GetCroppingRegionFlags(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSliceOrientation() {
    auto ret = vtkd_im.vtkImageCroppingRegionsWidget_GetSliceOrientation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSliceOrientation(int orientation) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetSliceOrientation(cast(void*)swigCPtr, orientation);
  }

  public void SetSliceOrientationToXY() {
    vtkd_im.vtkImageCroppingRegionsWidget_SetSliceOrientationToXY(cast(void*)swigCPtr);
  }

  public void SetSliceOrientationToYZ() {
    vtkd_im.vtkImageCroppingRegionsWidget_SetSliceOrientationToYZ(cast(void*)swigCPtr);
  }

  public void SetSliceOrientationToXZ() {
    vtkd_im.vtkImageCroppingRegionsWidget_SetSliceOrientationToXZ(cast(void*)swigCPtr);
  }

  public void SetSlice(int num) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetSlice(cast(void*)swigCPtr, num);
  }

  public int GetSlice() {
    auto ret = vtkd_im.vtkImageCroppingRegionsWidget_GetSlice(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLine1Color(double r, double g, double b) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine1Color__SWIG_0(cast(void*)swigCPtr, r, g, b);
  }

  public void SetLine1Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine1Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public double* GetLine1Color() {
    auto ret = cast(double*)vtkd_im.vtkImageCroppingRegionsWidget_GetLine1Color__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetLine1Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetLine1Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public void SetLine2Color(double r, double g, double b) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine2Color__SWIG_0(cast(void*)swigCPtr, r, g, b);
  }

  public void SetLine2Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine2Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public double* GetLine2Color() {
    auto ret = cast(double*)vtkd_im.vtkImageCroppingRegionsWidget_GetLine2Color__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetLine2Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetLine2Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public void SetLine3Color(double r, double g, double b) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine3Color__SWIG_0(cast(void*)swigCPtr, r, g, b);
  }

  public void SetLine3Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine3Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public double* GetLine3Color() {
    auto ret = cast(double*)vtkd_im.vtkImageCroppingRegionsWidget_GetLine3Color__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetLine3Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetLine3Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public void SetLine4Color(double r, double g, double b) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine4Color__SWIG_0(cast(void*)swigCPtr, r, g, b);
  }

  public void SetLine4Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetLine4Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public double* GetLine4Color() {
    auto ret = cast(double*)vtkd_im.vtkImageCroppingRegionsWidget_GetLine4Color__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetLine4Color(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkImageCroppingRegionsWidget_GetLine4Color__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public void SetVolumeMapper(vtkVolumeMapper.vtkVolumeMapper mapper) {
    vtkd_im.vtkImageCroppingRegionsWidget_SetVolumeMapper(cast(void*)swigCPtr, vtkVolumeMapper.vtkVolumeMapper.swigGetCPtr(mapper));
  }

  public vtkVolumeMapper.vtkVolumeMapper GetVolumeMapper() {
    void* cPtr = vtkd_im.vtkImageCroppingRegionsWidget_GetVolumeMapper(cast(void*)swigCPtr);
    vtkVolumeMapper.vtkVolumeMapper ret = (cPtr is null) ? null : new vtkVolumeMapper.vtkVolumeMapper(cPtr, false);
    return ret;
  }

  public void UpdateAccordingToInput() {
    vtkd_im.vtkImageCroppingRegionsWidget_UpdateAccordingToInput(cast(void*)swigCPtr);
  }

  public void MoveHorizontalLine() {
    vtkd_im.vtkImageCroppingRegionsWidget_MoveHorizontalLine(cast(void*)swigCPtr);
  }

  public void MoveVerticalLine() {
    vtkd_im.vtkImageCroppingRegionsWidget_MoveVerticalLine(cast(void*)swigCPtr);
  }

  public void MoveIntersectingLines() {
    vtkd_im.vtkImageCroppingRegionsWidget_MoveIntersectingLines(cast(void*)swigCPtr);
  }

  public void UpdateCursorIcon() {
    vtkd_im.vtkImageCroppingRegionsWidget_UpdateCursorIcon(cast(void*)swigCPtr);
  }

  public void OnButtonPress() {
    vtkd_im.vtkImageCroppingRegionsWidget_OnButtonPress(cast(void*)swigCPtr);
  }

  public void OnButtonRelease() {
    vtkd_im.vtkImageCroppingRegionsWidget_OnButtonRelease(cast(void*)swigCPtr);
  }

  public void OnMouseMove() {
    vtkd_im.vtkImageCroppingRegionsWidget_OnMouseMove(cast(void*)swigCPtr);
  }
}
