/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkExtractSelectedFrustum;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPlanes;
static import SWIGTYPE_p_double;
static import vtkPoints;
static import vtkExtractSelectionBase;

class vtkExtractSelectedFrustum : vtkExtractSelectionBase.vtkExtractSelectionBase {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkExtractSelectedFrustum_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkExtractSelectedFrustum obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkExtractSelectedFrustum New() {
    void* cPtr = vtkd_im.vtkExtractSelectedFrustum_New();
    vtkExtractSelectedFrustum ret = (cPtr is null) ? null : new vtkExtractSelectedFrustum(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkExtractSelectedFrustum SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkExtractSelectedFrustum_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkExtractSelectedFrustum ret = (cPtr is null) ? null : new vtkExtractSelectedFrustum(cPtr, false);
    return ret;
  }

  public vtkExtractSelectedFrustum NewInstance() const {
    void* cPtr = vtkd_im.vtkExtractSelectedFrustum_NewInstance(cast(void*)swigCPtr);
    vtkExtractSelectedFrustum ret = (cPtr is null) ? null : new vtkExtractSelectedFrustum(cPtr, false);
    return ret;
  }

  alias vtkExtractSelectionBase.vtkExtractSelectionBase.NewInstance NewInstance;

  public void SetFrustum(vtkPlanes.vtkPlanes arg0) {
    vtkd_im.vtkExtractSelectedFrustum_SetFrustum(cast(void*)swigCPtr, vtkPlanes.vtkPlanes.swigGetCPtr(arg0));
  }

  public vtkPlanes.vtkPlanes GetFrustum() {
    void* cPtr = vtkd_im.vtkExtractSelectedFrustum_GetFrustum(cast(void*)swigCPtr);
    vtkPlanes.vtkPlanes ret = (cPtr is null) ? null : new vtkPlanes.vtkPlanes(cPtr, false);
    return ret;
  }

  public void CreateFrustum(SWIGTYPE_p_double.SWIGTYPE_p_double vertices) {
    vtkd_im.vtkExtractSelectedFrustum_CreateFrustum(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(vertices));
  }

  public vtkPoints.vtkPoints GetClipPoints() {
    void* cPtr = vtkd_im.vtkExtractSelectedFrustum_GetClipPoints(cast(void*)swigCPtr);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public void SetFieldType(int _arg) {
    vtkd_im.vtkExtractSelectedFrustum_SetFieldType(cast(void*)swigCPtr, _arg);
  }

  public int GetFieldType() {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_GetFieldType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetContainingCells(int _arg) {
    vtkd_im.vtkExtractSelectedFrustum_SetContainingCells(cast(void*)swigCPtr, _arg);
  }

  public int GetContainingCells() {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_GetContainingCells(cast(void*)swigCPtr);
    return ret;
  }

  public int OverallBoundsTest(double* bounds) {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_OverallBoundsTest(cast(void*)swigCPtr, cast(void*)bounds);
    return ret;
  }

  public void SetShowBounds(int _arg) {
    vtkd_im.vtkExtractSelectedFrustum_SetShowBounds(cast(void*)swigCPtr, _arg);
  }

  public int GetShowBounds() {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_GetShowBounds(cast(void*)swigCPtr);
    return ret;
  }

  public void ShowBoundsOn() {
    vtkd_im.vtkExtractSelectedFrustum_ShowBoundsOn(cast(void*)swigCPtr);
  }

  public void ShowBoundsOff() {
    vtkd_im.vtkExtractSelectedFrustum_ShowBoundsOff(cast(void*)swigCPtr);
  }

  public void SetInsideOut(int _arg) {
    vtkd_im.vtkExtractSelectedFrustum_SetInsideOut(cast(void*)swigCPtr, _arg);
  }

  public int GetInsideOut() {
    auto ret = vtkd_im.vtkExtractSelectedFrustum_GetInsideOut(cast(void*)swigCPtr);
    return ret;
  }

  public void InsideOutOn() {
    vtkd_im.vtkExtractSelectedFrustum_InsideOutOn(cast(void*)swigCPtr);
  }

  public void InsideOutOff() {
    vtkd_im.vtkExtractSelectedFrustum_InsideOutOff(cast(void*)swigCPtr);
  }
}
