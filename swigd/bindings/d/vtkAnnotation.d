/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAnnotation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkSelection;
static import vtkInformation;
static import vtkInformationVector;
static import vtkInformationStringKey;
static import vtkInformationDoubleVectorKey;
static import vtkInformationDoubleKey;
static import vtkInformationIntegerKey;
static import vtkInformationDataObjectKey;
static import vtkDataObject;

class vtkAnnotation : vtkDataObject.vtkDataObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAnnotation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAnnotation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkAnnotation(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAnnotation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAnnotation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAnnotation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  public vtkAnnotation NewInstance() const {
    void* cPtr = vtkd_im.vtkAnnotation_NewInstance(cast(void*)swigCPtr);
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  alias vtkDataObject.vtkDataObject.NewInstance NewInstance;

  public static vtkAnnotation New() {
    void* cPtr = vtkd_im.vtkAnnotation_New();
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  public vtkSelection.vtkSelection GetSelection() {
    void* cPtr = vtkd_im.vtkAnnotation_GetSelection(cast(void*)swigCPtr);
    vtkSelection.vtkSelection ret = (cPtr is null) ? null : new vtkSelection.vtkSelection(cPtr, false);
    return ret;
  }

  public void SetSelection(vtkSelection.vtkSelection selection) {
    vtkd_im.vtkAnnotation_SetSelection(cast(void*)swigCPtr, vtkSelection.vtkSelection.swigGetCPtr(selection));
  }

  public static vtkAnnotation GetData(vtkInformation.vtkInformation info) {
    void* cPtr = vtkd_im.vtkAnnotation_GetData__SWIG_0(vtkInformation.vtkInformation.swigGetCPtr(info));
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  public static vtkAnnotation GetData(vtkInformationVector.vtkInformationVector v, int i) {
    void* cPtr = vtkd_im.vtkAnnotation_GetData__SWIG_1(vtkInformationVector.vtkInformationVector.swigGetCPtr(v), i);
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  public static vtkAnnotation GetData(vtkInformationVector.vtkInformationVector v) {
    void* cPtr = vtkd_im.vtkAnnotation_GetData__SWIG_2(vtkInformationVector.vtkInformationVector.swigGetCPtr(v));
    vtkAnnotation ret = (cPtr is null) ? null : new vtkAnnotation(cPtr, false);
    return ret;
  }

  public static vtkInformationStringKey.vtkInformationStringKey LABEL() {
    void* cPtr = vtkd_im.vtkAnnotation_LABEL();
    vtkInformationStringKey.vtkInformationStringKey ret = (cPtr is null) ? null : new vtkInformationStringKey.vtkInformationStringKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey COLOR() {
    void* cPtr = vtkd_im.vtkAnnotation_COLOR();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleKey.vtkInformationDoubleKey OPACITY() {
    void* cPtr = vtkd_im.vtkAnnotation_OPACITY();
    vtkInformationDoubleKey.vtkInformationDoubleKey ret = (cPtr is null) ? null : new vtkInformationDoubleKey.vtkInformationDoubleKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey ICON_INDEX() {
    void* cPtr = vtkd_im.vtkAnnotation_ICON_INDEX();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey ENABLE() {
    void* cPtr = vtkd_im.vtkAnnotation_ENABLE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey HIDE() {
    void* cPtr = vtkd_im.vtkAnnotation_HIDE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDataObjectKey.vtkInformationDataObjectKey DATA() {
    void* cPtr = vtkd_im.vtkAnnotation_DATA();
    vtkInformationDataObjectKey.vtkInformationDataObjectKey ret = (cPtr is null) ? null : new vtkInformationDataObjectKey.vtkInformationDataObjectKey(cPtr, false);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkAnnotation(), true);
  }
}
