/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTooltipItem;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_float;
static import vtkVector2f;
static import vtkStdString;
static import vtkPen;
static import vtkBrush;
static import vtkTextProperty;
static import vtkContextItem;

class vtkTooltipItem : vtkContextItem.vtkContextItem {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTooltipItem_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTooltipItem obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkTooltipItem(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTooltipItem_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTooltipItem SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTooltipItem_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTooltipItem ret = (cPtr is null) ? null : new vtkTooltipItem(cPtr, false);
    return ret;
  }

  public vtkTooltipItem NewInstance() const {
    void* cPtr = vtkd_im.vtkTooltipItem_NewInstance(cast(void*)swigCPtr);
    vtkTooltipItem ret = (cPtr is null) ? null : new vtkTooltipItem(cPtr, false);
    return ret;
  }

  alias vtkContextItem.vtkContextItem.NewInstance NewInstance;

  public static vtkTooltipItem New() {
    void* cPtr = vtkd_im.vtkTooltipItem_New();
    vtkTooltipItem ret = (cPtr is null) ? null : new vtkTooltipItem(cPtr, false);
    return ret;
  }

  public void SetPosition(float _arg1, float _arg2) {
    vtkd_im.vtkTooltipItem_SetPosition__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetPosition(SWIGTYPE_p_float.SWIGTYPE_p_float _arg) {
    vtkd_im.vtkTooltipItem_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(_arg));
  }

  public void SetPosition(vtkVector2f.vtkVector2f pos) {
    vtkd_im.vtkTooltipItem_SetPosition__SWIG_2(cast(void*)swigCPtr, vtkVector2f.vtkVector2f.swigGetCPtr(pos));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public float* GetPosition() {
    auto ret = cast(float*)vtkd_im.vtkTooltipItem_GetPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPosition(float* _arg1, float* _arg2) {
    vtkd_im.vtkTooltipItem_GetPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetPosition(SWIGTYPE_p_float.SWIGTYPE_p_float _arg) {
    vtkd_im.vtkTooltipItem_GetPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(_arg));
  }

  public vtkVector2f.vtkVector2f GetPositionVector() {
    vtkVector2f.vtkVector2f ret = new vtkVector2f.vtkVector2f(vtkd_im.vtkTooltipItem_GetPositionVector(cast(void*)swigCPtr), true);
    return ret;
  }

  public void SetText(vtkStdString.vtkStdString title) {
    vtkd_im.vtkTooltipItem_SetText(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(title));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkStdString.vtkStdString GetText() {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkTooltipItem_GetText(cast(void*)swigCPtr), true);
    return ret;
  }

  public vtkPen.vtkPen GetPen() {
    void* cPtr = vtkd_im.vtkTooltipItem_GetPen(cast(void*)swigCPtr);
    vtkPen.vtkPen ret = (cPtr is null) ? null : new vtkPen.vtkPen(cPtr, false);
    return ret;
  }

  public vtkBrush.vtkBrush GetBrush() {
    void* cPtr = vtkd_im.vtkTooltipItem_GetBrush(cast(void*)swigCPtr);
    vtkBrush.vtkBrush ret = (cPtr is null) ? null : new vtkBrush.vtkBrush(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetTextProperties() {
    void* cPtr = vtkd_im.vtkTooltipItem_GetTextProperties(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkTooltipItem(), true);
  }
}
