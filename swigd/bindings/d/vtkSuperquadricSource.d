/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSuperquadricSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkSuperquadricSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSuperquadricSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSuperquadricSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSuperquadricSource New() {
    void* cPtr = vtkd_im.vtkSuperquadricSource_New();
    vtkSuperquadricSource ret = (cPtr is null) ? null : new vtkSuperquadricSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSuperquadricSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSuperquadricSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSuperquadricSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSuperquadricSource ret = (cPtr is null) ? null : new vtkSuperquadricSource(cPtr, false);
    return ret;
  }

  public vtkSuperquadricSource NewInstance() const {
    void* cPtr = vtkd_im.vtkSuperquadricSource_NewInstance(cast(void*)swigCPtr);
    vtkSuperquadricSource ret = (cPtr is null) ? null : new vtkSuperquadricSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkSuperquadricSource_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkSuperquadricSource_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkSuperquadricSource_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkSuperquadricSource_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetScale(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkSuperquadricSource_SetScale__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetScale(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkSuperquadricSource_SetScale__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetScale() {
    auto ret = cast(double*)vtkd_im.vtkSuperquadricSource_GetScale__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScale(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkSuperquadricSource_GetScale__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public int GetThetaResolution() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetThetaResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThetaResolution(int i) {
    vtkd_im.vtkSuperquadricSource_SetThetaResolution(cast(void*)swigCPtr, i);
  }

  public int GetPhiResolution() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetPhiResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPhiResolution(int i) {
    vtkd_im.vtkSuperquadricSource_SetPhiResolution(cast(void*)swigCPtr, i);
  }

  public double GetThickness() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetThickness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThickness(double _arg) {
    vtkd_im.vtkSuperquadricSource_SetThickness(cast(void*)swigCPtr, _arg);
  }

  public double GetThicknessMinValue() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetThicknessMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetThicknessMaxValue() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetThicknessMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetPhiRoundness() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetPhiRoundness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPhiRoundness(double e) {
    vtkd_im.vtkSuperquadricSource_SetPhiRoundness(cast(void*)swigCPtr, e);
  }

  public double GetThetaRoundness() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetThetaRoundness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetThetaRoundness(double e) {
    vtkd_im.vtkSuperquadricSource_SetThetaRoundness(cast(void*)swigCPtr, e);
  }

  public void SetSize(double _arg) {
    vtkd_im.vtkSuperquadricSource_SetSize(cast(void*)swigCPtr, _arg);
  }

  public double GetSize() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisOfSymmetry(int _arg) {
    vtkd_im.vtkSuperquadricSource_SetAxisOfSymmetry(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisOfSymmetry() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetAxisOfSymmetry(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXAxisOfSymmetry() {
    vtkd_im.vtkSuperquadricSource_SetXAxisOfSymmetry(cast(void*)swigCPtr);
  }

  public void SetYAxisOfSymmetry() {
    vtkd_im.vtkSuperquadricSource_SetYAxisOfSymmetry(cast(void*)swigCPtr);
  }

  public void SetZAxisOfSymmetry() {
    vtkd_im.vtkSuperquadricSource_SetZAxisOfSymmetry(cast(void*)swigCPtr);
  }

  public void ToroidalOn() {
    vtkd_im.vtkSuperquadricSource_ToroidalOn(cast(void*)swigCPtr);
  }

  public void ToroidalOff() {
    vtkd_im.vtkSuperquadricSource_ToroidalOff(cast(void*)swigCPtr);
  }

  public int GetToroidal() {
    auto ret = vtkd_im.vtkSuperquadricSource_GetToroidal(cast(void*)swigCPtr);
    return ret;
  }

  public void SetToroidal(int _arg) {
    vtkd_im.vtkSuperquadricSource_SetToroidal(cast(void*)swigCPtr, _arg);
  }
}
