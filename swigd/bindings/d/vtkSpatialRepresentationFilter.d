/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSpatialRepresentationFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkLocator;
static import vtkMultiBlockDataSetAlgorithm;

class vtkSpatialRepresentationFilter : vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSpatialRepresentationFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSpatialRepresentationFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSpatialRepresentationFilter New() {
    void* cPtr = vtkd_im.vtkSpatialRepresentationFilter_New();
    vtkSpatialRepresentationFilter ret = (cPtr is null) ? null : new vtkSpatialRepresentationFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSpatialRepresentationFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSpatialRepresentationFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSpatialRepresentationFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSpatialRepresentationFilter ret = (cPtr is null) ? null : new vtkSpatialRepresentationFilter(cPtr, false);
    return ret;
  }

  public vtkSpatialRepresentationFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkSpatialRepresentationFilter_NewInstance(cast(void*)swigCPtr);
    vtkSpatialRepresentationFilter ret = (cPtr is null) ? null : new vtkSpatialRepresentationFilter(cPtr, false);
    return ret;
  }

  alias vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm.NewInstance NewInstance;

  public void SetSpatialRepresentation(vtkLocator.vtkLocator arg0) {
    vtkd_im.vtkSpatialRepresentationFilter_SetSpatialRepresentation(cast(void*)swigCPtr, vtkLocator.vtkLocator.swigGetCPtr(arg0));
  }

  public vtkLocator.vtkLocator GetSpatialRepresentation() {
    void* cPtr = vtkd_im.vtkSpatialRepresentationFilter_GetSpatialRepresentation(cast(void*)swigCPtr);
    vtkLocator.vtkLocator ret = (cPtr is null) ? null : new vtkLocator.vtkLocator(cPtr, false);
    return ret;
  }

  public int GetMaximumLevel() {
    auto ret = vtkd_im.vtkSpatialRepresentationFilter_GetMaximumLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void AddLevel(int level) {
    vtkd_im.vtkSpatialRepresentationFilter_AddLevel(cast(void*)swigCPtr, level);
  }

  public void ResetLevels() {
    vtkd_im.vtkSpatialRepresentationFilter_ResetLevels(cast(void*)swigCPtr);
  }

  public void SetGenerateLeaves(bool _arg) {
    vtkd_im.vtkSpatialRepresentationFilter_SetGenerateLeaves(cast(void*)swigCPtr, _arg);
  }

  public bool GetGenerateLeaves() {
    bool ret = vtkd_im.vtkSpatialRepresentationFilter_GetGenerateLeaves(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void GenerateLeavesOn() {
    vtkd_im.vtkSpatialRepresentationFilter_GenerateLeavesOn(cast(void*)swigCPtr);
  }

  public void GenerateLeavesOff() {
    vtkd_im.vtkSpatialRepresentationFilter_GenerateLeavesOff(cast(void*)swigCPtr);
  }
}
