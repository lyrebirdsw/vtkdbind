/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageCanvasSource2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkImageData;
static import vtkImageAlgorithm;

class vtkImageCanvasSource2D : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageCanvasSource2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageCanvasSource2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageCanvasSource2D New() {
    void* cPtr = vtkd_im.vtkImageCanvasSource2D_New();
    vtkImageCanvasSource2D ret = (cPtr is null) ? null : new vtkImageCanvasSource2D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageCanvasSource2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageCanvasSource2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageCanvasSource2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageCanvasSource2D ret = (cPtr is null) ? null : new vtkImageCanvasSource2D(cPtr, false);
    return ret;
  }

  public vtkImageCanvasSource2D NewInstance() const {
    void* cPtr = vtkd_im.vtkImageCanvasSource2D_NewInstance(cast(void*)swigCPtr);
    vtkImageCanvasSource2D ret = (cPtr is null) ? null : new vtkImageCanvasSource2D(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void SetDrawColor(double _arg1, double _arg2, double _arg3, double _arg4) {
    vtkd_im.vtkImageCanvasSource2D_SetDrawColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4);
  }

  public void SetDrawColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageCanvasSource2D_SetDrawColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDrawColor() {
    auto ret = cast(double*)vtkd_im.vtkImageCanvasSource2D_GetDrawColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDrawColor(double* _arg1, double* _arg2, double* _arg3, double* _arg4) {
    vtkd_im.vtkImageCanvasSource2D_GetDrawColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDrawColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageCanvasSource2D_GetDrawColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetDrawColor(double a) {
    vtkd_im.vtkImageCanvasSource2D_SetDrawColor__SWIG_2(cast(void*)swigCPtr, a);
  }

  public void SetDrawColor(double a, double b) {
    vtkd_im.vtkImageCanvasSource2D_SetDrawColor__SWIG_3(cast(void*)swigCPtr, a, b);
  }

  public void SetDrawColor(double a, double b, double c) {
    vtkd_im.vtkImageCanvasSource2D_SetDrawColor__SWIG_4(cast(void*)swigCPtr, a, b, c);
  }

  public void FillBox(int min0, int max0, int min1, int max1) {
    vtkd_im.vtkImageCanvasSource2D_FillBox(cast(void*)swigCPtr, min0, max0, min1, max1);
  }

  public void FillTube(int x0, int y0, int x1, int y1, double radius) {
    vtkd_im.vtkImageCanvasSource2D_FillTube(cast(void*)swigCPtr, x0, y0, x1, y1, radius);
  }

  public void FillTriangle(int x0, int y0, int x1, int y1, int x2, int y2) {
    vtkd_im.vtkImageCanvasSource2D_FillTriangle(cast(void*)swigCPtr, x0, y0, x1, y1, x2, y2);
  }

  public void DrawCircle(int c0, int c1, double radius) {
    vtkd_im.vtkImageCanvasSource2D_DrawCircle(cast(void*)swigCPtr, c0, c1, radius);
  }

  public void DrawPoint(int p0, int p1) {
    vtkd_im.vtkImageCanvasSource2D_DrawPoint(cast(void*)swigCPtr, p0, p1);
  }

  public void DrawSegment(int x0, int y0, int x1, int y1) {
    vtkd_im.vtkImageCanvasSource2D_DrawSegment(cast(void*)swigCPtr, x0, y0, x1, y1);
  }

  public void DrawSegment3D(double* p0, double* p1) {
    vtkd_im.vtkImageCanvasSource2D_DrawSegment3D__SWIG_0(cast(void*)swigCPtr, cast(void*)p0, cast(void*)p1);
  }

  public void DrawSegment3D(double x1, double y1, double z1, double x2, double y2, double z2) {
    vtkd_im.vtkImageCanvasSource2D_DrawSegment3D__SWIG_1(cast(void*)swigCPtr, x1, y1, z1, x2, y2, z2);
  }

  public void DrawImage(int x0, int y0, vtkImageData.vtkImageData i) {
    vtkd_im.vtkImageCanvasSource2D_DrawImage__SWIG_0(cast(void*)swigCPtr, x0, y0, vtkImageData.vtkImageData.swigGetCPtr(i));
  }

  public void DrawImage(int x0, int y0, vtkImageData.vtkImageData arg2, int sx, int sy, int width, int height) {
    vtkd_im.vtkImageCanvasSource2D_DrawImage__SWIG_1(cast(void*)swigCPtr, x0, y0, vtkImageData.vtkImageData.swigGetCPtr(arg2), sx, sy, width, height);
  }

  public void FillPixel(int x, int y) {
    vtkd_im.vtkImageCanvasSource2D_FillPixel(cast(void*)swigCPtr, x, y);
  }

  public void SetExtent(int* extent) {
    vtkd_im.vtkImageCanvasSource2D_SetExtent__SWIG_0(cast(void*)swigCPtr, cast(void*)extent);
  }

  public void SetExtent(int x1, int x2, int y1, int y2, int z1, int z2) {
    vtkd_im.vtkImageCanvasSource2D_SetExtent__SWIG_1(cast(void*)swigCPtr, x1, x2, y1, y2, z1, z2);
  }

  public void SetDefaultZ(int _arg) {
    vtkd_im.vtkImageCanvasSource2D_SetDefaultZ(cast(void*)swigCPtr, _arg);
  }

  public int GetDefaultZ() {
    auto ret = vtkd_im.vtkImageCanvasSource2D_GetDefaultZ(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRatio(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkImageCanvasSource2D_SetRatio__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetRatio(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageCanvasSource2D_SetRatio__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetRatio() {
    auto ret = cast(double*)vtkd_im.vtkImageCanvasSource2D_GetRatio__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRatio(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkImageCanvasSource2D_GetRatio__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetRatio(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageCanvasSource2D_GetRatio__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetNumberOfScalarComponents(int i) {
    vtkd_im.vtkImageCanvasSource2D_SetNumberOfScalarComponents(cast(void*)swigCPtr, i);
  }

  public int GetNumberOfScalarComponents() const {
    auto ret = vtkd_im.vtkImageCanvasSource2D_GetNumberOfScalarComponents(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScalarTypeToFloat() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToFloat(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToDouble() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToDouble(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToInt() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToInt(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToUnsignedInt() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToUnsignedInt(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToLong() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToLong(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToUnsignedLong() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToUnsignedLong(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToShort() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToShort(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToUnsignedShort() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToUnsignedShort(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToUnsignedChar() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToUnsignedChar(cast(void*)swigCPtr);
  }

  public void SetScalarTypeToChar() {
    vtkd_im.vtkImageCanvasSource2D_SetScalarTypeToChar(cast(void*)swigCPtr);
  }

  public void SetScalarType(int arg0) {
    vtkd_im.vtkImageCanvasSource2D_SetScalarType(cast(void*)swigCPtr, arg0);
  }

  public int GetScalarType() const {
    auto ret = vtkd_im.vtkImageCanvasSource2D_GetScalarType(cast(void*)swigCPtr);
    return ret;
  }
}
