/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAnnotationLink;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAnnotationLayers;
static import vtkSelection;
static import vtkTable;
static import vtkAnnotationLayersAlgorithm;

class vtkAnnotationLink : vtkAnnotationLayersAlgorithm.vtkAnnotationLayersAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAnnotationLink_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAnnotationLink obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAnnotationLink New() {
    void* cPtr = vtkd_im.vtkAnnotationLink_New();
    vtkAnnotationLink ret = (cPtr is null) ? null : new vtkAnnotationLink(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAnnotationLink_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAnnotationLink SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAnnotationLink_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAnnotationLink ret = (cPtr is null) ? null : new vtkAnnotationLink(cPtr, false);
    return ret;
  }

  public vtkAnnotationLink NewInstance() const {
    void* cPtr = vtkd_im.vtkAnnotationLink_NewInstance(cast(void*)swigCPtr);
    vtkAnnotationLink ret = (cPtr is null) ? null : new vtkAnnotationLink(cPtr, false);
    return ret;
  }

  alias vtkAnnotationLayersAlgorithm.vtkAnnotationLayersAlgorithm.NewInstance NewInstance;

  public vtkAnnotationLayers.vtkAnnotationLayers GetAnnotationLayers() {
    void* cPtr = vtkd_im.vtkAnnotationLink_GetAnnotationLayers(cast(void*)swigCPtr);
    vtkAnnotationLayers.vtkAnnotationLayers ret = (cPtr is null) ? null : new vtkAnnotationLayers.vtkAnnotationLayers(cPtr, false);
    return ret;
  }

  public void SetAnnotationLayers(vtkAnnotationLayers.vtkAnnotationLayers layers) {
    vtkd_im.vtkAnnotationLink_SetAnnotationLayers(cast(void*)swigCPtr, vtkAnnotationLayers.vtkAnnotationLayers.swigGetCPtr(layers));
  }

  public void SetCurrentSelection(vtkSelection.vtkSelection sel) {
    vtkd_im.vtkAnnotationLink_SetCurrentSelection(cast(void*)swigCPtr, vtkSelection.vtkSelection.swigGetCPtr(sel));
  }

  public vtkSelection.vtkSelection GetCurrentSelection() {
    void* cPtr = vtkd_im.vtkAnnotationLink_GetCurrentSelection(cast(void*)swigCPtr);
    vtkSelection.vtkSelection ret = (cPtr is null) ? null : new vtkSelection.vtkSelection(cPtr, false);
    return ret;
  }

  public void AddDomainMap(vtkTable.vtkTable map) {
    vtkd_im.vtkAnnotationLink_AddDomainMap(cast(void*)swigCPtr, vtkTable.vtkTable.swigGetCPtr(map));
  }

  public void RemoveDomainMap(vtkTable.vtkTable map) {
    vtkd_im.vtkAnnotationLink_RemoveDomainMap(cast(void*)swigCPtr, vtkTable.vtkTable.swigGetCPtr(map));
  }

  public void RemoveAllDomainMaps() {
    vtkd_im.vtkAnnotationLink_RemoveAllDomainMaps(cast(void*)swigCPtr);
  }

  public int GetNumberOfDomainMaps() {
    auto ret = vtkd_im.vtkAnnotationLink_GetNumberOfDomainMaps(cast(void*)swigCPtr);
    return ret;
  }

  public vtkTable.vtkTable GetDomainMap(int i) {
    void* cPtr = vtkd_im.vtkAnnotationLink_GetDomainMap(cast(void*)swigCPtr, i);
    vtkTable.vtkTable ret = (cPtr is null) ? null : new vtkTable.vtkTable(cPtr, false);
    return ret;
  }
}
