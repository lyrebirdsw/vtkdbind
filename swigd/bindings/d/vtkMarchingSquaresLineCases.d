/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMarchingSquaresLineCases;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_int;

class vtkMarchingSquaresLineCases {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkMarchingSquaresLineCases obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkMarchingSquaresLineCases(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void edges(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkMarchingSquaresLineCases_edges_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int edges() @property const {
    void* cPtr = vtkd_im.vtkMarchingSquaresLineCases_edges_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public static vtkMarchingSquaresLineCases GetCases() {
    void* cPtr = vtkd_im.vtkMarchingSquaresLineCases_GetCases();
    vtkMarchingSquaresLineCases ret = (cPtr is null) ? null : new vtkMarchingSquaresLineCases(cPtr, false);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkMarchingSquaresLineCases(), true);
  }
}
