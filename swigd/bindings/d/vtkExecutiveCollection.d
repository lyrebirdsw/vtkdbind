/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkExecutiveCollection;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkExecutive;
static import vtkCollection;

class vtkExecutiveCollection : vtkCollection.vtkCollection {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkExecutiveCollection_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkExecutiveCollection obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkExecutiveCollection New() {
    void* cPtr = vtkd_im.vtkExecutiveCollection_New();
    vtkExecutiveCollection ret = (cPtr is null) ? null : new vtkExecutiveCollection(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkExecutiveCollection_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkExecutiveCollection SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkExecutiveCollection_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkExecutiveCollection ret = (cPtr is null) ? null : new vtkExecutiveCollection(cPtr, false);
    return ret;
  }

  public vtkExecutiveCollection NewInstance() const {
    void* cPtr = vtkd_im.vtkExecutiveCollection_NewInstance(cast(void*)swigCPtr);
    vtkExecutiveCollection ret = (cPtr is null) ? null : new vtkExecutiveCollection(cPtr, false);
    return ret;
  }

  alias vtkCollection.vtkCollection.NewInstance NewInstance;

  public void AddItem(vtkExecutive.vtkExecutive exec) {
    vtkd_im.vtkExecutiveCollection_AddItem(cast(void*)swigCPtr, vtkExecutive.vtkExecutive.swigGetCPtr(exec));
  }

  alias vtkCollection.vtkCollection.AddItem AddItem;

  public vtkExecutive.vtkExecutive GetNextItem() {
    void* cPtr = vtkd_im.vtkExecutiveCollection_GetNextItem(cast(void*)swigCPtr);
    vtkExecutive.vtkExecutive ret = (cPtr is null) ? null : new vtkExecutive.vtkExecutive(cPtr, false);
    return ret;
  }
}
