/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTemporalShiftScale;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAlgorithm;

class vtkTemporalShiftScale : vtkAlgorithm.vtkAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTemporalShiftScale_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTemporalShiftScale obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTemporalShiftScale New() {
    void* cPtr = vtkd_im.vtkTemporalShiftScale_New();
    vtkTemporalShiftScale ret = (cPtr is null) ? null : new vtkTemporalShiftScale(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTemporalShiftScale_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTemporalShiftScale SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTemporalShiftScale_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTemporalShiftScale ret = (cPtr is null) ? null : new vtkTemporalShiftScale(cPtr, false);
    return ret;
  }

  public vtkTemporalShiftScale NewInstance() const {
    void* cPtr = vtkd_im.vtkTemporalShiftScale_NewInstance(cast(void*)swigCPtr);
    vtkTemporalShiftScale ret = (cPtr is null) ? null : new vtkTemporalShiftScale(cPtr, false);
    return ret;
  }

  alias vtkAlgorithm.vtkAlgorithm.NewInstance NewInstance;

  public void SetPreShift(double _arg) {
    vtkd_im.vtkTemporalShiftScale_SetPreShift(cast(void*)swigCPtr, _arg);
  }

  public double GetPreShift() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetPreShift(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPostShift(double _arg) {
    vtkd_im.vtkTemporalShiftScale_SetPostShift(cast(void*)swigCPtr, _arg);
  }

  public double GetPostShift() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetPostShift(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScale(double _arg) {
    vtkd_im.vtkTemporalShiftScale_SetScale(cast(void*)swigCPtr, _arg);
  }

  public double GetScale() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetScale(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPeriodic(int _arg) {
    vtkd_im.vtkTemporalShiftScale_SetPeriodic(cast(void*)swigCPtr, _arg);
  }

  public int GetPeriodic() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetPeriodic(cast(void*)swigCPtr);
    return ret;
  }

  public void PeriodicOn() {
    vtkd_im.vtkTemporalShiftScale_PeriodicOn(cast(void*)swigCPtr);
  }

  public void PeriodicOff() {
    vtkd_im.vtkTemporalShiftScale_PeriodicOff(cast(void*)swigCPtr);
  }

  public void SetPeriodicEndCorrection(int _arg) {
    vtkd_im.vtkTemporalShiftScale_SetPeriodicEndCorrection(cast(void*)swigCPtr, _arg);
  }

  public int GetPeriodicEndCorrection() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetPeriodicEndCorrection(cast(void*)swigCPtr);
    return ret;
  }

  public void PeriodicEndCorrectionOn() {
    vtkd_im.vtkTemporalShiftScale_PeriodicEndCorrectionOn(cast(void*)swigCPtr);
  }

  public void PeriodicEndCorrectionOff() {
    vtkd_im.vtkTemporalShiftScale_PeriodicEndCorrectionOff(cast(void*)swigCPtr);
  }

  public void SetMaximumNumberOfPeriods(double _arg) {
    vtkd_im.vtkTemporalShiftScale_SetMaximumNumberOfPeriods(cast(void*)swigCPtr, _arg);
  }

  public double GetMaximumNumberOfPeriods() {
    auto ret = vtkd_im.vtkTemporalShiftScale_GetMaximumNumberOfPeriods(cast(void*)swigCPtr);
    return ret;
  }
}
