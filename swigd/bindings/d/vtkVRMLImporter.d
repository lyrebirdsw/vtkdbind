/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVRMLImporter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkObject;
static import SWIGTYPE_p_FILE;
static import vtkImporter;

class vtkVRMLImporter : vtkImporter.vtkImporter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkVRMLImporter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkVRMLImporter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkVRMLImporter New() {
    void* cPtr = vtkd_im.vtkVRMLImporter_New();
    vtkVRMLImporter ret = (cPtr is null) ? null : new vtkVRMLImporter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkVRMLImporter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkVRMLImporter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkVRMLImporter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkVRMLImporter ret = (cPtr is null) ? null : new vtkVRMLImporter(cPtr, false);
    return ret;
  }

  public vtkVRMLImporter NewInstance() const {
    void* cPtr = vtkd_im.vtkVRMLImporter_NewInstance(cast(void*)swigCPtr);
    vtkVRMLImporter ret = (cPtr is null) ? null : new vtkVRMLImporter(cPtr, false);
    return ret;
  }

  alias vtkImporter.vtkImporter.NewInstance NewInstance;

  public vtkObject.vtkObject GetVRMLDEFObject(string name) {
    void* cPtr = vtkd_im.vtkVRMLImporter_GetVRMLDEFObject(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    vtkObject.vtkObject ret = (cPtr is null) ? null : new vtkObject.vtkObject(cPtr, false);
    return ret;
  }

  public void enterNode(string arg0) {
    vtkd_im.vtkVRMLImporter_enterNode(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public void exitNode() {
    vtkd_im.vtkVRMLImporter_exitNode(cast(void*)swigCPtr);
  }

  public void enterField(string arg0) {
    vtkd_im.vtkVRMLImporter_enterField(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public void exitField() {
    vtkd_im.vtkVRMLImporter_exitField(cast(void*)swigCPtr);
  }

  public void useNode(string arg0) {
    vtkd_im.vtkVRMLImporter_useNode(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public void SetFileName(string _arg) {
    vtkd_im.vtkVRMLImporter_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkVRMLImporter_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public SWIGTYPE_p_FILE.SWIGTYPE_p_FILE GetFileFD() {
    void* cPtr = vtkd_im.vtkVRMLImporter_GetFileFD(cast(void*)swigCPtr);
    SWIGTYPE_p_FILE.SWIGTYPE_p_FILE ret = (cPtr is null) ? null : new SWIGTYPE_p_FILE.SWIGTYPE_p_FILE(cPtr, false);
    return ret;
  }
}
