/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDistanceRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkHandleRepresentation;
static import vtkWidgetRepresentation;

class vtkDistanceRepresentation : vtkWidgetRepresentation.vtkWidgetRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDistanceRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDistanceRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDistanceRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDistanceRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDistanceRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDistanceRepresentation ret = (cPtr is null) ? null : new vtkDistanceRepresentation(cPtr, false);
    return ret;
  }

  public vtkDistanceRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkDistanceRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkDistanceRepresentation ret = (cPtr is null) ? null : new vtkDistanceRepresentation(cPtr, false);
    return ret;
  }

  alias vtkWidgetRepresentation.vtkWidgetRepresentation.NewInstance NewInstance;

  public double GetDistance() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPoint1WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_GetPoint1WorldPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint2WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_GetPoint2WorldPosition__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public double* GetPoint1WorldPosition() {
    auto ret = cast(double*)vtkd_im.vtkDistanceRepresentation_GetPoint1WorldPosition__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetPoint2WorldPosition() {
    auto ret = cast(double*)vtkd_im.vtkDistanceRepresentation_GetPoint2WorldPosition__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPoint1DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_SetPoint1DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPoint2DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_SetPoint2DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint1DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_GetPoint1DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetPoint2DisplayPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_GetPoint2DisplayPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPoint1WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_SetPoint1WorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetPoint2WorldPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkDistanceRepresentation_SetPoint2WorldPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void SetHandleRepresentation(vtkHandleRepresentation.vtkHandleRepresentation handle) {
    vtkd_im.vtkDistanceRepresentation_SetHandleRepresentation(cast(void*)swigCPtr, vtkHandleRepresentation.vtkHandleRepresentation.swigGetCPtr(handle));
  }

  public void InstantiateHandleRepresentation() {
    vtkd_im.vtkDistanceRepresentation_InstantiateHandleRepresentation(cast(void*)swigCPtr);
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetPoint1Representation() {
    void* cPtr = vtkd_im.vtkDistanceRepresentation_GetPoint1Representation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public vtkHandleRepresentation.vtkHandleRepresentation GetPoint2Representation() {
    void* cPtr = vtkd_im.vtkDistanceRepresentation_GetPoint2Representation(cast(void*)swigCPtr);
    vtkHandleRepresentation.vtkHandleRepresentation ret = (cPtr is null) ? null : new vtkHandleRepresentation.vtkHandleRepresentation(cPtr, false);
    return ret;
  }

  public void SetTolerance(int _arg) {
    vtkd_im.vtkDistanceRepresentation_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public int GetToleranceMinValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTolerance() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkDistanceRepresentation_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkDistanceRepresentation_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetRulerMode(int _arg) {
    vtkd_im.vtkDistanceRepresentation_SetRulerMode(cast(void*)swigCPtr, _arg);
  }

  public int GetRulerMode() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetRulerMode(cast(void*)swigCPtr);
    return ret;
  }

  public void RulerModeOn() {
    vtkd_im.vtkDistanceRepresentation_RulerModeOn(cast(void*)swigCPtr);
  }

  public void RulerModeOff() {
    vtkd_im.vtkDistanceRepresentation_RulerModeOff(cast(void*)swigCPtr);
  }

  public void SetRulerDistance(double _arg) {
    vtkd_im.vtkDistanceRepresentation_SetRulerDistance(cast(void*)swigCPtr, _arg);
  }

  public double GetRulerDistanceMinValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetRulerDistanceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRulerDistanceMaxValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetRulerDistanceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRulerDistance() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetRulerDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfRulerTicks(int _arg) {
    vtkd_im.vtkDistanceRepresentation_SetNumberOfRulerTicks(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfRulerTicksMinValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetNumberOfRulerTicksMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfRulerTicksMaxValue() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetNumberOfRulerTicksMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfRulerTicks() {
    auto ret = vtkd_im.vtkDistanceRepresentation_GetNumberOfRulerTicks(cast(void*)swigCPtr);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkDistanceRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkDistanceRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }
}
