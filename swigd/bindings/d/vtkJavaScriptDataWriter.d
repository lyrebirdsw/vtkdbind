/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkJavaScriptDataWriter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_ostream;
static import vtkWriter;

class vtkJavaScriptDataWriter : vtkWriter.vtkWriter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkJavaScriptDataWriter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkJavaScriptDataWriter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkJavaScriptDataWriter New() {
    void* cPtr = vtkd_im.vtkJavaScriptDataWriter_New();
    vtkJavaScriptDataWriter ret = (cPtr is null) ? null : new vtkJavaScriptDataWriter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkJavaScriptDataWriter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkJavaScriptDataWriter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkJavaScriptDataWriter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkJavaScriptDataWriter ret = (cPtr is null) ? null : new vtkJavaScriptDataWriter(cPtr, false);
    return ret;
  }

  public vtkJavaScriptDataWriter NewInstance() const {
    void* cPtr = vtkd_im.vtkJavaScriptDataWriter_NewInstance(cast(void*)swigCPtr);
    vtkJavaScriptDataWriter ret = (cPtr is null) ? null : new vtkJavaScriptDataWriter(cPtr, false);
    return ret;
  }

  alias vtkWriter.vtkWriter.NewInstance NewInstance;

  public void SetVariableName(string _arg) {
    vtkd_im.vtkJavaScriptDataWriter_SetVariableName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetVariableName() {
    string ret = std.conv.to!string(vtkd_im.vtkJavaScriptDataWriter_GetVariableName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileName(string _arg) {
    vtkd_im.vtkJavaScriptDataWriter_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkJavaScriptDataWriter_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetIncludeFieldNames(bool _arg) {
    vtkd_im.vtkJavaScriptDataWriter_SetIncludeFieldNames(cast(void*)swigCPtr, _arg);
  }

  public bool GetIncludeFieldNames() {
    bool ret = vtkd_im.vtkJavaScriptDataWriter_GetIncludeFieldNames(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetOutputStream(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream my_stream) {
    vtkd_im.vtkJavaScriptDataWriter_SetOutputStream(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(my_stream));
  }

  public SWIGTYPE_p_ostream.SWIGTYPE_p_ostream GetOutputStream() {
    void* cPtr = vtkd_im.vtkJavaScriptDataWriter_GetOutputStream(cast(void*)swigCPtr);
    SWIGTYPE_p_ostream.SWIGTYPE_p_ostream ret = (cPtr is null) ? null : new SWIGTYPE_p_ostream.SWIGTYPE_p_ostream(cPtr, false);
    return ret;
  }
}
