/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContextDevice2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageData;
static import vtkStdString;
static import SWIGTYPE_p_float;
static import vtkUnicodeString;
static import vtkRectf;
static import vtkPen;
static import vtkBrush;
static import vtkTextProperty;
static import SWIGTYPE_p_unsigned_char;
static import vtkMatrix3x3;
static import vtkViewport;
static import vtkVector2i;
static import vtkRecti;
static import vtkObject;

class vtkContextDevice2D : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContextDevice2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContextDevice2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkContextDevice2D(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  enum TextureProperty {
    Nearest = 0x01,
    Linear = 0x02,
    Stretch = 0x04,
    Repeat = 0x08
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContextDevice2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContextDevice2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContextDevice2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContextDevice2D ret = (cPtr is null) ? null : new vtkContextDevice2D(cPtr, false);
    return ret;
  }

  public vtkContextDevice2D NewInstance() const {
    void* cPtr = vtkd_im.vtkContextDevice2D_NewInstance(cast(void*)swigCPtr);
    vtkContextDevice2D ret = (cPtr is null) ? null : new vtkContextDevice2D(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void DrawPoly(float* points, int n, ubyte* colors, int nc_comps) {
    vtkd_im.vtkContextDevice2D_DrawPoly__SWIG_0(cast(void*)swigCPtr, cast(void*)points, n, cast(void*)colors, nc_comps);
  }

  public void DrawPoly(float* points, int n, ubyte* colors) {
    vtkd_im.vtkContextDevice2D_DrawPoly__SWIG_1(cast(void*)swigCPtr, cast(void*)points, n, cast(void*)colors);
  }

  public void DrawPoly(float* points, int n) {
    vtkd_im.vtkContextDevice2D_DrawPoly__SWIG_2(cast(void*)swigCPtr, cast(void*)points, n);
  }

  public void DrawPoints(float* points, int n, ubyte* colors, int nc_comps) {
    vtkd_im.vtkContextDevice2D_DrawPoints__SWIG_0(cast(void*)swigCPtr, cast(void*)points, n, cast(void*)colors, nc_comps);
  }

  public void DrawPoints(float* points, int n, ubyte* colors) {
    vtkd_im.vtkContextDevice2D_DrawPoints__SWIG_1(cast(void*)swigCPtr, cast(void*)points, n, cast(void*)colors);
  }

  public void DrawPoints(float* points, int n) {
    vtkd_im.vtkContextDevice2D_DrawPoints__SWIG_2(cast(void*)swigCPtr, cast(void*)points, n);
  }

  public void DrawPointSprites(vtkImageData.vtkImageData sprite, float* points, int n, ubyte* colors, int nc_comps) {
    vtkd_im.vtkContextDevice2D_DrawPointSprites__SWIG_0(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(sprite), cast(void*)points, n, cast(void*)colors, nc_comps);
  }

  public void DrawPointSprites(vtkImageData.vtkImageData sprite, float* points, int n, ubyte* colors) {
    vtkd_im.vtkContextDevice2D_DrawPointSprites__SWIG_1(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(sprite), cast(void*)points, n, cast(void*)colors);
  }

  public void DrawPointSprites(vtkImageData.vtkImageData sprite, float* points, int n) {
    vtkd_im.vtkContextDevice2D_DrawPointSprites__SWIG_2(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(sprite), cast(void*)points, n);
  }

  public void DrawMarkers(int shape, bool highlight, float* points, int n, ubyte* colors, int nc_comps) {
    vtkd_im.vtkContextDevice2D_DrawMarkers__SWIG_0(cast(void*)swigCPtr, shape, highlight, cast(void*)points, n, cast(void*)colors, nc_comps);
  }

  public void DrawMarkers(int shape, bool highlight, float* points, int n, ubyte* colors) {
    vtkd_im.vtkContextDevice2D_DrawMarkers__SWIG_1(cast(void*)swigCPtr, shape, highlight, cast(void*)points, n, cast(void*)colors);
  }

  public void DrawMarkers(int shape, bool highlight, float* points, int n) {
    vtkd_im.vtkContextDevice2D_DrawMarkers__SWIG_2(cast(void*)swigCPtr, shape, highlight, cast(void*)points, n);
  }

  public void DrawQuad(float* arg0, int arg1) {
    vtkd_im.vtkContextDevice2D_DrawQuad(cast(void*)swigCPtr, cast(void*)arg0, arg1);
  }

  public void DrawQuadStrip(float* arg0, int arg1) {
    vtkd_im.vtkContextDevice2D_DrawQuadStrip(cast(void*)swigCPtr, cast(void*)arg0, arg1);
  }

  public void DrawPolygon(float* arg0, int arg1) {
    vtkd_im.vtkContextDevice2D_DrawPolygon(cast(void*)swigCPtr, cast(void*)arg0, arg1);
  }

  public void DrawEllipseWedge(float x, float y, float outRx, float outRy, float inRx, float inRy, float startAngle, float stopAngle) {
    vtkd_im.vtkContextDevice2D_DrawEllipseWedge(cast(void*)swigCPtr, x, y, outRx, outRy, inRx, inRy, startAngle, stopAngle);
  }

  public void DrawEllipticArc(float x, float y, float rX, float rY, float startAngle, float stopAngle) {
    vtkd_im.vtkContextDevice2D_DrawEllipticArc(cast(void*)swigCPtr, x, y, rX, rY, startAngle, stopAngle);
  }

  public void DrawString(float* point, vtkStdString.vtkStdString arg1) {
    vtkd_im.vtkContextDevice2D_DrawString__SWIG_0(cast(void*)swigCPtr, cast(void*)point, vtkStdString.vtkStdString.swigGetCPtr(arg1));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void ComputeStringBounds(vtkStdString.vtkStdString arg0, SWIGTYPE_p_float.SWIGTYPE_p_float bounds) {
    vtkd_im.vtkContextDevice2D_ComputeStringBounds__SWIG_0(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(arg0), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(bounds));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void DrawString(float* point, vtkUnicodeString.vtkUnicodeString arg1) {
    vtkd_im.vtkContextDevice2D_DrawString__SWIG_1(cast(void*)swigCPtr, cast(void*)point, vtkUnicodeString.vtkUnicodeString.swigGetCPtr(arg1));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void ComputeStringBounds(vtkUnicodeString.vtkUnicodeString arg0, SWIGTYPE_p_float.SWIGTYPE_p_float bounds) {
    vtkd_im.vtkContextDevice2D_ComputeStringBounds__SWIG_1(cast(void*)swigCPtr, vtkUnicodeString.vtkUnicodeString.swigGetCPtr(arg0), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(bounds));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void DrawMathTextString(float* point, vtkStdString.vtkStdString arg1) {
    vtkd_im.vtkContextDevice2D_DrawMathTextString(cast(void*)swigCPtr, cast(void*)point, vtkStdString.vtkStdString.swigGetCPtr(arg1));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public bool MathTextIsSupported() {
    bool ret = vtkd_im.vtkContextDevice2D_MathTextIsSupported(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void DrawImage(SWIGTYPE_p_float.SWIGTYPE_p_float p, float scale, vtkImageData.vtkImageData image) {
    vtkd_im.vtkContextDevice2D_DrawImage__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(p), scale, vtkImageData.vtkImageData.swigGetCPtr(image));
  }

  public void DrawImage(vtkRectf.vtkRectf pos, vtkImageData.vtkImageData image) {
    vtkd_im.vtkContextDevice2D_DrawImage__SWIG_1(cast(void*)swigCPtr, vtkRectf.vtkRectf.swigGetCPtr(pos), vtkImageData.vtkImageData.swigGetCPtr(image));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void ApplyPen(vtkPen.vtkPen pen) {
    vtkd_im.vtkContextDevice2D_ApplyPen(cast(void*)swigCPtr, vtkPen.vtkPen.swigGetCPtr(pen));
  }

  public vtkPen.vtkPen GetPen() {
    void* cPtr = vtkd_im.vtkContextDevice2D_GetPen(cast(void*)swigCPtr);
    vtkPen.vtkPen ret = (cPtr is null) ? null : new vtkPen.vtkPen(cPtr, false);
    return ret;
  }

  public void ApplyBrush(vtkBrush.vtkBrush brush) {
    vtkd_im.vtkContextDevice2D_ApplyBrush(cast(void*)swigCPtr, vtkBrush.vtkBrush.swigGetCPtr(brush));
  }

  public vtkBrush.vtkBrush GetBrush() {
    void* cPtr = vtkd_im.vtkContextDevice2D_GetBrush(cast(void*)swigCPtr);
    vtkBrush.vtkBrush ret = (cPtr is null) ? null : new vtkBrush.vtkBrush(cPtr, false);
    return ret;
  }

  public void ApplyTextProp(vtkTextProperty.vtkTextProperty prop) {
    vtkd_im.vtkContextDevice2D_ApplyTextProp(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(prop));
  }

  public vtkTextProperty.vtkTextProperty GetTextProp() {
    void* cPtr = vtkd_im.vtkContextDevice2D_GetTextProp(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetColor4(SWIGTYPE_p_unsigned_char.SWIGTYPE_p_unsigned_char color) {
    vtkd_im.vtkContextDevice2D_SetColor4(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_char.SWIGTYPE_p_unsigned_char.swigGetCPtr(color));
  }

  public void SetTexture(vtkImageData.vtkImageData image, int properties) {
    vtkd_im.vtkContextDevice2D_SetTexture(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(image), properties);
  }

  public void SetPointSize(float size) {
    vtkd_im.vtkContextDevice2D_SetPointSize(cast(void*)swigCPtr, size);
  }

  public void SetLineWidth(float width) {
    vtkd_im.vtkContextDevice2D_SetLineWidth(cast(void*)swigCPtr, width);
  }

  public void SetLineType(int type) {
    vtkd_im.vtkContextDevice2D_SetLineType(cast(void*)swigCPtr, type);
  }

  public int GetWidth() {
    auto ret = vtkd_im.vtkContextDevice2D_GetWidth(cast(void*)swigCPtr);
    return ret;
  }

  public int GetHeight() {
    auto ret = vtkd_im.vtkContextDevice2D_GetHeight(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMatrix(vtkMatrix3x3.vtkMatrix3x3 m) {
    vtkd_im.vtkContextDevice2D_SetMatrix(cast(void*)swigCPtr, vtkMatrix3x3.vtkMatrix3x3.swigGetCPtr(m));
  }

  public void GetMatrix(vtkMatrix3x3.vtkMatrix3x3 m) {
    vtkd_im.vtkContextDevice2D_GetMatrix(cast(void*)swigCPtr, vtkMatrix3x3.vtkMatrix3x3.swigGetCPtr(m));
  }

  public void MultiplyMatrix(vtkMatrix3x3.vtkMatrix3x3 m) {
    vtkd_im.vtkContextDevice2D_MultiplyMatrix(cast(void*)swigCPtr, vtkMatrix3x3.vtkMatrix3x3.swigGetCPtr(m));
  }

  public void PushMatrix() {
    vtkd_im.vtkContextDevice2D_PushMatrix(cast(void*)swigCPtr);
  }

  public void PopMatrix() {
    vtkd_im.vtkContextDevice2D_PopMatrix(cast(void*)swigCPtr);
  }

  public void SetClipping(int* x) {
    vtkd_im.vtkContextDevice2D_SetClipping(cast(void*)swigCPtr, cast(void*)x);
  }

  public void DisableClipping() {
    vtkd_im.vtkContextDevice2D_DisableClipping(cast(void*)swigCPtr);
  }

  public void EnableClipping(bool enable) {
    vtkd_im.vtkContextDevice2D_EnableClipping(cast(void*)swigCPtr, enable);
  }

  public void Begin(vtkViewport.vtkViewport arg0) {
    vtkd_im.vtkContextDevice2D_Begin(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
  }

  public void End() {
    vtkd_im.vtkContextDevice2D_End(cast(void*)swigCPtr);
  }

  public bool GetBufferIdMode() const {
    bool ret = vtkd_im.vtkContextDevice2D_GetBufferIdMode(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void BufferIdModeEnd() {
    vtkd_im.vtkContextDevice2D_BufferIdModeEnd(cast(void*)swigCPtr);
  }

  public void SetViewportSize(vtkVector2i.vtkVector2i size) {
    vtkd_im.vtkContextDevice2D_SetViewportSize(cast(void*)swigCPtr, vtkVector2i.vtkVector2i.swigGetCPtr(size));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void SetViewportRect(vtkRecti.vtkRecti rect) {
    vtkd_im.vtkContextDevice2D_SetViewportRect(cast(void*)swigCPtr, vtkRecti.vtkRecti.swigGetCPtr(rect));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }
}
