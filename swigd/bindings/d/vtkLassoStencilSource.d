/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLassoStencilSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPoints;
static import vtkImageStencilSource;

class vtkLassoStencilSource : vtkImageStencilSource.vtkImageStencilSource {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLassoStencilSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLassoStencilSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLassoStencilSource New() {
    void* cPtr = vtkd_im.vtkLassoStencilSource_New();
    vtkLassoStencilSource ret = (cPtr is null) ? null : new vtkLassoStencilSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLassoStencilSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLassoStencilSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLassoStencilSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLassoStencilSource ret = (cPtr is null) ? null : new vtkLassoStencilSource(cPtr, false);
    return ret;
  }

  public vtkLassoStencilSource NewInstance() const {
    void* cPtr = vtkd_im.vtkLassoStencilSource_NewInstance(cast(void*)swigCPtr);
    vtkLassoStencilSource ret = (cPtr is null) ? null : new vtkLassoStencilSource(cPtr, false);
    return ret;
  }

  alias vtkImageStencilSource.vtkImageStencilSource.NewInstance NewInstance;

  public int GetShape() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetShape(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShape(int _arg) {
    vtkd_im.vtkLassoStencilSource_SetShape(cast(void*)swigCPtr, _arg);
  }

  public int GetShapeMinValue() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetShapeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShapeMaxValue() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetShapeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShapeToPolygon() {
    vtkd_im.vtkLassoStencilSource_SetShapeToPolygon(cast(void*)swigCPtr);
  }

  public void SetShapeToSpline() {
    vtkd_im.vtkLassoStencilSource_SetShapeToSpline(cast(void*)swigCPtr);
  }

  public string GetShapeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkLassoStencilSource_GetShapeAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetPoints(vtkPoints.vtkPoints points) {
    vtkd_im.vtkLassoStencilSource_SetPoints(cast(void*)swigCPtr, vtkPoints.vtkPoints.swigGetCPtr(points));
  }

  public vtkPoints.vtkPoints GetPoints() {
    void* cPtr = vtkd_im.vtkLassoStencilSource_GetPoints(cast(void*)swigCPtr);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public int GetSliceOrientation() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetSliceOrientation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSliceOrientation(int _arg) {
    vtkd_im.vtkLassoStencilSource_SetSliceOrientation(cast(void*)swigCPtr, _arg);
  }

  public int GetSliceOrientationMinValue() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetSliceOrientationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSliceOrientationMaxValue() {
    auto ret = vtkd_im.vtkLassoStencilSource_GetSliceOrientationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSlicePoints(int i, vtkPoints.vtkPoints points) {
    vtkd_im.vtkLassoStencilSource_SetSlicePoints(cast(void*)swigCPtr, i, vtkPoints.vtkPoints.swigGetCPtr(points));
  }

  public vtkPoints.vtkPoints GetSlicePoints(int i) {
    void* cPtr = vtkd_im.vtkLassoStencilSource_GetSlicePoints(cast(void*)swigCPtr, i);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public void RemoveAllSlicePoints() {
    vtkd_im.vtkLassoStencilSource_RemoveAllSlicePoints(cast(void*)swigCPtr);
  }
}
