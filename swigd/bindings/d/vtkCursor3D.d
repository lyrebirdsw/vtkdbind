/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCursor3D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyData;
static import vtkPolyDataAlgorithm;

class vtkCursor3D : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCursor3D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCursor3D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCursor3D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCursor3D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCursor3D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCursor3D ret = (cPtr is null) ? null : new vtkCursor3D(cPtr, false);
    return ret;
  }

  public vtkCursor3D NewInstance() const {
    void* cPtr = vtkd_im.vtkCursor3D_NewInstance(cast(void*)swigCPtr);
    vtkCursor3D ret = (cPtr is null) ? null : new vtkCursor3D(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkCursor3D New() {
    void* cPtr = vtkd_im.vtkCursor3D_New();
    vtkCursor3D ret = (cPtr is null) ? null : new vtkCursor3D(cPtr, false);
    return ret;
  }

  public void SetModelBounds(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) {
    vtkd_im.vtkCursor3D_SetModelBounds__SWIG_0(cast(void*)swigCPtr, xmin, xmax, ymin, ymax, zmin, zmax);
  }

  public void SetModelBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkCursor3D_SetModelBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public double* GetModelBounds() {
    auto ret = cast(double*)vtkd_im.vtkCursor3D_GetModelBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetModelBounds(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkCursor3D_GetModelBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkCursor3D_SetFocalPoint__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetFocalPoint(double x, double y, double z) {
    vtkd_im.vtkCursor3D_SetFocalPoint__SWIG_1(cast(void*)swigCPtr, x, y, z);
  }

  public double* GetFocalPoint() {
    auto ret = cast(double*)vtkd_im.vtkCursor3D_GetFocalPoint__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetFocalPoint(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkCursor3D_GetFocalPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetOutline(int _arg) {
    vtkd_im.vtkCursor3D_SetOutline(cast(void*)swigCPtr, _arg);
  }

  public int GetOutline() {
    auto ret = vtkd_im.vtkCursor3D_GetOutline(cast(void*)swigCPtr);
    return ret;
  }

  public void OutlineOn() {
    vtkd_im.vtkCursor3D_OutlineOn(cast(void*)swigCPtr);
  }

  public void OutlineOff() {
    vtkd_im.vtkCursor3D_OutlineOff(cast(void*)swigCPtr);
  }

  public void SetAxes(int _arg) {
    vtkd_im.vtkCursor3D_SetAxes(cast(void*)swigCPtr, _arg);
  }

  public int GetAxes() {
    auto ret = vtkd_im.vtkCursor3D_GetAxes(cast(void*)swigCPtr);
    return ret;
  }

  public void AxesOn() {
    vtkd_im.vtkCursor3D_AxesOn(cast(void*)swigCPtr);
  }

  public void AxesOff() {
    vtkd_im.vtkCursor3D_AxesOff(cast(void*)swigCPtr);
  }

  public void SetXShadows(int _arg) {
    vtkd_im.vtkCursor3D_SetXShadows(cast(void*)swigCPtr, _arg);
  }

  public int GetXShadows() {
    auto ret = vtkd_im.vtkCursor3D_GetXShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void XShadowsOn() {
    vtkd_im.vtkCursor3D_XShadowsOn(cast(void*)swigCPtr);
  }

  public void XShadowsOff() {
    vtkd_im.vtkCursor3D_XShadowsOff(cast(void*)swigCPtr);
  }

  public void SetYShadows(int _arg) {
    vtkd_im.vtkCursor3D_SetYShadows(cast(void*)swigCPtr, _arg);
  }

  public int GetYShadows() {
    auto ret = vtkd_im.vtkCursor3D_GetYShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void YShadowsOn() {
    vtkd_im.vtkCursor3D_YShadowsOn(cast(void*)swigCPtr);
  }

  public void YShadowsOff() {
    vtkd_im.vtkCursor3D_YShadowsOff(cast(void*)swigCPtr);
  }

  public void SetZShadows(int _arg) {
    vtkd_im.vtkCursor3D_SetZShadows(cast(void*)swigCPtr, _arg);
  }

  public int GetZShadows() {
    auto ret = vtkd_im.vtkCursor3D_GetZShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void ZShadowsOn() {
    vtkd_im.vtkCursor3D_ZShadowsOn(cast(void*)swigCPtr);
  }

  public void ZShadowsOff() {
    vtkd_im.vtkCursor3D_ZShadowsOff(cast(void*)swigCPtr);
  }

  public void SetTranslationMode(int _arg) {
    vtkd_im.vtkCursor3D_SetTranslationMode(cast(void*)swigCPtr, _arg);
  }

  public int GetTranslationMode() {
    auto ret = vtkd_im.vtkCursor3D_GetTranslationMode(cast(void*)swigCPtr);
    return ret;
  }

  public void TranslationModeOn() {
    vtkd_im.vtkCursor3D_TranslationModeOn(cast(void*)swigCPtr);
  }

  public void TranslationModeOff() {
    vtkd_im.vtkCursor3D_TranslationModeOff(cast(void*)swigCPtr);
  }

  public void SetWrap(int _arg) {
    vtkd_im.vtkCursor3D_SetWrap(cast(void*)swigCPtr, _arg);
  }

  public int GetWrap() {
    auto ret = vtkd_im.vtkCursor3D_GetWrap(cast(void*)swigCPtr);
    return ret;
  }

  public void WrapOn() {
    vtkd_im.vtkCursor3D_WrapOn(cast(void*)swigCPtr);
  }

  public void WrapOff() {
    vtkd_im.vtkCursor3D_WrapOff(cast(void*)swigCPtr);
  }

  public vtkPolyData.vtkPolyData GetFocus() {
    void* cPtr = vtkd_im.vtkCursor3D_GetFocus(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void AllOn() {
    vtkd_im.vtkCursor3D_AllOn(cast(void*)swigCPtr);
  }

  public void AllOff() {
    vtkd_im.vtkCursor3D_AllOff(cast(void*)swigCPtr);
  }
}
