/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageReader2;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStringArray;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkImageAlgorithm;

class vtkImageReader2 : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageReader2_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageReader2 obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageReader2 New() {
    void* cPtr = vtkd_im.vtkImageReader2_New();
    vtkImageReader2 ret = (cPtr is null) ? null : new vtkImageReader2(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageReader2_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageReader2 SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageReader2_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageReader2 ret = (cPtr is null) ? null : new vtkImageReader2(cPtr, false);
    return ret;
  }

  public vtkImageReader2 NewInstance() const {
    void* cPtr = vtkd_im.vtkImageReader2_NewInstance(cast(void*)swigCPtr);
    vtkImageReader2 ret = (cPtr is null) ? null : new vtkImageReader2(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void SetFileName(string arg0) {
    vtkd_im.vtkImageReader2_SetFileName(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileNames(vtkStringArray.vtkStringArray arg0) {
    vtkd_im.vtkImageReader2_SetFileNames(cast(void*)swigCPtr, vtkStringArray.vtkStringArray.swigGetCPtr(arg0));
  }

  public vtkStringArray.vtkStringArray GetFileNames() {
    void* cPtr = vtkd_im.vtkImageReader2_GetFileNames(cast(void*)swigCPtr);
    vtkStringArray.vtkStringArray ret = (cPtr is null) ? null : new vtkStringArray.vtkStringArray(cPtr, false);
    return ret;
  }

  public void SetFilePrefix(string arg0) {
    vtkd_im.vtkImageReader2_SetFilePrefix(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public string GetFilePrefix() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetFilePrefix(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFilePattern(string arg0) {
    vtkd_im.vtkImageReader2_SetFilePattern(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
  }

  public string GetFilePattern() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetFilePattern(cast(void*)swigCPtr));
    return ret;
  }

  public void SetMemoryBuffer(void* arg0) {
    vtkd_im.vtkImageReader2_SetMemoryBuffer(cast(void*)swigCPtr, cast(void*)arg0);
  }

  public void* GetMemoryBuffer() {
    auto ret = cast(void*)vtkd_im.vtkImageReader2_GetMemoryBuffer(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMemoryBufferLength(long buflen) {
    vtkd_im.vtkImageReader2_SetMemoryBufferLength(cast(void*)swigCPtr, buflen);
  }

  public long GetMemoryBufferLength() {
    auto ret = vtkd_im.vtkImageReader2_GetMemoryBufferLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataScalarType(int type) {
    vtkd_im.vtkImageReader2_SetDataScalarType(cast(void*)swigCPtr, type);
  }

  public void SetDataScalarTypeToFloat() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToFloat(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToDouble() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToDouble(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToInt() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToInt(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToUnsignedInt() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToUnsignedInt(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToShort() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToShort(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToUnsignedShort() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToUnsignedShort(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToChar() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToChar(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToSignedChar() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToSignedChar(cast(void*)swigCPtr);
  }

  public void SetDataScalarTypeToUnsignedChar() {
    vtkd_im.vtkImageReader2_SetDataScalarTypeToUnsignedChar(cast(void*)swigCPtr);
  }

  public int GetDataScalarType() {
    auto ret = vtkd_im.vtkImageReader2_GetDataScalarType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfScalarComponents(int _arg) {
    vtkd_im.vtkImageReader2_SetNumberOfScalarComponents(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfScalarComponents() {
    auto ret = vtkd_im.vtkImageReader2_GetNumberOfScalarComponents(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataExtent(int _arg1, int _arg2, int _arg3, int _arg4, int _arg5, int _arg6) {
    vtkd_im.vtkImageReader2_SetDataExtent__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetDataExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageReader2_SetDataExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetDataExtent() {
    auto ret = cast(int*)vtkd_im.vtkImageReader2_GetDataExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkImageReader2_GetDataExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDataExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageReader2_GetDataExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetFileDimensionality(int _arg) {
    vtkd_im.vtkImageReader2_SetFileDimensionality(cast(void*)swigCPtr, _arg);
  }

  public int GetFileDimensionality() {
    auto ret = vtkd_im.vtkImageReader2_GetFileDimensionality(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataSpacing(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkImageReader2_SetDataSpacing__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageReader2_SetDataSpacing__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataSpacing() {
    auto ret = cast(double*)vtkd_im.vtkImageReader2_GetDataSpacing__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataSpacing(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkImageReader2_GetDataSpacing__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageReader2_GetDataSpacing__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetDataOrigin(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkImageReader2_SetDataOrigin__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageReader2_SetDataOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataOrigin() {
    auto ret = cast(double*)vtkd_im.vtkImageReader2_GetDataOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataOrigin(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkImageReader2_GetDataOrigin__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkImageReader2_GetDataOrigin__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public core.stdc.config.c_ulong GetHeaderSize() {
    auto ret = vtkd_im.vtkImageReader2_GetHeaderSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong GetHeaderSize(core.stdc.config.c_ulong slice) {
    auto ret = vtkd_im.vtkImageReader2_GetHeaderSize__SWIG_1(cast(void*)swigCPtr, slice);
    return ret;
  }

  public void SetHeaderSize(core.stdc.config.c_ulong size) {
    vtkd_im.vtkImageReader2_SetHeaderSize(cast(void*)swigCPtr, size);
  }

  public void SetDataByteOrderToBigEndian() {
    vtkd_im.vtkImageReader2_SetDataByteOrderToBigEndian(cast(void*)swigCPtr);
  }

  public void SetDataByteOrderToLittleEndian() {
    vtkd_im.vtkImageReader2_SetDataByteOrderToLittleEndian(cast(void*)swigCPtr);
  }

  public int GetDataByteOrder() {
    auto ret = vtkd_im.vtkImageReader2_GetDataByteOrder(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDataByteOrder(int arg0) {
    vtkd_im.vtkImageReader2_SetDataByteOrder(cast(void*)swigCPtr, arg0);
  }

  public string GetDataByteOrderAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetDataByteOrderAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileNameSliceOffset(int _arg) {
    vtkd_im.vtkImageReader2_SetFileNameSliceOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetFileNameSliceOffset() {
    auto ret = vtkd_im.vtkImageReader2_GetFileNameSliceOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFileNameSliceSpacing(int _arg) {
    vtkd_im.vtkImageReader2_SetFileNameSliceSpacing(cast(void*)swigCPtr, _arg);
  }

  public int GetFileNameSliceSpacing() {
    auto ret = vtkd_im.vtkImageReader2_GetFileNameSliceSpacing(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSwapBytes(int _arg) {
    vtkd_im.vtkImageReader2_SetSwapBytes(cast(void*)swigCPtr, _arg);
  }

  public int GetSwapBytes() {
    auto ret = vtkd_im.vtkImageReader2_GetSwapBytes(cast(void*)swigCPtr);
    return ret;
  }

  public void SwapBytesOn() {
    vtkd_im.vtkImageReader2_SwapBytesOn(cast(void*)swigCPtr);
  }

  public void SwapBytesOff() {
    vtkd_im.vtkImageReader2_SwapBytesOff(cast(void*)swigCPtr);
  }

  public int OpenFile() {
    auto ret = vtkd_im.vtkImageReader2_OpenFile(cast(void*)swigCPtr);
    return ret;
  }

  public void SeekFile(int i, int j, int k) {
    vtkd_im.vtkImageReader2_SeekFile(cast(void*)swigCPtr, i, j, k);
  }

  public void FileLowerLeftOn() {
    vtkd_im.vtkImageReader2_FileLowerLeftOn(cast(void*)swigCPtr);
  }

  public void FileLowerLeftOff() {
    vtkd_im.vtkImageReader2_FileLowerLeftOff(cast(void*)swigCPtr);
  }

  public int GetFileLowerLeft() {
    auto ret = vtkd_im.vtkImageReader2_GetFileLowerLeft(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFileLowerLeft(int _arg) {
    vtkd_im.vtkImageReader2_SetFileLowerLeft(cast(void*)swigCPtr, _arg);
  }

  public void ComputeInternalFileName(int slice) {
    vtkd_im.vtkImageReader2_ComputeInternalFileName(cast(void*)swigCPtr, slice);
  }

  public string GetInternalFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetInternalFileName(cast(void*)swigCPtr));
    return ret;
  }

  public int CanReadFile(string arg0) {
    auto ret = vtkd_im.vtkImageReader2_CanReadFile(cast(void*)swigCPtr, (arg0 ? std.string.toStringz(arg0) : null));
    return ret;
  }

  public string GetFileExtensions() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetFileExtensions(cast(void*)swigCPtr));
    return ret;
  }

  public string GetDescriptiveName() {
    string ret = std.conv.to!string(vtkd_im.vtkImageReader2_GetDescriptiveName(cast(void*)swigCPtr));
    return ret;
  }
}
