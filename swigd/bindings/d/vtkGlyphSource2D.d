/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGlyphSource2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkGlyphSource2D : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGlyphSource2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGlyphSource2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGlyphSource2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGlyphSource2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGlyphSource2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGlyphSource2D ret = (cPtr is null) ? null : new vtkGlyphSource2D(cPtr, false);
    return ret;
  }

  public vtkGlyphSource2D NewInstance() const {
    void* cPtr = vtkd_im.vtkGlyphSource2D_NewInstance(cast(void*)swigCPtr);
    vtkGlyphSource2D ret = (cPtr is null) ? null : new vtkGlyphSource2D(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkGlyphSource2D New() {
    void* cPtr = vtkd_im.vtkGlyphSource2D_New();
    vtkGlyphSource2D ret = (cPtr is null) ? null : new vtkGlyphSource2D(cPtr, false);
    return ret;
  }

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkGlyphSource2D_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGlyphSource2D_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkGlyphSource2D_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkGlyphSource2D_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetScale(double _arg) {
    vtkd_im.vtkGlyphSource2D_SetScale(cast(void*)swigCPtr, _arg);
  }

  public double GetScaleMinValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScaleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetScaleMaxValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScaleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetScale() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScale(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScale2(double _arg) {
    vtkd_im.vtkGlyphSource2D_SetScale2(cast(void*)swigCPtr, _arg);
  }

  public double GetScale2MinValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScale2MinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetScale2MaxValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScale2MaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetScale2() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetScale2(cast(void*)swigCPtr);
    return ret;
  }

  public void SetColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkGlyphSource2D_SetColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGlyphSource2D_SetColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetColor() {
    auto ret = cast(double*)vtkd_im.vtkGlyphSource2D_GetColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetColor(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkGlyphSource2D_GetColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetFilled(int _arg) {
    vtkd_im.vtkGlyphSource2D_SetFilled(cast(void*)swigCPtr, _arg);
  }

  public int GetFilled() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetFilled(cast(void*)swigCPtr);
    return ret;
  }

  public void FilledOn() {
    vtkd_im.vtkGlyphSource2D_FilledOn(cast(void*)swigCPtr);
  }

  public void FilledOff() {
    vtkd_im.vtkGlyphSource2D_FilledOff(cast(void*)swigCPtr);
  }

  public void SetDash(int _arg) {
    vtkd_im.vtkGlyphSource2D_SetDash(cast(void*)swigCPtr, _arg);
  }

  public int GetDash() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetDash(cast(void*)swigCPtr);
    return ret;
  }

  public void DashOn() {
    vtkd_im.vtkGlyphSource2D_DashOn(cast(void*)swigCPtr);
  }

  public void DashOff() {
    vtkd_im.vtkGlyphSource2D_DashOff(cast(void*)swigCPtr);
  }

  public void SetCross(int _arg) {
    vtkd_im.vtkGlyphSource2D_SetCross(cast(void*)swigCPtr, _arg);
  }

  public int GetCross() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetCross(cast(void*)swigCPtr);
    return ret;
  }

  public void CrossOn() {
    vtkd_im.vtkGlyphSource2D_CrossOn(cast(void*)swigCPtr);
  }

  public void CrossOff() {
    vtkd_im.vtkGlyphSource2D_CrossOff(cast(void*)swigCPtr);
  }

  public void SetRotationAngle(double _arg) {
    vtkd_im.vtkGlyphSource2D_SetRotationAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetRotationAngle() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetRotationAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGlyphType(int _arg) {
    vtkd_im.vtkGlyphSource2D_SetGlyphType(cast(void*)swigCPtr, _arg);
  }

  public int GetGlyphTypeMinValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetGlyphTypeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGlyphTypeMaxValue() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetGlyphTypeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGlyphType() {
    auto ret = vtkd_im.vtkGlyphSource2D_GetGlyphType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGlyphTypeToNone() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToNone(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToVertex() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToVertex(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToDash() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToDash(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToCross() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToCross(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToThickCross() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToThickCross(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToTriangle() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToTriangle(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToSquare() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToSquare(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToCircle() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToCircle(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToDiamond() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToDiamond(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToArrow() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToArrow(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToThickArrow() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToThickArrow(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToHookedArrow() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToHookedArrow(cast(void*)swigCPtr);
  }

  public void SetGlyphTypeToEdgeArrow() {
    vtkd_im.vtkGlyphSource2D_SetGlyphTypeToEdgeArrow(cast(void*)swigCPtr);
  }
}
