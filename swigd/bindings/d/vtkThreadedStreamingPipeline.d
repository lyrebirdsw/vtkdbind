/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkThreadedStreamingPipeline;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformationIntegerKey;
static import vtkInformationObjectBaseKey;
static import vtkExecutiveCollection;
static import vtkInformation;
static import vtkExecutive;
static import vtkComputingResources;
static import vtkExecutionScheduler;
static import vtkCompositeDataPipeline;

class vtkThreadedStreamingPipeline : vtkCompositeDataPipeline.vtkCompositeDataPipeline {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkThreadedStreamingPipeline_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkThreadedStreamingPipeline obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkThreadedStreamingPipeline New() {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_New();
    vtkThreadedStreamingPipeline ret = (cPtr is null) ? null : new vtkThreadedStreamingPipeline(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkThreadedStreamingPipeline_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkThreadedStreamingPipeline SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkThreadedStreamingPipeline ret = (cPtr is null) ? null : new vtkThreadedStreamingPipeline(cPtr, false);
    return ret;
  }

  public vtkThreadedStreamingPipeline NewInstance() const {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_NewInstance(cast(void*)swigCPtr);
    vtkThreadedStreamingPipeline ret = (cPtr is null) ? null : new vtkThreadedStreamingPipeline(cPtr, false);
    return ret;
  }

  alias vtkCompositeDataPipeline.vtkCompositeDataPipeline.NewInstance NewInstance;

  public static vtkInformationIntegerKey.vtkInformationIntegerKey AUTO_PROPAGATE() {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_AUTO_PROPAGATE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationObjectBaseKey.vtkInformationObjectBaseKey EXTRA_INFORMATION() {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_EXTRA_INFORMATION();
    vtkInformationObjectBaseKey.vtkInformationObjectBaseKey ret = (cPtr is null) ? null : new vtkInformationObjectBaseKey.vtkInformationObjectBaseKey(cPtr, false);
    return ret;
  }

  public static void SetMultiThreadedEnabled(bool enabled) {
    vtkd_im.vtkThreadedStreamingPipeline_SetMultiThreadedEnabled(enabled);
  }

  public static void SetAutoPropagatePush(bool enabled) {
    vtkd_im.vtkThreadedStreamingPipeline_SetAutoPropagatePush(enabled);
  }

  public static void Pull(vtkExecutiveCollection.vtkExecutiveCollection execs) {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_0(vtkExecutiveCollection.vtkExecutiveCollection.swigGetCPtr(execs));
  }

  public static void Pull(vtkExecutiveCollection.vtkExecutiveCollection execs, vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_1(vtkExecutiveCollection.vtkExecutiveCollection.swigGetCPtr(execs), vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public static void Push(vtkExecutiveCollection.vtkExecutiveCollection execs) {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_0(vtkExecutiveCollection.vtkExecutiveCollection.swigGetCPtr(execs));
  }

  public static void Push(vtkExecutiveCollection.vtkExecutiveCollection execs, vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_1(vtkExecutiveCollection.vtkExecutiveCollection.swigGetCPtr(execs), vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public static void Pull(vtkExecutive.vtkExecutive exec) {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_2(vtkExecutive.vtkExecutive.swigGetCPtr(exec));
  }

  public static void Pull(vtkExecutive.vtkExecutive exec, vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_3(vtkExecutive.vtkExecutive.swigGetCPtr(exec), vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public static void Push(vtkExecutive.vtkExecutive exec) {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_2(vtkExecutive.vtkExecutive.swigGetCPtr(exec));
  }

  public static void Push(vtkExecutive.vtkExecutive exec, vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_3(vtkExecutive.vtkExecutive.swigGetCPtr(exec), vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public void Pull() {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_4(cast(void*)swigCPtr);
  }

  public void Pull(vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Pull__SWIG_5(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public void Push() {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_4(cast(void*)swigCPtr);
  }

  public void Push(vtkInformation.vtkInformation info) {
    vtkd_im.vtkThreadedStreamingPipeline_Push__SWIG_5(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(info));
  }

  public void ReleaseInputs() {
    vtkd_im.vtkThreadedStreamingPipeline_ReleaseInputs(cast(void*)swigCPtr);
  }

  public int ForceUpdateData(int processingUnit, vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkThreadedStreamingPipeline_ForceUpdateData(cast(void*)swigCPtr, processingUnit, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public void UpdateRequestDataTimeFromSource() {
    vtkd_im.vtkThreadedStreamingPipeline_UpdateRequestDataTimeFromSource(cast(void*)swigCPtr);
  }

  public vtkComputingResources.vtkComputingResources GetResources() {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_GetResources(cast(void*)swigCPtr);
    vtkComputingResources.vtkComputingResources ret = (cPtr is null) ? null : new vtkComputingResources.vtkComputingResources(cPtr, false);
    return ret;
  }

  public void LastDataRequestTime(float value) @property {
    vtkd_im.vtkThreadedStreamingPipeline_LastDataRequestTime_set(cast(void*)swigCPtr, value);
  }

  public float LastDataRequestTime() @property const {
    auto ret = vtkd_im.vtkThreadedStreamingPipeline_LastDataRequestTime_get(cast(void*)swigCPtr);
    return ret;
  }

  public void LastDataRequestTimeFromSource(float value) @property {
    vtkd_im.vtkThreadedStreamingPipeline_LastDataRequestTimeFromSource_set(cast(void*)swigCPtr, value);
  }

  public float LastDataRequestTimeFromSource() @property const {
    auto ret = vtkd_im.vtkThreadedStreamingPipeline_LastDataRequestTimeFromSource_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ForceDataRequest(vtkInformation.vtkInformation value) @property {
    vtkd_im.vtkThreadedStreamingPipeline_ForceDataRequest_set(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(value));
  }

  public vtkInformation.vtkInformation ForceDataRequest() @property const {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_ForceDataRequest_get(cast(void*)swigCPtr);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public void Resources(vtkComputingResources.vtkComputingResources value) @property {
    vtkd_im.vtkThreadedStreamingPipeline_Resources_set(cast(void*)swigCPtr, vtkComputingResources.vtkComputingResources.swigGetCPtr(value));
  }

  public vtkComputingResources.vtkComputingResources Resources() @property const {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_Resources_get(cast(void*)swigCPtr);
    vtkComputingResources.vtkComputingResources ret = (cPtr is null) ? null : new vtkComputingResources.vtkComputingResources(cPtr, false);
    return ret;
  }

  public void Scheduler(vtkExecutionScheduler.vtkExecutionScheduler value) @property {
    vtkd_im.vtkThreadedStreamingPipeline_Scheduler_set(cast(void*)swigCPtr, vtkExecutionScheduler.vtkExecutionScheduler.swigGetCPtr(value));
  }

  public vtkExecutionScheduler.vtkExecutionScheduler Scheduler() @property const {
    void* cPtr = vtkd_im.vtkThreadedStreamingPipeline_Scheduler_get(cast(void*)swigCPtr);
    vtkExecutionScheduler.vtkExecutionScheduler ret = (cPtr is null) ? null : new vtkExecutionScheduler.vtkExecutionScheduler(cPtr, false);
    return ret;
  }
}
