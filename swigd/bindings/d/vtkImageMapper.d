/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageMapper;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkViewport;
static import vtkActor2D;
static import vtkImageData;
static import SWIGTYPE_p_int;
static import vtkMapper2D;

class vtkImageMapper : vtkMapper2D.vtkMapper2D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageMapper_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageMapper obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageMapper_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageMapper SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageMapper_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageMapper ret = (cPtr is null) ? null : new vtkImageMapper(cPtr, false);
    return ret;
  }

  public vtkImageMapper NewInstance() const {
    void* cPtr = vtkd_im.vtkImageMapper_NewInstance(cast(void*)swigCPtr);
    vtkImageMapper ret = (cPtr is null) ? null : new vtkImageMapper(cPtr, false);
    return ret;
  }

  alias vtkMapper2D.vtkMapper2D.NewInstance NewInstance;

  public static vtkImageMapper New() {
    void* cPtr = vtkd_im.vtkImageMapper_New();
    vtkImageMapper ret = (cPtr is null) ? null : new vtkImageMapper(cPtr, false);
    return ret;
  }

  public void SetColorWindow(double _arg) {
    vtkd_im.vtkImageMapper_SetColorWindow(cast(void*)swigCPtr, _arg);
  }

  public double GetColorWindow() {
    auto ret = vtkd_im.vtkImageMapper_GetColorWindow(cast(void*)swigCPtr);
    return ret;
  }

  public void SetColorLevel(double _arg) {
    vtkd_im.vtkImageMapper_SetColorLevel(cast(void*)swigCPtr, _arg);
  }

  public double GetColorLevel() {
    auto ret = vtkd_im.vtkImageMapper_GetColorLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZSlice(int _arg) {
    vtkd_im.vtkImageMapper_SetZSlice(cast(void*)swigCPtr, _arg);
  }

  public int GetZSlice() {
    auto ret = vtkd_im.vtkImageMapper_GetZSlice(cast(void*)swigCPtr);
    return ret;
  }

  public int GetWholeZMin() {
    auto ret = vtkd_im.vtkImageMapper_GetWholeZMin(cast(void*)swigCPtr);
    return ret;
  }

  public int GetWholeZMax() {
    auto ret = vtkd_im.vtkImageMapper_GetWholeZMax(cast(void*)swigCPtr);
    return ret;
  }

  public void RenderStart(vtkViewport.vtkViewport viewport, vtkActor2D.vtkActor2D actor) {
    vtkd_im.vtkImageMapper_RenderStart(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport), vtkActor2D.vtkActor2D.swigGetCPtr(actor));
  }

  public void RenderData(vtkViewport.vtkViewport arg0, vtkImageData.vtkImageData arg1, vtkActor2D.vtkActor2D arg2) {
    vtkd_im.vtkImageMapper_RenderData(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0), vtkImageData.vtkImageData.swigGetCPtr(arg1), vtkActor2D.vtkActor2D.swigGetCPtr(arg2));
  }

  public double GetColorShift() {
    auto ret = vtkd_im.vtkImageMapper_GetColorShift(cast(void*)swigCPtr);
    return ret;
  }

  public double GetColorScale() {
    auto ret = vtkd_im.vtkImageMapper_GetColorScale(cast(void*)swigCPtr);
    return ret;
  }

  public void DisplayExtent(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkImageMapper_DisplayExtent_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int DisplayExtent() @property const {
    void* cPtr = vtkd_im.vtkImageMapper_DisplayExtent_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void SetInputData(vtkImageData.vtkImageData input) {
    vtkd_im.vtkImageMapper_SetInputData(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(input));
  }

  public vtkImageData.vtkImageData GetInput() {
    void* cPtr = vtkd_im.vtkImageMapper_GetInput(cast(void*)swigCPtr);
    vtkImageData.vtkImageData ret = (cPtr is null) ? null : new vtkImageData.vtkImageData(cPtr, false);
    return ret;
  }

  public void SetRenderToRectangle(int _arg) {
    vtkd_im.vtkImageMapper_SetRenderToRectangle(cast(void*)swigCPtr, _arg);
  }

  public int GetRenderToRectangle() {
    auto ret = vtkd_im.vtkImageMapper_GetRenderToRectangle(cast(void*)swigCPtr);
    return ret;
  }

  public void RenderToRectangleOn() {
    vtkd_im.vtkImageMapper_RenderToRectangleOn(cast(void*)swigCPtr);
  }

  public void RenderToRectangleOff() {
    vtkd_im.vtkImageMapper_RenderToRectangleOff(cast(void*)swigCPtr);
  }

  public void SetUseCustomExtents(int _arg) {
    vtkd_im.vtkImageMapper_SetUseCustomExtents(cast(void*)swigCPtr, _arg);
  }

  public int GetUseCustomExtents() {
    auto ret = vtkd_im.vtkImageMapper_GetUseCustomExtents(cast(void*)swigCPtr);
    return ret;
  }

  public void UseCustomExtentsOn() {
    vtkd_im.vtkImageMapper_UseCustomExtentsOn(cast(void*)swigCPtr);
  }

  public void UseCustomExtentsOff() {
    vtkd_im.vtkImageMapper_UseCustomExtentsOff(cast(void*)swigCPtr);
  }

  public void SetCustomDisplayExtents(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkImageMapper_SetCustomDisplayExtents(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public int* GetCustomDisplayExtents() {
    auto ret = cast(int*)vtkd_im.vtkImageMapper_GetCustomDisplayExtents__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCustomDisplayExtents(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkImageMapper_GetCustomDisplayExtents__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }
}
