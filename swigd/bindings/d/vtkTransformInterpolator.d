/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTransformInterpolator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTransform;
static import vtkMatrix4x4;
static import vtkProp3D;
static import vtkTupleInterpolator;
static import vtkQuaternionInterpolator;
static import vtkObject;

class vtkTransformInterpolator : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTransformInterpolator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTransformInterpolator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTransformInterpolator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTransformInterpolator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTransformInterpolator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTransformInterpolator ret = (cPtr is null) ? null : new vtkTransformInterpolator(cPtr, false);
    return ret;
  }

  public vtkTransformInterpolator NewInstance() const {
    void* cPtr = vtkd_im.vtkTransformInterpolator_NewInstance(cast(void*)swigCPtr);
    vtkTransformInterpolator ret = (cPtr is null) ? null : new vtkTransformInterpolator(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkTransformInterpolator New() {
    void* cPtr = vtkd_im.vtkTransformInterpolator_New();
    vtkTransformInterpolator ret = (cPtr is null) ? null : new vtkTransformInterpolator(cPtr, false);
    return ret;
  }

  public int GetNumberOfTransforms() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetNumberOfTransforms(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMinimumT() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetMinimumT(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumT() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetMaximumT(cast(void*)swigCPtr);
    return ret;
  }

  public void Initialize() {
    vtkd_im.vtkTransformInterpolator_Initialize(cast(void*)swigCPtr);
  }

  public void AddTransform(double t, vtkTransform.vtkTransform xform) {
    vtkd_im.vtkTransformInterpolator_AddTransform__SWIG_0(cast(void*)swigCPtr, t, vtkTransform.vtkTransform.swigGetCPtr(xform));
  }

  public void AddTransform(double t, vtkMatrix4x4.vtkMatrix4x4 matrix) {
    vtkd_im.vtkTransformInterpolator_AddTransform__SWIG_1(cast(void*)swigCPtr, t, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(matrix));
  }

  public void AddTransform(double t, vtkProp3D.vtkProp3D prop3D) {
    vtkd_im.vtkTransformInterpolator_AddTransform__SWIG_2(cast(void*)swigCPtr, t, vtkProp3D.vtkProp3D.swigGetCPtr(prop3D));
  }

  public void RemoveTransform(double t) {
    vtkd_im.vtkTransformInterpolator_RemoveTransform(cast(void*)swigCPtr, t);
  }

  public void InterpolateTransform(double t, vtkTransform.vtkTransform xform) {
    vtkd_im.vtkTransformInterpolator_InterpolateTransform(cast(void*)swigCPtr, t, vtkTransform.vtkTransform.swigGetCPtr(xform));
  }

  public void SetInterpolationType(int _arg) {
    vtkd_im.vtkTransformInterpolator_SetInterpolationType(cast(void*)swigCPtr, _arg);
  }

  public int GetInterpolationTypeMinValue() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetInterpolationTypeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInterpolationTypeMaxValue() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetInterpolationTypeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInterpolationType() {
    auto ret = vtkd_im.vtkTransformInterpolator_GetInterpolationType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInterpolationTypeToLinear() {
    vtkd_im.vtkTransformInterpolator_SetInterpolationTypeToLinear(cast(void*)swigCPtr);
  }

  public void SetInterpolationTypeToSpline() {
    vtkd_im.vtkTransformInterpolator_SetInterpolationTypeToSpline(cast(void*)swigCPtr);
  }

  public void SetInterpolationTypeToManual() {
    vtkd_im.vtkTransformInterpolator_SetInterpolationTypeToManual(cast(void*)swigCPtr);
  }

  public void SetPositionInterpolator(vtkTupleInterpolator.vtkTupleInterpolator arg0) {
    vtkd_im.vtkTransformInterpolator_SetPositionInterpolator(cast(void*)swigCPtr, vtkTupleInterpolator.vtkTupleInterpolator.swigGetCPtr(arg0));
  }

  public vtkTupleInterpolator.vtkTupleInterpolator GetPositionInterpolator() {
    void* cPtr = vtkd_im.vtkTransformInterpolator_GetPositionInterpolator(cast(void*)swigCPtr);
    vtkTupleInterpolator.vtkTupleInterpolator ret = (cPtr is null) ? null : new vtkTupleInterpolator.vtkTupleInterpolator(cPtr, false);
    return ret;
  }

  public void SetScaleInterpolator(vtkTupleInterpolator.vtkTupleInterpolator arg0) {
    vtkd_im.vtkTransformInterpolator_SetScaleInterpolator(cast(void*)swigCPtr, vtkTupleInterpolator.vtkTupleInterpolator.swigGetCPtr(arg0));
  }

  public vtkTupleInterpolator.vtkTupleInterpolator GetScaleInterpolator() {
    void* cPtr = vtkd_im.vtkTransformInterpolator_GetScaleInterpolator(cast(void*)swigCPtr);
    vtkTupleInterpolator.vtkTupleInterpolator ret = (cPtr is null) ? null : new vtkTupleInterpolator.vtkTupleInterpolator(cPtr, false);
    return ret;
  }

  public void SetRotationInterpolator(vtkQuaternionInterpolator.vtkQuaternionInterpolator arg0) {
    vtkd_im.vtkTransformInterpolator_SetRotationInterpolator(cast(void*)swigCPtr, vtkQuaternionInterpolator.vtkQuaternionInterpolator.swigGetCPtr(arg0));
  }

  public vtkQuaternionInterpolator.vtkQuaternionInterpolator GetRotationInterpolator() {
    void* cPtr = vtkd_im.vtkTransformInterpolator_GetRotationInterpolator(cast(void*)swigCPtr);
    vtkQuaternionInterpolator.vtkQuaternionInterpolator ret = (cPtr is null) ? null : new vtkQuaternionInterpolator.vtkQuaternionInterpolator(cPtr, false);
    return ret;
  }
}
