/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTextRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTextActor;
static import SWIGTYPE_p_double;
static import vtkObject;
static import vtkBorderRepresentation;

class vtkTextRepresentation : vtkBorderRepresentation.vtkBorderRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTextRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTextRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTextRepresentation New() {
    void* cPtr = vtkd_im.vtkTextRepresentation_New();
    vtkTextRepresentation ret = (cPtr is null) ? null : new vtkTextRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTextRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTextRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTextRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTextRepresentation ret = (cPtr is null) ? null : new vtkTextRepresentation(cPtr, false);
    return ret;
  }

  public vtkTextRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkTextRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkTextRepresentation ret = (cPtr is null) ? null : new vtkTextRepresentation(cPtr, false);
    return ret;
  }

  alias vtkBorderRepresentation.vtkBorderRepresentation.NewInstance NewInstance;

  public void SetTextActor(vtkTextActor.vtkTextActor textActor) {
    vtkd_im.vtkTextRepresentation_SetTextActor(cast(void*)swigCPtr, vtkTextActor.vtkTextActor.swigGetCPtr(textActor));
  }

  public vtkTextActor.vtkTextActor GetTextActor() {
    void* cPtr = vtkd_im.vtkTextRepresentation_GetTextActor(cast(void*)swigCPtr);
    vtkTextActor.vtkTextActor ret = (cPtr is null) ? null : new vtkTextActor.vtkTextActor(cPtr, false);
    return ret;
  }

  public void SetText(string text) {
    vtkd_im.vtkTextRepresentation_SetText(cast(void*)swigCPtr, (text ? std.string.toStringz(text) : null));
  }

  public string GetText() {
    string ret = std.conv.to!string(vtkd_im.vtkTextRepresentation_GetText(cast(void*)swigCPtr));
    return ret;
  }

  public void SetWindowLocation(int enumLocation) {
    vtkd_im.vtkTextRepresentation_SetWindowLocation(cast(void*)swigCPtr, enumLocation);
  }

  public int GetWindowLocation() {
    auto ret = vtkd_im.vtkTextRepresentation_GetWindowLocation(cast(void*)swigCPtr);
    return ret;
  }

  public override void SetPosition(double x, double y) {
    vtkd_im.vtkTextRepresentation_SetPosition__SWIG_0(cast(void*)swigCPtr, x, y);
  }

  public override void SetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkTextRepresentation_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void ExecuteTextPropertyModifiedEvent(vtkObject.vtkObject obj, core.stdc.config.c_ulong enumEvent, void* p) {
    vtkd_im.vtkTextRepresentation_ExecuteTextPropertyModifiedEvent(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(obj), enumEvent, cast(void*)p);
  }

  public void ExecuteTextActorModifiedEvent(vtkObject.vtkObject obj, core.stdc.config.c_ulong enumEvent, void* p) {
    vtkd_im.vtkTextRepresentation_ExecuteTextActorModifiedEvent(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(obj), enumEvent, cast(void*)p);
  }
}
