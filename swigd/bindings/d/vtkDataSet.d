/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataSet;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkCell;
static import vtkGenericCell;
static import vtkCellTypes;
static import vtkIdList;
static import vtkCellData;
static import vtkPointData;
static import vtkExtentTranslator;
static import vtkDataObject;

class vtkDataSet : vtkDataObject.vtkDataObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataSet_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataSet obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataSet_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataSet SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataSet_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet(cPtr, false);
    return ret;
  }

  public vtkDataSet NewInstance() const {
    void* cPtr = vtkd_im.vtkDataSet_NewInstance(cast(void*)swigCPtr);
    vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet(cPtr, false);
    return ret;
  }

  alias vtkDataObject.vtkDataObject.NewInstance NewInstance;

  public void CopyStructure(vtkDataSet ds) {
    vtkd_im.vtkDataSet_CopyStructure(cast(void*)swigCPtr, vtkDataSet.swigGetCPtr(ds));
  }

  public void CopyAttributes(vtkDataSet ds) {
    vtkd_im.vtkDataSet_CopyAttributes(cast(void*)swigCPtr, vtkDataSet.swigGetCPtr(ds));
  }

  public long GetNumberOfPoints() {
    auto ret = vtkd_im.vtkDataSet_GetNumberOfPoints(cast(void*)swigCPtr);
    return ret;
  }

  public long GetNumberOfCells() {
    auto ret = vtkd_im.vtkDataSet_GetNumberOfCells(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetPoint(long ptId) {
    auto ret = cast(double*)vtkd_im.vtkDataSet_GetPoint__SWIG_0(cast(void*)swigCPtr, ptId);
    return ret;
  }

  public void GetPoint(long id, SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkDataSet_GetPoint__SWIG_1(cast(void*)swigCPtr, id, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public vtkCell.vtkCell GetCell(long cellId) {
    void* cPtr = vtkd_im.vtkDataSet_GetCell__SWIG_0(cast(void*)swigCPtr, cellId);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    return ret;
  }

  public void GetCell(long cellId, vtkGenericCell.vtkGenericCell cell) {
    vtkd_im.vtkDataSet_GetCell__SWIG_1(cast(void*)swigCPtr, cellId, vtkGenericCell.vtkGenericCell.swigGetCPtr(cell));
  }

  public void GetCellBounds(long cellId, SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkDataSet_GetCellBounds(cast(void*)swigCPtr, cellId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public int GetCellType(long cellId) {
    auto ret = vtkd_im.vtkDataSet_GetCellType(cast(void*)swigCPtr, cellId);
    return ret;
  }

  public void GetCellTypes(vtkCellTypes.vtkCellTypes types) {
    vtkd_im.vtkDataSet_GetCellTypes(cast(void*)swigCPtr, vtkCellTypes.vtkCellTypes.swigGetCPtr(types));
  }

  public void GetCellPoints(long cellId, vtkIdList.vtkIdList ptIds) {
    vtkd_im.vtkDataSet_GetCellPoints(cast(void*)swigCPtr, cellId, vtkIdList.vtkIdList.swigGetCPtr(ptIds));
  }

  public void GetPointCells(long ptId, vtkIdList.vtkIdList cellIds) {
    vtkd_im.vtkDataSet_GetPointCells(cast(void*)swigCPtr, ptId, vtkIdList.vtkIdList.swigGetCPtr(cellIds));
  }

  public void GetCellNeighbors(long cellId, vtkIdList.vtkIdList ptIds, vtkIdList.vtkIdList cellIds) {
    vtkd_im.vtkDataSet_GetCellNeighbors(cast(void*)swigCPtr, cellId, vtkIdList.vtkIdList.swigGetCPtr(ptIds), vtkIdList.vtkIdList.swigGetCPtr(cellIds));
  }

  public long FindPoint(double x, double y, double z) {
    auto ret = vtkd_im.vtkDataSet_FindPoint__SWIG_0(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  public long FindPoint(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkDataSet_FindPoint__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkDataSet_FindCell__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, vtkGenericCell.vtkGenericCell gencell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    auto ret = vtkd_im.vtkDataSet_FindCell__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), vtkGenericCell.vtkGenericCell.swigGetCPtr(gencell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkCell.vtkCell FindAndGetCell(SWIGTYPE_p_double.SWIGTYPE_p_double x, vtkCell.vtkCell cell, long cellId, double tol2, int* subId, SWIGTYPE_p_double.SWIGTYPE_p_double pcoords, double* weights) {
    void* cPtr = vtkd_im.vtkDataSet_FindAndGetCell(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x), vtkCell.vtkCell.swigGetCPtr(cell), cellId, tol2, cast(void*)subId, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords), cast(void*)weights);
    vtkCell.vtkCell ret = (cPtr is null) ? null : new vtkCell.vtkCell(cPtr, false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkCellData.vtkCellData GetCellData() {
    void* cPtr = vtkd_im.vtkDataSet_GetCellData(cast(void*)swigCPtr);
    vtkCellData.vtkCellData ret = (cPtr is null) ? null : new vtkCellData.vtkCellData(cPtr, false);
    return ret;
  }

  public vtkPointData.vtkPointData GetPointData() {
    void* cPtr = vtkd_im.vtkDataSet_GetPointData(cast(void*)swigCPtr);
    vtkPointData.vtkPointData ret = (cPtr is null) ? null : new vtkPointData.vtkPointData(cPtr, false);
    return ret;
  }

  public void Squeeze() {
    vtkd_im.vtkDataSet_Squeeze(cast(void*)swigCPtr);
  }

  public void ComputeBounds() {
    vtkd_im.vtkDataSet_ComputeBounds(cast(void*)swigCPtr);
  }

  public double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkDataSet_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkDataSet_GetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkDataSet_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double center) {
    vtkd_im.vtkDataSet_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(center));
  }

  public double GetLength() {
    auto ret = vtkd_im.vtkDataSet_GetLength(cast(void*)swigCPtr);
    return ret;
  }

  public void GetScalarRange(SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    vtkd_im.vtkDataSet_GetScalarRange__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
  }

  public double* GetScalarRange() {
    auto ret = cast(double*)vtkd_im.vtkDataSet_GetScalarRange__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaxCellSize() {
    auto ret = vtkd_im.vtkDataSet_GetMaxCellSize(cast(void*)swigCPtr);
    return ret;
  }

  public int CheckAttributes() {
    auto ret = vtkd_im.vtkDataSet_CheckAttributes(cast(void*)swigCPtr);
    return ret;
  }

  public void GenerateGhostLevelArray(int update_piece, int update_num_pieces, int update_ghost_level, int* whole_extent, vtkExtentTranslator.vtkExtentTranslator translator) {
    vtkd_im.vtkDataSet_GenerateGhostLevelArray(cast(void*)swigCPtr, update_piece, update_num_pieces, update_ghost_level, cast(void*)whole_extent, vtkExtentTranslator.vtkExtentTranslator.swigGetCPtr(translator));
  }
}
