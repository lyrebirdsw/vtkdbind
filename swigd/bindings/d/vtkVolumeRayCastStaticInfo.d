/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVolumeRayCastStaticInfo;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkVolume;
static import vtkRenderer;
static import SWIGTYPE_p_float;
static import SWIGTYPE_p_long_long;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;

class vtkVolumeRayCastStaticInfo {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkVolumeRayCastStaticInfo obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkVolumeRayCastStaticInfo(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void Volume(vtkVolume.vtkVolume value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_Volume_set(cast(void*)swigCPtr, vtkVolume.vtkVolume.swigGetCPtr(value));
  }

  public vtkVolume.vtkVolume Volume() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_Volume_get(cast(void*)swigCPtr);
    vtkVolume.vtkVolume ret = (cPtr is null) ? null : new vtkVolume.vtkVolume(cPtr, false);
    return ret;
  }

  public void Renderer(vtkRenderer.vtkRenderer value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_Renderer_set(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(value));
  }

  public vtkRenderer.vtkRenderer Renderer() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_Renderer_get(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }

  public void WorldToVoxelsMatrix(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_WorldToVoxelsMatrix_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float WorldToVoxelsMatrix() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_WorldToVoxelsMatrix_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void VoxelsToWorldMatrix(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_VoxelsToWorldMatrix_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float VoxelsToWorldMatrix() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_VoxelsToWorldMatrix_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void ViewToVoxelsMatrix(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ViewToVoxelsMatrix_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float ViewToVoxelsMatrix() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_ViewToVoxelsMatrix_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void ClippingPlane(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ClippingPlane_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* ClippingPlane() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_ClippingPlane_get(cast(void*)swigCPtr);
    return ret;
  }

  public void NumberOfClippingPlanes(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_NumberOfClippingPlanes_set(cast(void*)swigCPtr, value);
  }

  public int NumberOfClippingPlanes() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_NumberOfClippingPlanes_get(cast(void*)swigCPtr);
    return ret;
  }

  public void CameraThickness(float value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_CameraThickness_set(cast(void*)swigCPtr, value);
  }

  public float CameraThickness() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_CameraThickness_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ScalarDataType(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ScalarDataType_set(cast(void*)swigCPtr, value);
  }

  public int ScalarDataType() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_ScalarDataType_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ScalarDataPointer(void* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ScalarDataPointer_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public void* ScalarDataPointer() @property const {
    auto ret = cast(void*)vtkd_im.vtkVolumeRayCastStaticInfo_ScalarDataPointer_get(cast(void*)swigCPtr);
    return ret;
  }

  public void DataIncrement(SWIGTYPE_p_long_long.SWIGTYPE_p_long_long value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_DataIncrement_set(cast(void*)swigCPtr, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(value));
  }

  public SWIGTYPE_p_long_long.SWIGTYPE_p_long_long DataIncrement() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_DataIncrement_get(cast(void*)swigCPtr);
    SWIGTYPE_p_long_long.SWIGTYPE_p_long_long ret = (cPtr is null) ? null : new SWIGTYPE_p_long_long.SWIGTYPE_p_long_long(cPtr, false);
    return ret;
  }

  public void DataSize(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_DataSize_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int DataSize() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_DataSize_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void DataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_DataSpacing_set(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(value));
  }

  public SWIGTYPE_p_double.SWIGTYPE_p_double DataSpacing() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_DataSpacing_get(cast(void*)swigCPtr);
    SWIGTYPE_p_double.SWIGTYPE_p_double ret = (cPtr is null) ? null : new SWIGTYPE_p_double.SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public void DataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_DataOrigin_set(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(value));
  }

  public SWIGTYPE_p_double.SWIGTYPE_p_double DataOrigin() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_DataOrigin_get(cast(void*)swigCPtr);
    SWIGTYPE_p_double.SWIGTYPE_p_double ret = (cPtr is null) ? null : new SWIGTYPE_p_double.SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public void Shading(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_Shading_set(cast(void*)swigCPtr, value);
  }

  public int Shading() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_Shading_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ColorChannels(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ColorChannels_set(cast(void*)swigCPtr, value);
  }

  public int ColorChannels() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_ColorChannels_get(cast(void*)swigCPtr);
    return ret;
  }

  public void Color(SWIGTYPE_p_float.SWIGTYPE_p_float value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_Color_set(cast(void*)swigCPtr, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(value));
  }

  public SWIGTYPE_p_float.SWIGTYPE_p_float Color() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_Color_get(cast(void*)swigCPtr);
    SWIGTYPE_p_float.SWIGTYPE_p_float ret = (cPtr is null) ? null : new SWIGTYPE_p_float.SWIGTYPE_p_float(cPtr, false);
    return ret;
  }

  public void InterpolationType(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_InterpolationType_set(cast(void*)swigCPtr, value);
  }

  public int InterpolationType() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_InterpolationType_get(cast(void*)swigCPtr);
    return ret;
  }

  public void RedDiffuseShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_RedDiffuseShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* RedDiffuseShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_RedDiffuseShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void GreenDiffuseShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_GreenDiffuseShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* GreenDiffuseShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_GreenDiffuseShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void BlueDiffuseShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_BlueDiffuseShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* BlueDiffuseShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_BlueDiffuseShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void RedSpecularShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_RedSpecularShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* RedSpecularShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_RedSpecularShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void GreenSpecularShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_GreenSpecularShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* GreenSpecularShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_GreenSpecularShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void BlueSpecularShadingTable(float* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_BlueSpecularShadingTable_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public float* BlueSpecularShadingTable() @property const {
    auto ret = cast(float*)vtkd_im.vtkVolumeRayCastStaticInfo_BlueSpecularShadingTable_get(cast(void*)swigCPtr);
    return ret;
  }

  public void EncodedNormals(ushort* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_EncodedNormals_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public ushort* EncodedNormals() @property const {
    auto ret = cast(ushort*)vtkd_im.vtkVolumeRayCastStaticInfo_EncodedNormals_get(cast(void*)swigCPtr);
    return ret;
  }

  public void GradientMagnitudes(ubyte* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_GradientMagnitudes_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public ubyte* GradientMagnitudes() @property const {
    auto ret = cast(ubyte*)vtkd_im.vtkVolumeRayCastStaticInfo_GradientMagnitudes_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ImageInUseSize(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ImageInUseSize_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int ImageInUseSize() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_ImageInUseSize_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void ImageMemorySize(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ImageMemorySize_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int ImageMemorySize() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_ImageMemorySize_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void ImageViewportSize(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ImageViewportSize_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int ImageViewportSize() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_ImageViewportSize_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void ImageOrigin(SWIGTYPE_p_int.SWIGTYPE_p_int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_ImageOrigin_set(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(value));
  }

  public SWIGTYPE_p_int.SWIGTYPE_p_int ImageOrigin() @property const {
    void* cPtr = vtkd_im.vtkVolumeRayCastStaticInfo_ImageOrigin_get(cast(void*)swigCPtr);
    SWIGTYPE_p_int.SWIGTYPE_p_int ret = (cPtr is null) ? null : new SWIGTYPE_p_int.SWIGTYPE_p_int(cPtr, false);
    return ret;
  }

  public void Image(ubyte* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_Image_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public ubyte* Image() @property const {
    auto ret = cast(ubyte*)vtkd_im.vtkVolumeRayCastStaticInfo_Image_get(cast(void*)swigCPtr);
    return ret;
  }

  public void RowBounds(int* value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_RowBounds_set(cast(void*)swigCPtr, cast(void*)value);
  }

  public int* RowBounds() @property const {
    auto ret = cast(int*)vtkd_im.vtkVolumeRayCastStaticInfo_RowBounds_get(cast(void*)swigCPtr);
    return ret;
  }

  public void MIPFunction(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_MIPFunction_set(cast(void*)swigCPtr, value);
  }

  public int MIPFunction() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_MIPFunction_get(cast(void*)swigCPtr);
    return ret;
  }

  public void MaximizeOpacity(int value) @property {
    vtkd_im.vtkVolumeRayCastStaticInfo_MaximizeOpacity_set(cast(void*)swigCPtr, value);
  }

  public int MaximizeOpacity() @property const {
    auto ret = vtkd_im.vtkVolumeRayCastStaticInfo_MaximizeOpacity_get(cast(void*)swigCPtr);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkVolumeRayCastStaticInfo(), true);
  }
}
