/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageConvolve;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkThreadedImageAlgorithm;

class vtkImageConvolve : vtkThreadedImageAlgorithm.vtkThreadedImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageConvolve_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageConvolve obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageConvolve New() {
    void* cPtr = vtkd_im.vtkImageConvolve_New();
    vtkImageConvolve ret = (cPtr is null) ? null : new vtkImageConvolve(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageConvolve_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageConvolve SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageConvolve_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageConvolve ret = (cPtr is null) ? null : new vtkImageConvolve(cPtr, false);
    return ret;
  }

  public vtkImageConvolve NewInstance() const {
    void* cPtr = vtkd_im.vtkImageConvolve_NewInstance(cast(void*)swigCPtr);
    vtkImageConvolve ret = (cPtr is null) ? null : new vtkImageConvolve(cPtr, false);
    return ret;
  }

  alias vtkThreadedImageAlgorithm.vtkThreadedImageAlgorithm.NewInstance NewInstance;

  public int* GetKernelSize() {
    auto ret = cast(int*)vtkd_im.vtkImageConvolve_GetKernelSize__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKernelSize(int* _arg1, int* _arg2, int* _arg3) {
    vtkd_im.vtkImageConvolve_GetKernelSize__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetKernelSize(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkImageConvolve_GetKernelSize__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetKernel3x3(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_SetKernel3x3(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }

  public void SetKernel5x5(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_SetKernel5x5(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }

  public double* GetKernel3x3() {
    auto ret = cast(double*)vtkd_im.vtkImageConvolve_GetKernel3x3__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKernel3x3(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_GetKernel3x3__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }

  public double* GetKernel5x5() {
    auto ret = cast(double*)vtkd_im.vtkImageConvolve_GetKernel5x5__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKernel5x5(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_GetKernel5x5__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }

  public void SetKernel3x3x3(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_SetKernel3x3x3(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }

  public double* GetKernel3x3x3() {
    auto ret = cast(double*)vtkd_im.vtkImageConvolve_GetKernel3x3x3__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetKernel3x3x3(SWIGTYPE_p_double.SWIGTYPE_p_double kernel) {
    vtkd_im.vtkImageConvolve_GetKernel3x3x3__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(kernel));
  }
}
