/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkFieldDataToAttributeDataFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_p_vtkDataArray;
static import vtkDataArray;
static import vtkFieldData;
static import vtkObject;
static import vtkInformation;
static import SWIGTYPE_p_p_vtkInformationVector;
static import vtkInformationVector;
static import vtkDataSetAlgorithm;

class vtkFieldDataToAttributeDataFilter : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkFieldDataToAttributeDataFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkFieldDataToAttributeDataFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkFieldDataToAttributeDataFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkFieldDataToAttributeDataFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkFieldDataToAttributeDataFilter ret = (cPtr is null) ? null : new vtkFieldDataToAttributeDataFilter(cPtr, false);
    return ret;
  }

  public vtkFieldDataToAttributeDataFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkFieldDataToAttributeDataFilter_NewInstance(cast(void*)swigCPtr);
    vtkFieldDataToAttributeDataFilter ret = (cPtr is null) ? null : new vtkFieldDataToAttributeDataFilter(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public static vtkFieldDataToAttributeDataFilter New() {
    void* cPtr = vtkd_im.vtkFieldDataToAttributeDataFilter_New();
    vtkFieldDataToAttributeDataFilter ret = (cPtr is null) ? null : new vtkFieldDataToAttributeDataFilter(cPtr, false);
    return ret;
  }

  public void SetInputField(int _arg) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetInputField(cast(void*)swigCPtr, _arg);
  }

  public int GetInputField() {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetInputField(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInputFieldToDataObjectField() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetInputFieldToDataObjectField(cast(void*)swigCPtr);
  }

  public void SetInputFieldToPointDataField() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetInputFieldToPointDataField(cast(void*)swigCPtr);
  }

  public void SetInputFieldToCellDataField() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetInputFieldToCellDataField(cast(void*)swigCPtr);
  }

  public void SetOutputAttributeData(int _arg) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetOutputAttributeData(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputAttributeData() {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetOutputAttributeData(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputAttributeDataToCellData() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetOutputAttributeDataToCellData(cast(void*)swigCPtr);
  }

  public void SetOutputAttributeDataToPointData() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetOutputAttributeDataToPointData(cast(void*)swigCPtr);
  }

  public void SetScalarComponent(int comp, string arrayName, int arrayComp, int min, int max, int normalize) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetScalarComponent__SWIG_0(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp, min, max, normalize);
  }

  public void SetScalarComponent(int comp, string arrayName, int arrayComp) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetScalarComponent__SWIG_1(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp);
  }

  public string GetScalarComponentArrayName(int comp) {
    string ret = std.conv.to!string(vtkd_im.vtkFieldDataToAttributeDataFilter_GetScalarComponentArrayName(cast(void*)swigCPtr, comp));
    return ret;
  }

  public int GetScalarComponentArrayComponent(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetScalarComponentArrayComponent(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetScalarComponentMinRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetScalarComponentMinRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetScalarComponentMaxRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetScalarComponentMaxRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetScalarComponentNormalizeFlag(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetScalarComponentNormalizeFlag(cast(void*)swigCPtr, comp);
    return ret;
  }

  public void SetVectorComponent(int comp, string arrayName, int arrayComp, int min, int max, int normalize) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetVectorComponent__SWIG_0(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp, min, max, normalize);
  }

  public void SetVectorComponent(int comp, string arrayName, int arrayComp) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetVectorComponent__SWIG_1(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp);
  }

  public string GetVectorComponentArrayName(int comp) {
    string ret = std.conv.to!string(vtkd_im.vtkFieldDataToAttributeDataFilter_GetVectorComponentArrayName(cast(void*)swigCPtr, comp));
    return ret;
  }

  public int GetVectorComponentArrayComponent(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetVectorComponentArrayComponent(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetVectorComponentMinRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetVectorComponentMinRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetVectorComponentMaxRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetVectorComponentMaxRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetVectorComponentNormalizeFlag(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetVectorComponentNormalizeFlag(cast(void*)swigCPtr, comp);
    return ret;
  }

  public void SetNormalComponent(int comp, string arrayName, int arrayComp, int min, int max, int normalize) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetNormalComponent__SWIG_0(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp, min, max, normalize);
  }

  public void SetNormalComponent(int comp, string arrayName, int arrayComp) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetNormalComponent__SWIG_1(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp);
  }

  public string GetNormalComponentArrayName(int comp) {
    string ret = std.conv.to!string(vtkd_im.vtkFieldDataToAttributeDataFilter_GetNormalComponentArrayName(cast(void*)swigCPtr, comp));
    return ret;
  }

  public int GetNormalComponentArrayComponent(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetNormalComponentArrayComponent(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetNormalComponentMinRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetNormalComponentMinRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetNormalComponentMaxRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetNormalComponentMaxRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetNormalComponentNormalizeFlag(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetNormalComponentNormalizeFlag(cast(void*)swigCPtr, comp);
    return ret;
  }

  public void SetTensorComponent(int comp, string arrayName, int arrayComp, int min, int max, int normalize) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetTensorComponent__SWIG_0(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp, min, max, normalize);
  }

  public void SetTensorComponent(int comp, string arrayName, int arrayComp) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetTensorComponent__SWIG_1(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp);
  }

  public string GetTensorComponentArrayName(int comp) {
    string ret = std.conv.to!string(vtkd_im.vtkFieldDataToAttributeDataFilter_GetTensorComponentArrayName(cast(void*)swigCPtr, comp));
    return ret;
  }

  public int GetTensorComponentArrayComponent(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTensorComponentArrayComponent(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTensorComponentMinRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTensorComponentMinRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTensorComponentMaxRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTensorComponentMaxRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTensorComponentNormalizeFlag(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTensorComponentNormalizeFlag(cast(void*)swigCPtr, comp);
    return ret;
  }

  public void SetTCoordComponent(int comp, string arrayName, int arrayComp, int min, int max, int normalize) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetTCoordComponent__SWIG_0(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp, min, max, normalize);
  }

  public void SetTCoordComponent(int comp, string arrayName, int arrayComp) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetTCoordComponent__SWIG_1(cast(void*)swigCPtr, comp, (arrayName ? std.string.toStringz(arrayName) : null), arrayComp);
  }

  public string GetTCoordComponentArrayName(int comp) {
    string ret = std.conv.to!string(vtkd_im.vtkFieldDataToAttributeDataFilter_GetTCoordComponentArrayName(cast(void*)swigCPtr, comp));
    return ret;
  }

  public int GetTCoordComponentArrayComponent(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTCoordComponentArrayComponent(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTCoordComponentMinRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTCoordComponentMinRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTCoordComponentMaxRange(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTCoordComponentMaxRange(cast(void*)swigCPtr, comp);
    return ret;
  }

  public int GetTCoordComponentNormalizeFlag(int comp) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetTCoordComponentNormalizeFlag(cast(void*)swigCPtr, comp);
    return ret;
  }

  public void SetDefaultNormalize(int _arg) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetDefaultNormalize(cast(void*)swigCPtr, _arg);
  }

  public int GetDefaultNormalize() {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetDefaultNormalize(cast(void*)swigCPtr);
    return ret;
  }

  public void DefaultNormalizeOn() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_DefaultNormalizeOn(cast(void*)swigCPtr);
  }

  public void DefaultNormalizeOff() {
    vtkd_im.vtkFieldDataToAttributeDataFilter_DefaultNormalizeOff(cast(void*)swigCPtr);
  }

  public static int GetComponentsType(int numComp, SWIGTYPE_p_p_vtkDataArray.SWIGTYPE_p_p_vtkDataArray arrays) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_GetComponentsType(numComp, SWIGTYPE_p_p_vtkDataArray.SWIGTYPE_p_p_vtkDataArray.swigGetCPtr(arrays));
    return ret;
  }

  public static int ConstructArray(vtkDataArray.vtkDataArray da, int comp, vtkDataArray.vtkDataArray frray, int fieldComp, long min, long max, int normalize) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_ConstructArray(vtkDataArray.vtkDataArray.swigGetCPtr(da), comp, vtkDataArray.vtkDataArray.swigGetCPtr(frray), fieldComp, min, max, normalize);
    return ret;
  }

  public static vtkDataArray.vtkDataArray GetFieldArray(vtkFieldData.vtkFieldData fd, string name, int comp) {
    void* cPtr = vtkd_im.vtkFieldDataToAttributeDataFilter_GetFieldArray(vtkFieldData.vtkFieldData.swigGetCPtr(fd), (name ? std.string.toStringz(name) : null), comp);
    vtkDataArray.vtkDataArray ret = (cPtr is null) ? null : new vtkDataArray.vtkDataArray(cPtr, false);
    return ret;
  }

  public static void SetArrayName(vtkObject.vtkObject self, string name, string newName) {
    vtkd_im.vtkFieldDataToAttributeDataFilter_SetArrayName(vtkObject.vtkObject.swigGetCPtr(self), (name ? std.string.toStringz(name) : null), (newName ? std.string.toStringz(newName) : null));
  }

  public int RequestUpdateExtent(vtkInformation.vtkInformation arg0, SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector arg1, vtkInformationVector.vtkInformationVector arg2) {
    auto ret = vtkd_im.vtkFieldDataToAttributeDataFilter_RequestUpdateExtent(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0), SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector.swigGetCPtr(arg1), vtkInformationVector.vtkInformationVector.swigGetCPtr(arg2));
    return ret;
  }
}
