/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCompositeDataDisplayAttributes;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkColor3d;
static import vtkObject;

class vtkCompositeDataDisplayAttributes : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCompositeDataDisplayAttributes_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCompositeDataDisplayAttributes obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkCompositeDataDisplayAttributes New() {
    void* cPtr = vtkd_im.vtkCompositeDataDisplayAttributes_New();
    vtkCompositeDataDisplayAttributes ret = (cPtr is null) ? null : new vtkCompositeDataDisplayAttributes(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCompositeDataDisplayAttributes_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCompositeDataDisplayAttributes SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCompositeDataDisplayAttributes_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCompositeDataDisplayAttributes ret = (cPtr is null) ? null : new vtkCompositeDataDisplayAttributes(cPtr, false);
    return ret;
  }

  public vtkCompositeDataDisplayAttributes NewInstance() const {
    void* cPtr = vtkd_im.vtkCompositeDataDisplayAttributes_NewInstance(cast(void*)swigCPtr);
    vtkCompositeDataDisplayAttributes ret = (cPtr is null) ? null : new vtkCompositeDataDisplayAttributes(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public bool HasBlockVisibilities() const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockVisibilities(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetBlockVisibility(uint flat_index, bool visible) {
    vtkd_im.vtkCompositeDataDisplayAttributes_SetBlockVisibility(cast(void*)swigCPtr, flat_index, visible);
  }

  public bool GetBlockVisibility(uint flat_index) const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_GetBlockVisibility(cast(void*)swigCPtr, flat_index) ? true : false;
    return ret;
  }

  public bool HasBlockVisibility(uint flat_index) const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockVisibility(cast(void*)swigCPtr, flat_index) ? true : false;
    return ret;
  }

  public void RemoveBlockVisibility(uint flat_index) {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockVisibility(cast(void*)swigCPtr, flat_index);
  }

  public void RemoveBlockVisibilites() {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockVisibilites(cast(void*)swigCPtr);
  }

  public void SetBlockColor(uint flat_index, SWIGTYPE_p_double.SWIGTYPE_p_double color) {
    vtkd_im.vtkCompositeDataDisplayAttributes_SetBlockColor(cast(void*)swigCPtr, flat_index, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(color));
  }

  public void GetBlockColor(uint flat_index, SWIGTYPE_p_double.SWIGTYPE_p_double color) const {
    vtkd_im.vtkCompositeDataDisplayAttributes_GetBlockColor__SWIG_0(cast(void*)swigCPtr, flat_index, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(color));
  }

  public vtkColor3d.vtkColor3d GetBlockColor(uint flat_index) const {
    vtkColor3d.vtkColor3d ret = new vtkColor3d.vtkColor3d(vtkd_im.vtkCompositeDataDisplayAttributes_GetBlockColor__SWIG_1(cast(void*)swigCPtr, flat_index), true);
    return ret;
  }

  public bool HasBlockColors() const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockColors(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool HasBlockColor(uint flat_index) const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockColor(cast(void*)swigCPtr, flat_index) ? true : false;
    return ret;
  }

  public void RemoveBlockColor(uint flat_index) {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockColor(cast(void*)swigCPtr, flat_index);
  }

  public void RemoveBlockColors() {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockColors(cast(void*)swigCPtr);
  }

  public void SetBlockOpacity(uint flat_index, double opacity) {
    vtkd_im.vtkCompositeDataDisplayAttributes_SetBlockOpacity(cast(void*)swigCPtr, flat_index, opacity);
  }

  public double GetBlockOpacity(uint flat_index) const {
    auto ret = vtkd_im.vtkCompositeDataDisplayAttributes_GetBlockOpacity(cast(void*)swigCPtr, flat_index);
    return ret;
  }

  public bool HasBlockOpacities() const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockOpacities(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool HasBlockOpacity(uint flat_index) const {
    bool ret = vtkd_im.vtkCompositeDataDisplayAttributes_HasBlockOpacity(cast(void*)swigCPtr, flat_index) ? true : false;
    return ret;
  }

  public void RemoveBlockOpacity(uint flat_index) {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockOpacity(cast(void*)swigCPtr, flat_index);
  }

  public void RemoveBlockOpacities() {
    vtkd_im.vtkCompositeDataDisplayAttributes_RemoveBlockOpacities(cast(void*)swigCPtr);
  }
}
