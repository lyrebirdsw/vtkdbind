/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMathTextUtilities;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTextProperty;
static import SWIGTYPE_p_int;
static import vtkImageData;
static import vtkPath;
static import vtkObject;

class vtkMathTextUtilities : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMathTextUtilities_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMathTextUtilities obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMathTextUtilities_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMathTextUtilities SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMathTextUtilities_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMathTextUtilities ret = (cPtr is null) ? null : new vtkMathTextUtilities(cPtr, false);
    return ret;
  }

  public vtkMathTextUtilities NewInstance() const {
    void* cPtr = vtkd_im.vtkMathTextUtilities_NewInstance(cast(void*)swigCPtr);
    vtkMathTextUtilities ret = (cPtr is null) ? null : new vtkMathTextUtilities(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkMathTextUtilities New() {
    void* cPtr = vtkd_im.vtkMathTextUtilities_New();
    vtkMathTextUtilities ret = (cPtr is null) ? null : new vtkMathTextUtilities(cPtr, false);
    return ret;
  }

  public static vtkMathTextUtilities GetInstance() {
    void* cPtr = vtkd_im.vtkMathTextUtilities_GetInstance();
    vtkMathTextUtilities ret = (cPtr is null) ? null : new vtkMathTextUtilities(cPtr, false);
    return ret;
  }

  public static void SetInstance(vtkMathTextUtilities instance) {
    vtkd_im.vtkMathTextUtilities_SetInstance(vtkMathTextUtilities.swigGetCPtr(instance));
  }

  public bool GetBoundingBox(vtkTextProperty.vtkTextProperty tprop, string str, uint dpi, SWIGTYPE_p_int.SWIGTYPE_p_int bbox) {
    bool ret = vtkd_im.vtkMathTextUtilities_GetBoundingBox(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(tprop), (str ? std.string.toStringz(str) : null), dpi, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(bbox)) ? true : false;
    return ret;
  }

  public bool RenderString(string str, vtkImageData.vtkImageData data, vtkTextProperty.vtkTextProperty tprop, uint dpi, SWIGTYPE_p_int.SWIGTYPE_p_int textDims) {
    bool ret = vtkd_im.vtkMathTextUtilities_RenderString__SWIG_0(cast(void*)swigCPtr, (str ? std.string.toStringz(str) : null), vtkImageData.vtkImageData.swigGetCPtr(data), vtkTextProperty.vtkTextProperty.swigGetCPtr(tprop), dpi, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(textDims)) ? true : false;
    return ret;
  }

  public bool RenderString(string str, vtkImageData.vtkImageData data, vtkTextProperty.vtkTextProperty tprop, uint dpi) {
    bool ret = vtkd_im.vtkMathTextUtilities_RenderString__SWIG_1(cast(void*)swigCPtr, (str ? std.string.toStringz(str) : null), vtkImageData.vtkImageData.swigGetCPtr(data), vtkTextProperty.vtkTextProperty.swigGetCPtr(tprop), dpi) ? true : false;
    return ret;
  }

  public bool StringToPath(string str, vtkPath.vtkPath path, vtkTextProperty.vtkTextProperty tprop) {
    bool ret = vtkd_im.vtkMathTextUtilities_StringToPath(cast(void*)swigCPtr, (str ? std.string.toStringz(str) : null), vtkPath.vtkPath.swigGetCPtr(path), vtkTextProperty.vtkTextProperty.swigGetCPtr(tprop)) ? true : false;
    return ret;
  }

  public int GetConstrainedFontSize(string str, vtkTextProperty.vtkTextProperty tprop, int targetWidth, int targetHeight, uint dpi) {
    auto ret = vtkd_im.vtkMathTextUtilities_GetConstrainedFontSize(cast(void*)swigCPtr, (str ? std.string.toStringz(str) : null), vtkTextProperty.vtkTextProperty.swigGetCPtr(tprop), targetWidth, targetHeight, dpi);
    return ret;
  }

  public bool GetScaleToPowerOfTwo() {
    bool ret = vtkd_im.vtkMathTextUtilities_GetScaleToPowerOfTwo(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetScaleToPowerOfTwo(bool scale) {
    vtkd_im.vtkMathTextUtilities_SetScaleToPowerOfTwo(cast(void*)swigCPtr, scale);
  }
}
