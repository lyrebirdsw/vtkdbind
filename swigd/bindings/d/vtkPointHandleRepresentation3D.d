/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPointHandleRepresentation3D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkProperty;
static import SWIGTYPE_p_double;
static import vtkHandleRepresentation;

class vtkPointHandleRepresentation3D : vtkHandleRepresentation.vtkHandleRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPointHandleRepresentation3D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPointHandleRepresentation3D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkPointHandleRepresentation3D New() {
    void* cPtr = vtkd_im.vtkPointHandleRepresentation3D_New();
    vtkPointHandleRepresentation3D ret = (cPtr is null) ? null : new vtkPointHandleRepresentation3D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPointHandleRepresentation3D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPointHandleRepresentation3D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPointHandleRepresentation3D ret = (cPtr is null) ? null : new vtkPointHandleRepresentation3D(cPtr, false);
    return ret;
  }

  public vtkPointHandleRepresentation3D NewInstance() const {
    void* cPtr = vtkd_im.vtkPointHandleRepresentation3D_NewInstance(cast(void*)swigCPtr);
    vtkPointHandleRepresentation3D ret = (cPtr is null) ? null : new vtkPointHandleRepresentation3D(cPtr, false);
    return ret;
  }

  alias vtkHandleRepresentation.vtkHandleRepresentation.NewInstance NewInstance;

  public void SetOutline(int o) {
    vtkd_im.vtkPointHandleRepresentation3D_SetOutline(cast(void*)swigCPtr, o);
  }

  public int GetOutline() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetOutline(cast(void*)swigCPtr);
    return ret;
  }

  public void OutlineOn() {
    vtkd_im.vtkPointHandleRepresentation3D_OutlineOn(cast(void*)swigCPtr);
  }

  public void OutlineOff() {
    vtkd_im.vtkPointHandleRepresentation3D_OutlineOff(cast(void*)swigCPtr);
  }

  public void SetXShadows(int o) {
    vtkd_im.vtkPointHandleRepresentation3D_SetXShadows(cast(void*)swigCPtr, o);
  }

  public int GetXShadows() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetXShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void XShadowsOn() {
    vtkd_im.vtkPointHandleRepresentation3D_XShadowsOn(cast(void*)swigCPtr);
  }

  public void XShadowsOff() {
    vtkd_im.vtkPointHandleRepresentation3D_XShadowsOff(cast(void*)swigCPtr);
  }

  public void SetYShadows(int o) {
    vtkd_im.vtkPointHandleRepresentation3D_SetYShadows(cast(void*)swigCPtr, o);
  }

  public int GetYShadows() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetYShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void YShadowsOn() {
    vtkd_im.vtkPointHandleRepresentation3D_YShadowsOn(cast(void*)swigCPtr);
  }

  public void YShadowsOff() {
    vtkd_im.vtkPointHandleRepresentation3D_YShadowsOff(cast(void*)swigCPtr);
  }

  public void SetZShadows(int o) {
    vtkd_im.vtkPointHandleRepresentation3D_SetZShadows(cast(void*)swigCPtr, o);
  }

  public int GetZShadows() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetZShadows(cast(void*)swigCPtr);
    return ret;
  }

  public void ZShadowsOn() {
    vtkd_im.vtkPointHandleRepresentation3D_ZShadowsOn(cast(void*)swigCPtr);
  }

  public void ZShadowsOff() {
    vtkd_im.vtkPointHandleRepresentation3D_ZShadowsOff(cast(void*)swigCPtr);
  }

  public void SetTranslationMode(int mode) {
    vtkd_im.vtkPointHandleRepresentation3D_SetTranslationMode(cast(void*)swigCPtr, mode);
  }

  public int GetTranslationMode() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetTranslationMode(cast(void*)swigCPtr);
    return ret;
  }

  public void TranslationModeOn() {
    vtkd_im.vtkPointHandleRepresentation3D_TranslationModeOn(cast(void*)swigCPtr);
  }

  public void TranslationModeOff() {
    vtkd_im.vtkPointHandleRepresentation3D_TranslationModeOff(cast(void*)swigCPtr);
  }

  public void AllOn() {
    vtkd_im.vtkPointHandleRepresentation3D_AllOn(cast(void*)swigCPtr);
  }

  public void AllOff() {
    vtkd_im.vtkPointHandleRepresentation3D_AllOff(cast(void*)swigCPtr);
  }

  public void SetProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPointHandleRepresentation3D_SetProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public void SetSelectedProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkPointHandleRepresentation3D_SetSelectedProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetProperty() {
    void* cPtr = vtkd_im.vtkPointHandleRepresentation3D_GetProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetSelectedProperty() {
    void* cPtr = vtkd_im.vtkPointHandleRepresentation3D_GetSelectedProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetHotSpotSize(double _arg) {
    vtkd_im.vtkPointHandleRepresentation3D_SetHotSpotSize(cast(void*)swigCPtr, _arg);
  }

  public double GetHotSpotSizeMinValue() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetHotSpotSizeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHotSpotSizeMaxValue() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetHotSpotSizeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetHotSpotSize() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetHotSpotSize(cast(void*)swigCPtr);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkPointHandleRepresentation3D_PlaceWidget(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public void SetSmoothMotion(int _arg) {
    vtkd_im.vtkPointHandleRepresentation3D_SetSmoothMotion(cast(void*)swigCPtr, _arg);
  }

  public int GetSmoothMotion() {
    auto ret = vtkd_im.vtkPointHandleRepresentation3D_GetSmoothMotion(cast(void*)swigCPtr);
    return ret;
  }

  public void SmoothMotionOn() {
    vtkd_im.vtkPointHandleRepresentation3D_SmoothMotionOn(cast(void*)swigCPtr);
  }

  public void SmoothMotionOff() {
    vtkd_im.vtkPointHandleRepresentation3D_SmoothMotionOff(cast(void*)swigCPtr);
  }
}
