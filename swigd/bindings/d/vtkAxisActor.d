/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAxisActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCoordinate;
static import SWIGTYPE_p_double;
static import vtkTextProperty;
static import vtkProperty;
static import vtkCamera;
static import vtkViewport;
static import vtkWindow;
static import vtkActor;

class vtkAxisActor : vtkActor.vtkActor {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAxisActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAxisActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAxisActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAxisActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAxisActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAxisActor ret = (cPtr is null) ? null : new vtkAxisActor(cPtr, false);
    return ret;
  }

  public vtkAxisActor NewInstance() const {
    void* cPtr = vtkd_im.vtkAxisActor_NewInstance(cast(void*)swigCPtr);
    vtkAxisActor ret = (cPtr is null) ? null : new vtkAxisActor(cPtr, false);
    return ret;
  }

  alias vtkActor.vtkActor.NewInstance NewInstance;

  public static vtkAxisActor New() {
    void* cPtr = vtkd_im.vtkAxisActor_New();
    vtkAxisActor ret = (cPtr is null) ? null : new vtkAxisActor(cPtr, false);
    return ret;
  }

  public vtkCoordinate.vtkCoordinate GetPoint1Coordinate() {
    void* cPtr = vtkd_im.vtkAxisActor_GetPoint1Coordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetPoint1(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkAxisActor_SetPoint1__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetPoint1(double x, double y, double z) {
    vtkd_im.vtkAxisActor_SetPoint1__SWIG_1(cast(void*)swigCPtr, x, y, z);
  }

  public double* GetPoint1() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetPoint1(cast(void*)swigCPtr);
    return ret;
  }

  public vtkCoordinate.vtkCoordinate GetPoint2Coordinate() {
    void* cPtr = vtkd_im.vtkAxisActor_GetPoint2Coordinate(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }

  public void SetPoint2(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    vtkd_im.vtkAxisActor_SetPoint2__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
  }

  public void SetPoint2(double x, double y, double z) {
    vtkd_im.vtkAxisActor_SetPoint2__SWIG_1(cast(void*)swigCPtr, x, y, z);
  }

  public double* GetPoint2() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetPoint2(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRange(double _arg1, double _arg2) {
    vtkd_im.vtkAxisActor_SetRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_SetRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetRange() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRange(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkAxisActor_GetRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkAxisActor_SetBounds__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public void SetBounds(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) {
    vtkd_im.vtkAxisActor_SetBounds__SWIG_1(cast(void*)swigCPtr, xmin, xmax, ymin, ymax, zmin, zmax);
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkAxisActor_GetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  alias vtkActor.vtkActor.GetBounds GetBounds;

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkAxisActor_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkAxisActor_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetMinorTicksVisible(int _arg) {
    vtkd_im.vtkAxisActor_SetMinorTicksVisible(cast(void*)swigCPtr, _arg);
  }

  public int GetMinorTicksVisible() {
    auto ret = vtkd_im.vtkAxisActor_GetMinorTicksVisible(cast(void*)swigCPtr);
    return ret;
  }

  public void MinorTicksVisibleOn() {
    vtkd_im.vtkAxisActor_MinorTicksVisibleOn(cast(void*)swigCPtr);
  }

  public void MinorTicksVisibleOff() {
    vtkd_im.vtkAxisActor_MinorTicksVisibleOff(cast(void*)swigCPtr);
  }

  public void SetTitle(string t) {
    vtkd_im.vtkAxisActor_SetTitle(cast(void*)swigCPtr, (t ? std.string.toStringz(t) : null));
  }

  public string GetTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkAxisActor_GetTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetMajorTickSize(double _arg) {
    vtkd_im.vtkAxisActor_SetMajorTickSize(cast(void*)swigCPtr, _arg);
  }

  public double GetMajorTickSize() {
    auto ret = vtkd_im.vtkAxisActor_GetMajorTickSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMinorTickSize(double _arg) {
    vtkd_im.vtkAxisActor_SetMinorTickSize(cast(void*)swigCPtr, _arg);
  }

  public double GetMinorTickSize() {
    auto ret = vtkd_im.vtkAxisActor_GetMinorTickSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTickLocation(int _arg) {
    vtkd_im.vtkAxisActor_SetTickLocation(cast(void*)swigCPtr, _arg);
  }

  public int GetTickLocationMinValue() {
    auto ret = vtkd_im.vtkAxisActor_GetTickLocationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTickLocationMaxValue() {
    auto ret = vtkd_im.vtkAxisActor_GetTickLocationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTickLocation() {
    auto ret = vtkd_im.vtkAxisActor_GetTickLocation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTickLocationToInside() {
    vtkd_im.vtkAxisActor_SetTickLocationToInside(cast(void*)swigCPtr);
  }

  public void SetTickLocationToOutside() {
    vtkd_im.vtkAxisActor_SetTickLocationToOutside(cast(void*)swigCPtr);
  }

  public void SetTickLocationToBoth() {
    vtkd_im.vtkAxisActor_SetTickLocationToBoth(cast(void*)swigCPtr);
  }

  public void SetAxisVisibility(int _arg) {
    vtkd_im.vtkAxisActor_SetAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisVisibility() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void AxisVisibilityOn() {
    vtkd_im.vtkAxisActor_AxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void AxisVisibilityOff() {
    vtkd_im.vtkAxisActor_AxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetTickVisibility(int _arg) {
    vtkd_im.vtkAxisActor_SetTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetTickVisibility() {
    auto ret = vtkd_im.vtkAxisActor_GetTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void TickVisibilityOn() {
    vtkd_im.vtkAxisActor_TickVisibilityOn(cast(void*)swigCPtr);
  }

  public void TickVisibilityOff() {
    vtkd_im.vtkAxisActor_TickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetLabelVisibility(int _arg) {
    vtkd_im.vtkAxisActor_SetLabelVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetLabelVisibility() {
    auto ret = vtkd_im.vtkAxisActor_GetLabelVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void LabelVisibilityOn() {
    vtkd_im.vtkAxisActor_LabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void LabelVisibilityOff() {
    vtkd_im.vtkAxisActor_LabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetTitleVisibility(int _arg) {
    vtkd_im.vtkAxisActor_SetTitleVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetTitleVisibility() {
    auto ret = vtkd_im.vtkAxisActor_GetTitleVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void TitleVisibilityOn() {
    vtkd_im.vtkAxisActor_TitleVisibilityOn(cast(void*)swigCPtr);
  }

  public void TitleVisibilityOff() {
    vtkd_im.vtkAxisActor_TitleVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetTitleTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkAxisActor_SetTitleTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetTitleTextProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetTitleTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetLabelTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkAxisActor_SetLabelTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetLabelTextProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetLabelTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetAxisLinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkAxisActor_SetAxisLinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetAxisLinesProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetAxisLinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkAxisActor_SetGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetGridlinesProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetInnerGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkAxisActor_SetInnerGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetInnerGridlinesProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetInnerGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetGridpolysProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkAxisActor_SetGridpolysProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetGridpolysProperty() {
    void* cPtr = vtkd_im.vtkAxisActor_GetGridpolysProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetDrawGridlines(int _arg) {
    vtkd_im.vtkAxisActor_SetDrawGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawGridlines() {
    auto ret = vtkd_im.vtkAxisActor_GetDrawGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawGridlinesOn() {
    vtkd_im.vtkAxisActor_DrawGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawGridlinesOff() {
    vtkd_im.vtkAxisActor_DrawGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawGridlinesOnly(int _arg) {
    vtkd_im.vtkAxisActor_SetDrawGridlinesOnly(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawGridlinesOnly() {
    auto ret = vtkd_im.vtkAxisActor_GetDrawGridlinesOnly(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawGridlinesOnlyOn() {
    vtkd_im.vtkAxisActor_DrawGridlinesOnlyOn(cast(void*)swigCPtr);
  }

  public void DrawGridlinesOnlyOff() {
    vtkd_im.vtkAxisActor_DrawGridlinesOnlyOff(cast(void*)swigCPtr);
  }

  public void SetDrawGridlinesLocation(int _arg) {
    vtkd_im.vtkAxisActor_SetDrawGridlinesLocation(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawGridlinesLocation() {
    auto ret = vtkd_im.vtkAxisActor_GetDrawGridlinesLocation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDrawInnerGridlines(int _arg) {
    vtkd_im.vtkAxisActor_SetDrawInnerGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawInnerGridlines() {
    auto ret = vtkd_im.vtkAxisActor_GetDrawInnerGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawInnerGridlinesOn() {
    vtkd_im.vtkAxisActor_DrawInnerGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawInnerGridlinesOff() {
    vtkd_im.vtkAxisActor_DrawInnerGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetGridlineXLength(double _arg) {
    vtkd_im.vtkAxisActor_SetGridlineXLength(cast(void*)swigCPtr, _arg);
  }

  public double GetGridlineXLength() {
    auto ret = vtkd_im.vtkAxisActor_GetGridlineXLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGridlineYLength(double _arg) {
    vtkd_im.vtkAxisActor_SetGridlineYLength(cast(void*)swigCPtr, _arg);
  }

  public double GetGridlineYLength() {
    auto ret = vtkd_im.vtkAxisActor_GetGridlineYLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGridlineZLength(double _arg) {
    vtkd_im.vtkAxisActor_SetGridlineZLength(cast(void*)swigCPtr, _arg);
  }

  public double GetGridlineZLength() {
    auto ret = vtkd_im.vtkAxisActor_GetGridlineZLength(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDrawGridpolys(int _arg) {
    vtkd_im.vtkAxisActor_SetDrawGridpolys(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawGridpolys() {
    auto ret = vtkd_im.vtkAxisActor_GetDrawGridpolys(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawGridpolysOn() {
    vtkd_im.vtkAxisActor_DrawGridpolysOn(cast(void*)swigCPtr);
  }

  public void DrawGridpolysOff() {
    vtkd_im.vtkAxisActor_DrawGridpolysOff(cast(void*)swigCPtr);
  }

  public void SetAxisType(int _arg) {
    vtkd_im.vtkAxisActor_SetAxisType(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisTypeMinValue() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisTypeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxisTypeMaxValue() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisTypeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxisType() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisTypeToX() {
    vtkd_im.vtkAxisActor_SetAxisTypeToX(cast(void*)swigCPtr);
  }

  public void SetAxisTypeToY() {
    vtkd_im.vtkAxisActor_SetAxisTypeToY(cast(void*)swigCPtr);
  }

  public void SetAxisTypeToZ() {
    vtkd_im.vtkAxisActor_SetAxisTypeToZ(cast(void*)swigCPtr);
  }

  public void SetAxisPosition(int _arg) {
    vtkd_im.vtkAxisActor_SetAxisPosition(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisPositionMinValue() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisPositionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxisPositionMaxValue() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisPositionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxisPosition() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisPositionToMinMin() {
    vtkd_im.vtkAxisActor_SetAxisPositionToMinMin(cast(void*)swigCPtr);
  }

  public void SetAxisPositionToMinMax() {
    vtkd_im.vtkAxisActor_SetAxisPositionToMinMax(cast(void*)swigCPtr);
  }

  public void SetAxisPositionToMaxMax() {
    vtkd_im.vtkAxisActor_SetAxisPositionToMaxMax(cast(void*)swigCPtr);
  }

  public void SetAxisPositionToMaxMin() {
    vtkd_im.vtkAxisActor_SetAxisPositionToMaxMin(cast(void*)swigCPtr);
  }

  public void SetCamera(vtkCamera.vtkCamera arg0) {
    vtkd_im.vtkAxisActor_SetCamera(cast(void*)swigCPtr, vtkCamera.vtkCamera.swigGetCPtr(arg0));
  }

  public vtkCamera.vtkCamera GetCamera() {
    void* cPtr = vtkd_im.vtkAxisActor_GetCamera(cast(void*)swigCPtr);
    vtkCamera.vtkCamera ret = (cPtr is null) ? null : new vtkCamera.vtkCamera(cPtr, false);
    return ret;
  }

  public int RenderTranslucentGeometry(vtkViewport.vtkViewport viewport) {
    auto ret = vtkd_im.vtkAxisActor_RenderTranslucentGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
    return ret;
  }

  public int RenderOverlay(vtkViewport.vtkViewport viewport) {
    auto ret = vtkd_im.vtkAxisActor_RenderOverlay(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkAxisActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  alias vtkActor.vtkActor.ReleaseGraphicsResources ReleaseGraphicsResources;

  public void SetLabelScale(double arg0) {
    vtkd_im.vtkAxisActor_SetLabelScale(cast(void*)swigCPtr, arg0);
  }

  public void SetTitleScale(double arg0) {
    vtkd_im.vtkAxisActor_SetTitleScale(cast(void*)swigCPtr, arg0);
  }

  public void SetMinorStart(double _arg) {
    vtkd_im.vtkAxisActor_SetMinorStart(cast(void*)swigCPtr, _arg);
  }

  public double GetMinorStart() {
    auto ret = vtkd_im.vtkAxisActor_GetMinorStart(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMajorStart(int axis) {
    auto ret = vtkd_im.vtkAxisActor_GetMajorStart(cast(void*)swigCPtr, axis);
    return ret;
  }

  public void SetMajorStart(int axis, double value) {
    vtkd_im.vtkAxisActor_SetMajorStart(cast(void*)swigCPtr, axis, value);
  }

  public void SetDeltaMinor(double _arg) {
    vtkd_im.vtkAxisActor_SetDeltaMinor(cast(void*)swigCPtr, _arg);
  }

  public double GetDeltaMinor() {
    auto ret = vtkd_im.vtkAxisActor_GetDeltaMinor(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDeltaMajor(int axis) {
    auto ret = vtkd_im.vtkAxisActor_GetDeltaMajor(cast(void*)swigCPtr, axis);
    return ret;
  }

  public void SetDeltaMajor(int axis, double value) {
    vtkd_im.vtkAxisActor_SetDeltaMajor(cast(void*)swigCPtr, axis, value);
  }

  public void SetMinorRangeStart(double _arg) {
    vtkd_im.vtkAxisActor_SetMinorRangeStart(cast(void*)swigCPtr, _arg);
  }

  public double GetMinorRangeStart() {
    auto ret = vtkd_im.vtkAxisActor_GetMinorRangeStart(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMajorRangeStart(double _arg) {
    vtkd_im.vtkAxisActor_SetMajorRangeStart(cast(void*)swigCPtr, _arg);
  }

  public double GetMajorRangeStart() {
    auto ret = vtkd_im.vtkAxisActor_GetMajorRangeStart(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDeltaRangeMinor(double _arg) {
    vtkd_im.vtkAxisActor_SetDeltaRangeMinor(cast(void*)swigCPtr, _arg);
  }

  public double GetDeltaRangeMinor() {
    auto ret = vtkd_im.vtkAxisActor_GetDeltaRangeMinor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDeltaRangeMajor(double _arg) {
    vtkd_im.vtkAxisActor_SetDeltaRangeMajor(cast(void*)swigCPtr, _arg);
  }

  public double GetDeltaRangeMajor() {
    auto ret = vtkd_im.vtkAxisActor_GetDeltaRangeMajor(cast(void*)swigCPtr);
    return ret;
  }

  public void BuildAxis(vtkViewport.vtkViewport viewport, bool arg1) {
    vtkd_im.vtkAxisActor_BuildAxis(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport), arg1);
  }

  public int GetNumberOfLabelsBuilt() {
    auto ret = vtkd_im.vtkAxisActor_GetNumberOfLabelsBuilt(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCalculateTitleOffset(int _arg) {
    vtkd_im.vtkAxisActor_SetCalculateTitleOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetCalculateTitleOffset() {
    auto ret = vtkd_im.vtkAxisActor_GetCalculateTitleOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void CalculateTitleOffsetOn() {
    vtkd_im.vtkAxisActor_CalculateTitleOffsetOn(cast(void*)swigCPtr);
  }

  public void CalculateTitleOffsetOff() {
    vtkd_im.vtkAxisActor_CalculateTitleOffsetOff(cast(void*)swigCPtr);
  }

  public void SetCalculateLabelOffset(int _arg) {
    vtkd_im.vtkAxisActor_SetCalculateLabelOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetCalculateLabelOffset() {
    auto ret = vtkd_im.vtkAxisActor_GetCalculateLabelOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void CalculateLabelOffsetOn() {
    vtkd_im.vtkAxisActor_CalculateLabelOffsetOn(cast(void*)swigCPtr);
  }

  public void CalculateLabelOffsetOff() {
    vtkd_im.vtkAxisActor_CalculateLabelOffsetOff(cast(void*)swigCPtr);
  }

  public void SetUse2DMode(int _arg) {
    vtkd_im.vtkAxisActor_SetUse2DMode(cast(void*)swigCPtr, _arg);
  }

  public int GetUse2DMode() {
    auto ret = vtkd_im.vtkAxisActor_GetUse2DMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVerticalOffsetXTitle2D(double _arg) {
    vtkd_im.vtkAxisActor_SetVerticalOffsetXTitle2D(cast(void*)swigCPtr, _arg);
  }

  public double GetVerticalOffsetXTitle2D() {
    auto ret = vtkd_im.vtkAxisActor_GetVerticalOffsetXTitle2D(cast(void*)swigCPtr);
    return ret;
  }

  public void SetHorizontalOffsetYTitle2D(double _arg) {
    vtkd_im.vtkAxisActor_SetHorizontalOffsetYTitle2D(cast(void*)swigCPtr, _arg);
  }

  public double GetHorizontalOffsetYTitle2D() {
    auto ret = vtkd_im.vtkAxisActor_GetHorizontalOffsetYTitle2D(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSaveTitlePosition(int _arg) {
    vtkd_im.vtkAxisActor_SetSaveTitlePosition(cast(void*)swigCPtr, _arg);
  }

  public int GetSaveTitlePosition() {
    auto ret = vtkd_im.vtkAxisActor_GetSaveTitlePosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisBaseForX(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkAxisActor_SetAxisBaseForX__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_SetAxisBaseForX__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForX() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetAxisBaseForX__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForX(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkAxisActor_GetAxisBaseForX__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_GetAxisBaseForX__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisBaseForY(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkAxisActor_SetAxisBaseForY__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForY(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_SetAxisBaseForY__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForY() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetAxisBaseForY__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForY(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkAxisActor_GetAxisBaseForY__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForY(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_GetAxisBaseForY__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisBaseForZ(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkAxisActor_SetAxisBaseForZ__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForZ(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_SetAxisBaseForZ__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForZ() {
    auto ret = cast(double*)vtkd_im.vtkAxisActor_GetAxisBaseForZ__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForZ(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkAxisActor_GetAxisBaseForZ__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForZ(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAxisActor_GetAxisBaseForZ__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisOnOrigin(int _arg) {
    vtkd_im.vtkAxisActor_SetAxisOnOrigin(cast(void*)swigCPtr, _arg);
  }

  public int GetAxisOnOrigin() {
    auto ret = vtkd_im.vtkAxisActor_GetAxisOnOrigin(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelOffset(double _arg) {
    vtkd_im.vtkAxisActor_SetLabelOffset(cast(void*)swigCPtr, _arg);
  }

  public double GetLabelOffset() {
    auto ret = vtkd_im.vtkAxisActor_GetLabelOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTitleOffset(double _arg) {
    vtkd_im.vtkAxisActor_SetTitleOffset(cast(void*)swigCPtr, _arg);
  }

  public double GetTitleOffset() {
    auto ret = vtkd_im.vtkAxisActor_GetTitleOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScreenSize(double _arg) {
    vtkd_im.vtkAxisActor_SetScreenSize(cast(void*)swigCPtr, _arg);
  }

  public double GetScreenSize() {
    auto ret = vtkd_im.vtkAxisActor_GetScreenSize(cast(void*)swigCPtr);
    return ret;
  }
}
