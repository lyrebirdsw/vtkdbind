/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkVolumeReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkImageData;
static import vtkImageAlgorithm;

class vtkVolumeReader : vtkImageAlgorithm.vtkImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkVolumeReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkVolumeReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkVolumeReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkVolumeReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkVolumeReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkVolumeReader ret = (cPtr is null) ? null : new vtkVolumeReader(cPtr, false);
    return ret;
  }

  public vtkVolumeReader NewInstance() const {
    void* cPtr = vtkd_im.vtkVolumeReader_NewInstance(cast(void*)swigCPtr);
    vtkVolumeReader ret = (cPtr is null) ? null : new vtkVolumeReader(cPtr, false);
    return ret;
  }

  alias vtkImageAlgorithm.vtkImageAlgorithm.NewInstance NewInstance;

  public void SetFilePrefix(string _arg) {
    vtkd_im.vtkVolumeReader_SetFilePrefix(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFilePrefix() {
    string ret = std.conv.to!string(vtkd_im.vtkVolumeReader_GetFilePrefix(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFilePattern(string _arg) {
    vtkd_im.vtkVolumeReader_SetFilePattern(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFilePattern() {
    string ret = std.conv.to!string(vtkd_im.vtkVolumeReader_GetFilePattern(cast(void*)swigCPtr));
    return ret;
  }

  public void SetImageRange(int _arg1, int _arg2) {
    vtkd_im.vtkVolumeReader_SetImageRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetImageRange(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkVolumeReader_SetImageRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetImageRange() {
    auto ret = cast(int*)vtkd_im.vtkVolumeReader_GetImageRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetImageRange(SWIGTYPE_p_int.SWIGTYPE_p_int data) {
    vtkd_im.vtkVolumeReader_GetImageRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(data));
  }

  public void SetDataSpacing(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkVolumeReader_SetDataSpacing__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVolumeReader_SetDataSpacing__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataSpacing() {
    auto ret = cast(double*)vtkd_im.vtkVolumeReader_GetDataSpacing__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataSpacing(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkVolumeReader_GetDataSpacing__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetDataOrigin(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkVolumeReader_SetDataOrigin__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkVolumeReader_SetDataOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDataOrigin() {
    auto ret = cast(double*)vtkd_im.vtkVolumeReader_GetDataOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDataOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkVolumeReader_GetDataOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public vtkImageData.vtkImageData GetImage(int ImageNumber) {
    void* cPtr = vtkd_im.vtkVolumeReader_GetImage(cast(void*)swigCPtr, ImageNumber);
    vtkImageData.vtkImageData ret = (cPtr is null) ? null : new vtkImageData.vtkImageData(cPtr, false);
    return ret;
  }
}
