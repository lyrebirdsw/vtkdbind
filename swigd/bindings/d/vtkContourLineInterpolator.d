/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourLineInterpolator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import vtkContourRepresentation;
static import vtkIntArray;
static import vtkObject;

class vtkContourLineInterpolator : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkContourLineInterpolator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkContourLineInterpolator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkContourLineInterpolator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkContourLineInterpolator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkContourLineInterpolator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkContourLineInterpolator ret = (cPtr is null) ? null : new vtkContourLineInterpolator(cPtr, false);
    return ret;
  }

  public vtkContourLineInterpolator NewInstance() const {
    void* cPtr = vtkd_im.vtkContourLineInterpolator_NewInstance(cast(void*)swigCPtr);
    vtkContourLineInterpolator ret = (cPtr is null) ? null : new vtkContourLineInterpolator(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public int InterpolateLine(vtkRenderer.vtkRenderer ren, vtkContourRepresentation.vtkContourRepresentation rep, int idx1, int idx2) {
    auto ret = vtkd_im.vtkContourLineInterpolator_InterpolateLine(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren), vtkContourRepresentation.vtkContourRepresentation.swigGetCPtr(rep), idx1, idx2);
    return ret;
  }

  public int UpdateNode(vtkRenderer.vtkRenderer arg0, vtkContourRepresentation.vtkContourRepresentation arg1, double* arg2, int arg3) {
    auto ret = vtkd_im.vtkContourLineInterpolator_UpdateNode(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg0), vtkContourRepresentation.vtkContourRepresentation.swigGetCPtr(arg1), cast(void*)arg2, arg3);
    return ret;
  }

  public void GetSpan(int nodeIndex, vtkIntArray.vtkIntArray nodeIndices, vtkContourRepresentation.vtkContourRepresentation rep) {
    vtkd_im.vtkContourLineInterpolator_GetSpan(cast(void*)swigCPtr, nodeIndex, vtkIntArray.vtkIntArray.swigGetCPtr(nodeIndices), vtkContourRepresentation.vtkContourRepresentation.swigGetCPtr(rep));
  }
}
