/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPickingManager;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderWindowInteractor;
static import vtkAbstractPicker;
static import vtkObject;
static import vtkAssemblyPath;
static import vtkAbstractPropPicker;
static import vtkRenderer;

class vtkPickingManager : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPickingManager_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPickingManager obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkPickingManager New() {
    void* cPtr = vtkd_im.vtkPickingManager_New();
    vtkPickingManager ret = (cPtr is null) ? null : new vtkPickingManager(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPickingManager_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPickingManager SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPickingManager_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPickingManager ret = (cPtr is null) ? null : new vtkPickingManager(cPtr, false);
    return ret;
  }

  public vtkPickingManager NewInstance() const {
    void* cPtr = vtkd_im.vtkPickingManager_NewInstance(cast(void*)swigCPtr);
    vtkPickingManager ret = (cPtr is null) ? null : new vtkPickingManager(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void EnabledOn() {
    vtkd_im.vtkPickingManager_EnabledOn(cast(void*)swigCPtr);
  }

  public void EnabledOff() {
    vtkd_im.vtkPickingManager_EnabledOff(cast(void*)swigCPtr);
  }

  public void SetEnabled(bool _arg) {
    vtkd_im.vtkPickingManager_SetEnabled(cast(void*)swigCPtr, _arg);
  }

  public bool GetEnabled() {
    bool ret = vtkd_im.vtkPickingManager_GetEnabled(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetOptimizeOnInteractorEvents(bool optimize) {
    vtkd_im.vtkPickingManager_SetOptimizeOnInteractorEvents(cast(void*)swigCPtr, optimize);
  }

  public bool GetOptimizeOnInteractorEvents() {
    bool ret = vtkd_im.vtkPickingManager_GetOptimizeOnInteractorEvents(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetInteractor(vtkRenderWindowInteractor.vtkRenderWindowInteractor iren) {
    vtkd_im.vtkPickingManager_SetInteractor(cast(void*)swigCPtr, vtkRenderWindowInteractor.vtkRenderWindowInteractor.swigGetCPtr(iren));
  }

  public vtkRenderWindowInteractor.vtkRenderWindowInteractor GetInteractor() {
    void* cPtr = vtkd_im.vtkPickingManager_GetInteractor(cast(void*)swigCPtr);
    vtkRenderWindowInteractor.vtkRenderWindowInteractor ret = (cPtr is null) ? null : new vtkRenderWindowInteractor.vtkRenderWindowInteractor(cPtr, false);
    return ret;
  }

  public void AddPicker(vtkAbstractPicker.vtkAbstractPicker picker, vtkObject.vtkObject object) {
    vtkd_im.vtkPickingManager_AddPicker__SWIG_0(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker), vtkObject.vtkObject.swigGetCPtr(object));
  }

  public void AddPicker(vtkAbstractPicker.vtkAbstractPicker picker) {
    vtkd_im.vtkPickingManager_AddPicker__SWIG_1(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker));
  }

  public void RemovePicker(vtkAbstractPicker.vtkAbstractPicker picker, vtkObject.vtkObject object) {
    vtkd_im.vtkPickingManager_RemovePicker__SWIG_0(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker), vtkObject.vtkObject.swigGetCPtr(object));
  }

  public void RemovePicker(vtkAbstractPicker.vtkAbstractPicker picker) {
    vtkd_im.vtkPickingManager_RemovePicker__SWIG_1(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker));
  }

  public void RemoveObject(vtkObject.vtkObject object) {
    vtkd_im.vtkPickingManager_RemoveObject(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(object));
  }

  public bool Pick(vtkAbstractPicker.vtkAbstractPicker picker, vtkObject.vtkObject object) {
    bool ret = vtkd_im.vtkPickingManager_Pick__SWIG_0(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker), vtkObject.vtkObject.swigGetCPtr(object)) ? true : false;
    return ret;
  }

  public bool Pick(vtkObject.vtkObject object) {
    bool ret = vtkd_im.vtkPickingManager_Pick__SWIG_1(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(object)) ? true : false;
    return ret;
  }

  public bool Pick(vtkAbstractPicker.vtkAbstractPicker picker) {
    bool ret = vtkd_im.vtkPickingManager_Pick__SWIG_2(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker)) ? true : false;
    return ret;
  }

  public vtkAssemblyPath.vtkAssemblyPath GetAssemblyPath(double X, double Y, double Z, vtkAbstractPropPicker.vtkAbstractPropPicker picker, vtkRenderer.vtkRenderer renderer, vtkObject.vtkObject obj) {
    void* cPtr = vtkd_im.vtkPickingManager_GetAssemblyPath(cast(void*)swigCPtr, X, Y, Z, vtkAbstractPropPicker.vtkAbstractPropPicker.swigGetCPtr(picker), vtkRenderer.vtkRenderer.swigGetCPtr(renderer), vtkObject.vtkObject.swigGetCPtr(obj));
    vtkAssemblyPath.vtkAssemblyPath ret = (cPtr is null) ? null : new vtkAssemblyPath.vtkAssemblyPath(cPtr, false);
    return ret;
  }

  public int GetNumberOfPickers() {
    auto ret = vtkd_im.vtkPickingManager_GetNumberOfPickers(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfObjectsLinked(vtkAbstractPicker.vtkAbstractPicker picker) {
    auto ret = vtkd_im.vtkPickingManager_GetNumberOfObjectsLinked(cast(void*)swigCPtr, vtkAbstractPicker.vtkAbstractPicker.swigGetCPtr(picker));
    return ret;
  }
}
