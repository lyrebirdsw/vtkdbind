/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkIcicleView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTreeAreaView;

class vtkIcicleView : vtkTreeAreaView.vtkTreeAreaView {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkIcicleView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkIcicleView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkIcicleView New() {
    void* cPtr = vtkd_im.vtkIcicleView_New();
    vtkIcicleView ret = (cPtr is null) ? null : new vtkIcicleView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkIcicleView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkIcicleView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkIcicleView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkIcicleView ret = (cPtr is null) ? null : new vtkIcicleView(cPtr, false);
    return ret;
  }

  public vtkIcicleView NewInstance() const {
    void* cPtr = vtkd_im.vtkIcicleView_NewInstance(cast(void*)swigCPtr);
    vtkIcicleView ret = (cPtr is null) ? null : new vtkIcicleView(cPtr, false);
    return ret;
  }

  alias vtkTreeAreaView.vtkTreeAreaView.NewInstance NewInstance;

  public void SetTopToBottom(bool value) {
    vtkd_im.vtkIcicleView_SetTopToBottom(cast(void*)swigCPtr, value);
  }

  public bool GetTopToBottom() {
    bool ret = vtkd_im.vtkIcicleView_GetTopToBottom(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void TopToBottomOn() {
    vtkd_im.vtkIcicleView_TopToBottomOn(cast(void*)swigCPtr);
  }

  public void TopToBottomOff() {
    vtkd_im.vtkIcicleView_TopToBottomOff(cast(void*)swigCPtr);
  }

  public void SetRootWidth(double width) {
    vtkd_im.vtkIcicleView_SetRootWidth(cast(void*)swigCPtr, width);
  }

  public double GetRootWidth() {
    auto ret = vtkd_im.vtkIcicleView_GetRootWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLayerThickness(double thickness) {
    vtkd_im.vtkIcicleView_SetLayerThickness(cast(void*)swigCPtr, thickness);
  }

  public double GetLayerThickness() {
    auto ret = vtkd_im.vtkIcicleView_GetLayerThickness(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseGradientColoring(bool value) {
    vtkd_im.vtkIcicleView_SetUseGradientColoring(cast(void*)swigCPtr, value);
  }

  public bool GetUseGradientColoring() {
    bool ret = vtkd_im.vtkIcicleView_GetUseGradientColoring(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseGradientColoringOn() {
    vtkd_im.vtkIcicleView_UseGradientColoringOn(cast(void*)swigCPtr);
  }

  public void UseGradientColoringOff() {
    vtkd_im.vtkIcicleView_UseGradientColoringOff(cast(void*)swigCPtr);
  }
}
