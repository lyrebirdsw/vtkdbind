/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkHyperOctreeFractalSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import SWIGTYPE_p_double;
static import vtkHyperOctreeAlgorithm;

class vtkHyperOctreeFractalSource : vtkHyperOctreeAlgorithm.vtkHyperOctreeAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkHyperOctreeFractalSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkHyperOctreeFractalSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkHyperOctreeFractalSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkHyperOctreeFractalSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkHyperOctreeFractalSource ret = (cPtr is null) ? null : new vtkHyperOctreeFractalSource(cPtr, false);
    return ret;
  }

  public vtkHyperOctreeFractalSource NewInstance() const {
    void* cPtr = vtkd_im.vtkHyperOctreeFractalSource_NewInstance(cast(void*)swigCPtr);
    vtkHyperOctreeFractalSource ret = (cPtr is null) ? null : new vtkHyperOctreeFractalSource(cPtr, false);
    return ret;
  }

  alias vtkHyperOctreeAlgorithm.vtkHyperOctreeAlgorithm.NewInstance NewInstance;

  public static vtkHyperOctreeFractalSource New() {
    void* cPtr = vtkd_im.vtkHyperOctreeFractalSource_New();
    vtkHyperOctreeFractalSource ret = (cPtr is null) ? null : new vtkHyperOctreeFractalSource(cPtr, false);
    return ret;
  }

  public int GetMaximumLevel() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetMaximumLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumLevel(int levels) {
    vtkd_im.vtkHyperOctreeFractalSource_SetMaximumLevel(cast(void*)swigCPtr, levels);
  }

  public void SetMinimumLevel(int level) {
    vtkd_im.vtkHyperOctreeFractalSource_SetMinimumLevel(cast(void*)swigCPtr, level);
  }

  public int GetMinimumLevel() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetMinimumLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void SetProjectionAxes(int x, int y, int z) {
    vtkd_im.vtkHyperOctreeFractalSource_SetProjectionAxes__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetProjectionAxes(SWIGTYPE_p_int.SWIGTYPE_p_int a) {
    vtkd_im.vtkHyperOctreeFractalSource_SetProjectionAxes__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(a));
  }

  public int* GetProjectionAxes() {
    auto ret = cast(int*)vtkd_im.vtkHyperOctreeFractalSource_GetProjectionAxes__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetProjectionAxes(int* _arg1, int* _arg2, int* _arg3) {
    vtkd_im.vtkHyperOctreeFractalSource_GetProjectionAxes__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetProjectionAxes(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_GetProjectionAxes__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetOriginCX(double _arg1, double _arg2, double _arg3, double _arg4) {
    vtkd_im.vtkHyperOctreeFractalSource_SetOriginCX__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4);
  }

  public void SetOriginCX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_SetOriginCX__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetOriginCX() {
    auto ret = cast(double*)vtkd_im.vtkHyperOctreeFractalSource_GetOriginCX__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOriginCX(double* _arg1, double* _arg2, double* _arg3, double* _arg4) {
    vtkd_im.vtkHyperOctreeFractalSource_GetOriginCX__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetOriginCX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_GetOriginCX__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetSizeCX(double _arg1, double _arg2, double _arg3, double _arg4) {
    vtkd_im.vtkHyperOctreeFractalSource_SetSizeCX__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4);
  }

  public void SetSizeCX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_SetSizeCX__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetSizeCX() {
    auto ret = cast(double*)vtkd_im.vtkHyperOctreeFractalSource_GetSizeCX__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSizeCX(double* _arg1, double* _arg2, double* _arg3, double* _arg4) {
    vtkd_im.vtkHyperOctreeFractalSource_GetSizeCX__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSizeCX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_GetSizeCX__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetMaximumNumberOfIterations(ushort _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_SetMaximumNumberOfIterations(cast(void*)swigCPtr, _arg);
  }

  public ushort GetMaximumNumberOfIterationsMinValue() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetMaximumNumberOfIterationsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public ushort GetMaximumNumberOfIterationsMaxValue() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetMaximumNumberOfIterationsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public ubyte GetMaximumNumberOfIterations() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetMaximumNumberOfIterations(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDimension(int _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_SetDimension(cast(void*)swigCPtr, _arg);
  }

  public int GetDimensionMinValue() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetDimensionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetDimensionMaxValue() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetDimensionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetDimension() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetDimension(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSpanThreshold(double _arg) {
    vtkd_im.vtkHyperOctreeFractalSource_SetSpanThreshold(cast(void*)swigCPtr, _arg);
  }

  public double GetSpanThreshold() {
    auto ret = vtkd_im.vtkHyperOctreeFractalSource_GetSpanThreshold(cast(void*)swigCPtr);
    return ret;
  }
}
