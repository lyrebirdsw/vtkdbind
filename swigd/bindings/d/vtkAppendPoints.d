/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAppendPoints;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkAppendPoints : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAppendPoints_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAppendPoints obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAppendPoints New() {
    void* cPtr = vtkd_im.vtkAppendPoints_New();
    vtkAppendPoints ret = (cPtr is null) ? null : new vtkAppendPoints(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAppendPoints_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAppendPoints SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAppendPoints_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAppendPoints ret = (cPtr is null) ? null : new vtkAppendPoints(cPtr, false);
    return ret;
  }

  public vtkAppendPoints NewInstance() const {
    void* cPtr = vtkd_im.vtkAppendPoints_NewInstance(cast(void*)swigCPtr);
    vtkAppendPoints ret = (cPtr is null) ? null : new vtkAppendPoints(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetInputIdArrayName(string _arg) {
    vtkd_im.vtkAppendPoints_SetInputIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetInputIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkAppendPoints_GetInputIdArrayName(cast(void*)swigCPtr));
    return ret;
  }
}
