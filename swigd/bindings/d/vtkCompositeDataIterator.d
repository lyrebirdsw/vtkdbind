/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCompositeDataIterator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkCompositeDataSet;
static import vtkDataObject;
static import vtkInformation;
static import vtkObject;

class vtkCompositeDataIterator : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCompositeDataIterator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCompositeDataIterator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkCompositeDataIterator(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCompositeDataIterator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCompositeDataIterator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCompositeDataIterator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCompositeDataIterator ret = (cPtr is null) ? null : new vtkCompositeDataIterator(cPtr, false);
    return ret;
  }

  public vtkCompositeDataIterator NewInstance() const {
    void* cPtr = vtkd_im.vtkCompositeDataIterator_NewInstance(cast(void*)swigCPtr);
    vtkCompositeDataIterator ret = (cPtr is null) ? null : new vtkCompositeDataIterator(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetDataSet(vtkCompositeDataSet.vtkCompositeDataSet ds) {
    vtkd_im.vtkCompositeDataIterator_SetDataSet(cast(void*)swigCPtr, vtkCompositeDataSet.vtkCompositeDataSet.swigGetCPtr(ds));
  }

  public vtkCompositeDataSet.vtkCompositeDataSet GetDataSet() {
    void* cPtr = vtkd_im.vtkCompositeDataIterator_GetDataSet(cast(void*)swigCPtr);
    vtkCompositeDataSet.vtkCompositeDataSet ret = (cPtr is null) ? null : new vtkCompositeDataSet.vtkCompositeDataSet(cPtr, false);
    return ret;
  }

  public void InitTraversal() {
    vtkd_im.vtkCompositeDataIterator_InitTraversal(cast(void*)swigCPtr);
  }

  public void InitReverseTraversal() {
    vtkd_im.vtkCompositeDataIterator_InitReverseTraversal(cast(void*)swigCPtr);
  }

  public void GoToFirstItem() {
    vtkd_im.vtkCompositeDataIterator_GoToFirstItem(cast(void*)swigCPtr);
  }

  public void GoToNextItem() {
    vtkd_im.vtkCompositeDataIterator_GoToNextItem(cast(void*)swigCPtr);
  }

  public int IsDoneWithTraversal() {
    auto ret = vtkd_im.vtkCompositeDataIterator_IsDoneWithTraversal(cast(void*)swigCPtr);
    return ret;
  }

  public vtkDataObject.vtkDataObject GetCurrentDataObject() {
    void* cPtr = vtkd_im.vtkCompositeDataIterator_GetCurrentDataObject(cast(void*)swigCPtr);
    vtkDataObject.vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject.vtkDataObject(cPtr, false);
    return ret;
  }

  public vtkInformation.vtkInformation GetCurrentMetaData() {
    void* cPtr = vtkd_im.vtkCompositeDataIterator_GetCurrentMetaData(cast(void*)swigCPtr);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public int HasCurrentMetaData() {
    auto ret = vtkd_im.vtkCompositeDataIterator_HasCurrentMetaData(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSkipEmptyNodes(int _arg) {
    vtkd_im.vtkCompositeDataIterator_SetSkipEmptyNodes(cast(void*)swigCPtr, _arg);
  }

  public int GetSkipEmptyNodes() {
    auto ret = vtkd_im.vtkCompositeDataIterator_GetSkipEmptyNodes(cast(void*)swigCPtr);
    return ret;
  }

  public void SkipEmptyNodesOn() {
    vtkd_im.vtkCompositeDataIterator_SkipEmptyNodesOn(cast(void*)swigCPtr);
  }

  public void SkipEmptyNodesOff() {
    vtkd_im.vtkCompositeDataIterator_SkipEmptyNodesOff(cast(void*)swigCPtr);
  }

  public uint GetCurrentFlatIndex() {
    auto ret = vtkd_im.vtkCompositeDataIterator_GetCurrentFlatIndex(cast(void*)swigCPtr);
    return ret;
  }

  public int GetReverse() {
    auto ret = vtkd_im.vtkCompositeDataIterator_GetReverse(cast(void*)swigCPtr);
    return ret;
  }
}
