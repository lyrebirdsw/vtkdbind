/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSphereSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkSphereSource : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSphereSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSphereSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSphereSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSphereSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSphereSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSphereSource ret = (cPtr is null) ? null : new vtkSphereSource(cPtr, false);
    return ret;
  }

  public vtkSphereSource NewInstance() const {
    void* cPtr = vtkd_im.vtkSphereSource_NewInstance(cast(void*)swigCPtr);
    vtkSphereSource ret = (cPtr is null) ? null : new vtkSphereSource(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkSphereSource New() {
    void* cPtr = vtkd_im.vtkSphereSource_New();
    vtkSphereSource ret = (cPtr is null) ? null : new vtkSphereSource(cPtr, false);
    return ret;
  }

  public void SetRadius(double _arg) {
    vtkd_im.vtkSphereSource_SetRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetRadiusMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetRadiusMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRadiusMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetRadiusMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetRadius() {
    auto ret = vtkd_im.vtkSphereSource_GetRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkSphereSource_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkSphereSource_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetCenter() {
    auto ret = cast(double*)vtkd_im.vtkSphereSource_GetCenter__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkSphereSource_GetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetThetaResolution(int _arg) {
    vtkd_im.vtkSphereSource_SetThetaResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetThetaResolutionMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetThetaResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetThetaResolutionMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetThetaResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetThetaResolution() {
    auto ret = vtkd_im.vtkSphereSource_GetThetaResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPhiResolution(int _arg) {
    vtkd_im.vtkSphereSource_SetPhiResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetPhiResolutionMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetPhiResolutionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPhiResolutionMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetPhiResolutionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPhiResolution() {
    auto ret = vtkd_im.vtkSphereSource_GetPhiResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetStartTheta(double _arg) {
    vtkd_im.vtkSphereSource_SetStartTheta(cast(void*)swigCPtr, _arg);
  }

  public double GetStartThetaMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetStartThetaMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetStartThetaMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetStartThetaMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetStartTheta() {
    auto ret = vtkd_im.vtkSphereSource_GetStartTheta(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEndTheta(double _arg) {
    vtkd_im.vtkSphereSource_SetEndTheta(cast(void*)swigCPtr, _arg);
  }

  public double GetEndThetaMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetEndThetaMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEndThetaMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetEndThetaMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEndTheta() {
    auto ret = vtkd_im.vtkSphereSource_GetEndTheta(cast(void*)swigCPtr);
    return ret;
  }

  public void SetStartPhi(double _arg) {
    vtkd_im.vtkSphereSource_SetStartPhi(cast(void*)swigCPtr, _arg);
  }

  public double GetStartPhiMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetStartPhiMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetStartPhiMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetStartPhiMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetStartPhi() {
    auto ret = vtkd_im.vtkSphereSource_GetStartPhi(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEndPhi(double _arg) {
    vtkd_im.vtkSphereSource_SetEndPhi(cast(void*)swigCPtr, _arg);
  }

  public double GetEndPhiMinValue() {
    auto ret = vtkd_im.vtkSphereSource_GetEndPhiMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEndPhiMaxValue() {
    auto ret = vtkd_im.vtkSphereSource_GetEndPhiMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetEndPhi() {
    auto ret = vtkd_im.vtkSphereSource_GetEndPhi(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLatLongTessellation(int _arg) {
    vtkd_im.vtkSphereSource_SetLatLongTessellation(cast(void*)swigCPtr, _arg);
  }

  public int GetLatLongTessellation() {
    auto ret = vtkd_im.vtkSphereSource_GetLatLongTessellation(cast(void*)swigCPtr);
    return ret;
  }

  public void LatLongTessellationOn() {
    vtkd_im.vtkSphereSource_LatLongTessellationOn(cast(void*)swigCPtr);
  }

  public void LatLongTessellationOff() {
    vtkd_im.vtkSphereSource_LatLongTessellationOff(cast(void*)swigCPtr);
  }
}
