/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTextActor3D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTextProperty;
static import SWIGTYPE_p_int;
static import vtkProp3D;

class vtkTextActor3D : vtkProp3D.vtkProp3D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTextActor3D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTextActor3D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTextActor3D New() {
    void* cPtr = vtkd_im.vtkTextActor3D_New();
    vtkTextActor3D ret = (cPtr is null) ? null : new vtkTextActor3D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTextActor3D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTextActor3D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTextActor3D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTextActor3D ret = (cPtr is null) ? null : new vtkTextActor3D(cPtr, false);
    return ret;
  }

  public vtkTextActor3D NewInstance() const {
    void* cPtr = vtkd_im.vtkTextActor3D_NewInstance(cast(void*)swigCPtr);
    vtkTextActor3D ret = (cPtr is null) ? null : new vtkTextActor3D(cPtr, false);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.NewInstance NewInstance;

  public void SetInput(string _arg) {
    vtkd_im.vtkTextActor3D_SetInput(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetInput() {
    string ret = std.conv.to!string(vtkd_im.vtkTextActor3D_GetInput(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkTextActor3D_SetTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetTextProperty() {
    void* cPtr = vtkd_im.vtkTextActor3D_GetTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public int GetBoundingBox(SWIGTYPE_p_int.SWIGTYPE_p_int bbox) {
    auto ret = vtkd_im.vtkTextActor3D_GetBoundingBox(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(bbox));
    return ret;
  }
}
