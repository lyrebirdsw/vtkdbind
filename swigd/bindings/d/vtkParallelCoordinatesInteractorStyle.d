/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkParallelCoordinatesInteractorStyle;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkViewport;
static import SWIGTYPE_p_double;
static import vtkInteractorStyleTrackballCamera;

class vtkParallelCoordinatesInteractorStyle : vtkInteractorStyleTrackballCamera.vtkInteractorStyleTrackballCamera {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkParallelCoordinatesInteractorStyle_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkParallelCoordinatesInteractorStyle obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkParallelCoordinatesInteractorStyle New() {
    void* cPtr = vtkd_im.vtkParallelCoordinatesInteractorStyle_New();
    vtkParallelCoordinatesInteractorStyle ret = (cPtr is null) ? null : new vtkParallelCoordinatesInteractorStyle(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkParallelCoordinatesInteractorStyle_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkParallelCoordinatesInteractorStyle SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkParallelCoordinatesInteractorStyle_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkParallelCoordinatesInteractorStyle ret = (cPtr is null) ? null : new vtkParallelCoordinatesInteractorStyle(cPtr, false);
    return ret;
  }

  public vtkParallelCoordinatesInteractorStyle NewInstance() const {
    void* cPtr = vtkd_im.vtkParallelCoordinatesInteractorStyle_NewInstance(cast(void*)swigCPtr);
    vtkParallelCoordinatesInteractorStyle ret = (cPtr is null) ? null : new vtkParallelCoordinatesInteractorStyle(cPtr, false);
    return ret;
  }

  alias vtkInteractorStyleTrackballCamera.vtkInteractorStyleTrackballCamera.NewInstance NewInstance;

  public int* GetCursorStartPosition() {
    auto ret = cast(int*)vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorStartPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCursorStartPosition(int* _arg1, int* _arg2) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorStartPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCursorStartPosition(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorStartPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetCursorCurrentPosition() {
    auto ret = cast(int*)vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorCurrentPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCursorCurrentPosition(int* _arg1, int* _arg2) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorCurrentPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCursorCurrentPosition(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorCurrentPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetCursorLastPosition() {
    auto ret = cast(int*)vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorLastPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetCursorLastPosition(int* _arg1, int* _arg2) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorLastPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetCursorLastPosition(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorLastPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void GetCursorStartPosition(vtkViewport.vtkViewport viewport, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorStartPosition__SWIG_3(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetCursorCurrentPosition(vtkViewport.vtkViewport viewport, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorCurrentPosition__SWIG_3(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void GetCursorLastPosition(vtkViewport.vtkViewport viewport, SWIGTYPE_p_double.SWIGTYPE_p_double pos) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_GetCursorLastPosition__SWIG_3(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pos));
  }

  public void StartInspect(int x, int y) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_StartInspect(cast(void*)swigCPtr, x, y);
  }

  public void Inspect(int x, int y) {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_Inspect(cast(void*)swigCPtr, x, y);
  }

  public void EndInspect() {
    vtkd_im.vtkParallelCoordinatesInteractorStyle_EndInspect(cast(void*)swigCPtr);
  }
}
