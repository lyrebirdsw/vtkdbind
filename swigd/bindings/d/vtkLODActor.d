/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLODActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkWindow;
static import vtkMapper;
static import vtkPolyDataAlgorithm;
static import vtkMapperCollection;
static import vtkActor;

class vtkLODActor : vtkActor.vtkActor {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLODActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLODActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLODActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLODActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLODActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLODActor ret = (cPtr is null) ? null : new vtkLODActor(cPtr, false);
    return ret;
  }

  public vtkLODActor NewInstance() const {
    void* cPtr = vtkd_im.vtkLODActor_NewInstance(cast(void*)swigCPtr);
    vtkLODActor ret = (cPtr is null) ? null : new vtkLODActor(cPtr, false);
    return ret;
  }

  alias vtkActor.vtkActor.NewInstance NewInstance;

  public static vtkLODActor New() {
    void* cPtr = vtkd_im.vtkLODActor_New();
    vtkLODActor ret = (cPtr is null) ? null : new vtkLODActor(cPtr, false);
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkLODActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  alias vtkActor.vtkActor.ReleaseGraphicsResources ReleaseGraphicsResources;

  public void AddLODMapper(vtkMapper.vtkMapper mapper) {
    vtkd_im.vtkLODActor_AddLODMapper(cast(void*)swigCPtr, vtkMapper.vtkMapper.swigGetCPtr(mapper));
  }

  public void SetLowResFilter(vtkPolyDataAlgorithm.vtkPolyDataAlgorithm arg0) {
    vtkd_im.vtkLODActor_SetLowResFilter(cast(void*)swigCPtr, vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.swigGetCPtr(arg0));
  }

  public void SetMediumResFilter(vtkPolyDataAlgorithm.vtkPolyDataAlgorithm arg0) {
    vtkd_im.vtkLODActor_SetMediumResFilter(cast(void*)swigCPtr, vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.swigGetCPtr(arg0));
  }

  public vtkPolyDataAlgorithm.vtkPolyDataAlgorithm GetLowResFilter() {
    void* cPtr = vtkd_im.vtkLODActor_GetLowResFilter(cast(void*)swigCPtr);
    vtkPolyDataAlgorithm.vtkPolyDataAlgorithm ret = (cPtr is null) ? null : new vtkPolyDataAlgorithm.vtkPolyDataAlgorithm(cPtr, false);
    return ret;
  }

  public vtkPolyDataAlgorithm.vtkPolyDataAlgorithm GetMediumResFilter() {
    void* cPtr = vtkd_im.vtkLODActor_GetMediumResFilter(cast(void*)swigCPtr);
    vtkPolyDataAlgorithm.vtkPolyDataAlgorithm ret = (cPtr is null) ? null : new vtkPolyDataAlgorithm.vtkPolyDataAlgorithm(cPtr, false);
    return ret;
  }

  public int GetNumberOfCloudPoints() {
    auto ret = vtkd_im.vtkLODActor_GetNumberOfCloudPoints(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfCloudPoints(int _arg) {
    vtkd_im.vtkLODActor_SetNumberOfCloudPoints(cast(void*)swigCPtr, _arg);
  }

  public vtkMapperCollection.vtkMapperCollection GetLODMappers() {
    void* cPtr = vtkd_im.vtkLODActor_GetLODMappers(cast(void*)swigCPtr);
    vtkMapperCollection.vtkMapperCollection ret = (cPtr is null) ? null : new vtkMapperCollection.vtkMapperCollection(cPtr, false);
    return ret;
  }
}
