/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDistancePolyDataFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkPolyDataAlgorithm;

class vtkDistancePolyDataFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDistancePolyDataFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDistancePolyDataFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDistancePolyDataFilter New() {
    void* cPtr = vtkd_im.vtkDistancePolyDataFilter_New();
    vtkDistancePolyDataFilter ret = (cPtr is null) ? null : new vtkDistancePolyDataFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDistancePolyDataFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDistancePolyDataFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDistancePolyDataFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDistancePolyDataFilter ret = (cPtr is null) ? null : new vtkDistancePolyDataFilter(cPtr, false);
    return ret;
  }

  public vtkDistancePolyDataFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkDistancePolyDataFilter_NewInstance(cast(void*)swigCPtr);
    vtkDistancePolyDataFilter ret = (cPtr is null) ? null : new vtkDistancePolyDataFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetSignedDistance(int _arg) {
    vtkd_im.vtkDistancePolyDataFilter_SetSignedDistance(cast(void*)swigCPtr, _arg);
  }

  public int GetSignedDistance() {
    auto ret = vtkd_im.vtkDistancePolyDataFilter_GetSignedDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void SignedDistanceOn() {
    vtkd_im.vtkDistancePolyDataFilter_SignedDistanceOn(cast(void*)swigCPtr);
  }

  public void SignedDistanceOff() {
    vtkd_im.vtkDistancePolyDataFilter_SignedDistanceOff(cast(void*)swigCPtr);
  }

  public void SetNegateDistance(int _arg) {
    vtkd_im.vtkDistancePolyDataFilter_SetNegateDistance(cast(void*)swigCPtr, _arg);
  }

  public int GetNegateDistance() {
    auto ret = vtkd_im.vtkDistancePolyDataFilter_GetNegateDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void NegateDistanceOn() {
    vtkd_im.vtkDistancePolyDataFilter_NegateDistanceOn(cast(void*)swigCPtr);
  }

  public void NegateDistanceOff() {
    vtkd_im.vtkDistancePolyDataFilter_NegateDistanceOff(cast(void*)swigCPtr);
  }

  public void SetComputeSecondDistance(int _arg) {
    vtkd_im.vtkDistancePolyDataFilter_SetComputeSecondDistance(cast(void*)swigCPtr, _arg);
  }

  public int GetComputeSecondDistance() {
    auto ret = vtkd_im.vtkDistancePolyDataFilter_GetComputeSecondDistance(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeSecondDistanceOn() {
    vtkd_im.vtkDistancePolyDataFilter_ComputeSecondDistanceOn(cast(void*)swigCPtr);
  }

  public void ComputeSecondDistanceOff() {
    vtkd_im.vtkDistancePolyDataFilter_ComputeSecondDistanceOff(cast(void*)swigCPtr);
  }

  public vtkPolyData.vtkPolyData GetSecondDistanceOutput() {
    void* cPtr = vtkd_im.vtkDistancePolyDataFilter_GetSecondDistanceOutput(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }
}
