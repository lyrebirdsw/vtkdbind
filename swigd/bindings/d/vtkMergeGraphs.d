/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMergeGraphs;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkMutableGraphHelper;
static import vtkGraph;
static import vtkGraphAlgorithm;

class vtkMergeGraphs : vtkGraphAlgorithm.vtkGraphAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkMergeGraphs_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkMergeGraphs obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkMergeGraphs New() {
    void* cPtr = vtkd_im.vtkMergeGraphs_New();
    vtkMergeGraphs ret = (cPtr is null) ? null : new vtkMergeGraphs(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkMergeGraphs_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkMergeGraphs SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkMergeGraphs_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkMergeGraphs ret = (cPtr is null) ? null : new vtkMergeGraphs(cPtr, false);
    return ret;
  }

  public vtkMergeGraphs NewInstance() const {
    void* cPtr = vtkd_im.vtkMergeGraphs_NewInstance(cast(void*)swigCPtr);
    vtkMergeGraphs ret = (cPtr is null) ? null : new vtkMergeGraphs(cPtr, false);
    return ret;
  }

  alias vtkGraphAlgorithm.vtkGraphAlgorithm.NewInstance NewInstance;

  public int ExtendGraph(vtkMutableGraphHelper.vtkMutableGraphHelper g1, vtkGraph.vtkGraph g2) {
    auto ret = vtkd_im.vtkMergeGraphs_ExtendGraph(cast(void*)swigCPtr, vtkMutableGraphHelper.vtkMutableGraphHelper.swigGetCPtr(g1), vtkGraph.vtkGraph.swigGetCPtr(g2));
    return ret;
  }

  public void SetUseEdgeWindow(bool _arg) {
    vtkd_im.vtkMergeGraphs_SetUseEdgeWindow(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseEdgeWindow() {
    bool ret = vtkd_im.vtkMergeGraphs_GetUseEdgeWindow(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseEdgeWindowOn() {
    vtkd_im.vtkMergeGraphs_UseEdgeWindowOn(cast(void*)swigCPtr);
  }

  public void UseEdgeWindowOff() {
    vtkd_im.vtkMergeGraphs_UseEdgeWindowOff(cast(void*)swigCPtr);
  }

  public void SetEdgeWindowArrayName(string _arg) {
    vtkd_im.vtkMergeGraphs_SetEdgeWindowArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetEdgeWindowArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkMergeGraphs_GetEdgeWindowArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetEdgeWindow(double _arg) {
    vtkd_im.vtkMergeGraphs_SetEdgeWindow(cast(void*)swigCPtr, _arg);
  }

  public double GetEdgeWindow() {
    auto ret = vtkd_im.vtkMergeGraphs_GetEdgeWindow(cast(void*)swigCPtr);
    return ret;
  }
}
