/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageViewer2;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageData;
static import vtkAlgorithmOutput;
static import SWIGTYPE_p_int;
static import vtkRenderWindow;
static import vtkRenderer;
static import vtkImageActor;
static import vtkImageMapToWindowLevelColors;
static import vtkInteractorStyleImage;
static import vtkRenderWindowInteractor;
static import vtkObject;

class vtkImageViewer2 : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageViewer2_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageViewer2 obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageViewer2 New() {
    void* cPtr = vtkd_im.vtkImageViewer2_New();
    vtkImageViewer2 ret = (cPtr is null) ? null : new vtkImageViewer2(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageViewer2_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageViewer2 SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageViewer2_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageViewer2 ret = (cPtr is null) ? null : new vtkImageViewer2(cPtr, false);
    return ret;
  }

  public vtkImageViewer2 NewInstance() const {
    void* cPtr = vtkd_im.vtkImageViewer2_NewInstance(cast(void*)swigCPtr);
    vtkImageViewer2 ret = (cPtr is null) ? null : new vtkImageViewer2(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public string GetWindowName() {
    string ret = std.conv.to!string(vtkd_im.vtkImageViewer2_GetWindowName(cast(void*)swigCPtr));
    return ret;
  }

  public void Render() {
    vtkd_im.vtkImageViewer2_Render(cast(void*)swigCPtr);
  }

  public void SetInputData(vtkImageData.vtkImageData arg0) {
    vtkd_im.vtkImageViewer2_SetInputData(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(arg0));
  }

  public vtkImageData.vtkImageData GetInput() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetInput(cast(void*)swigCPtr);
    vtkImageData.vtkImageData ret = (cPtr is null) ? null : new vtkImageData.vtkImageData(cPtr, false);
    return ret;
  }

  public void SetInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput input) {
    vtkd_im.vtkImageViewer2_SetInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(input));
  }

  public int GetSliceOrientation() {
    auto ret = vtkd_im.vtkImageViewer2_GetSliceOrientation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSliceOrientation(int orientation) {
    vtkd_im.vtkImageViewer2_SetSliceOrientation(cast(void*)swigCPtr, orientation);
  }

  public void SetSliceOrientationToXY() {
    vtkd_im.vtkImageViewer2_SetSliceOrientationToXY(cast(void*)swigCPtr);
  }

  public void SetSliceOrientationToYZ() {
    vtkd_im.vtkImageViewer2_SetSliceOrientationToYZ(cast(void*)swigCPtr);
  }

  public void SetSliceOrientationToXZ() {
    vtkd_im.vtkImageViewer2_SetSliceOrientationToXZ(cast(void*)swigCPtr);
  }

  public int GetSlice() {
    auto ret = vtkd_im.vtkImageViewer2_GetSlice(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSlice(int s) {
    vtkd_im.vtkImageViewer2_SetSlice(cast(void*)swigCPtr, s);
  }

  public void UpdateDisplayExtent() {
    vtkd_im.vtkImageViewer2_UpdateDisplayExtent(cast(void*)swigCPtr);
  }

  public int GetSliceMin() {
    auto ret = vtkd_im.vtkImageViewer2_GetSliceMin(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSliceMax() {
    auto ret = vtkd_im.vtkImageViewer2_GetSliceMax(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSliceRange(SWIGTYPE_p_int.SWIGTYPE_p_int range) {
    vtkd_im.vtkImageViewer2_GetSliceRange__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(range));
  }

  public void GetSliceRange(int* min, int* max) {
    vtkd_im.vtkImageViewer2_GetSliceRange__SWIG_1(cast(void*)swigCPtr, cast(void*)min, cast(void*)max);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public int* GetSliceRange() {
    auto ret = cast(int*)vtkd_im.vtkImageViewer2_GetSliceRange__SWIG_2(cast(void*)swigCPtr);
    return ret;
  }

  public double GetColorWindow() {
    auto ret = vtkd_im.vtkImageViewer2_GetColorWindow(cast(void*)swigCPtr);
    return ret;
  }

  public double GetColorLevel() {
    auto ret = vtkd_im.vtkImageViewer2_GetColorLevel(cast(void*)swigCPtr);
    return ret;
  }

  public void SetColorWindow(double s) {
    vtkd_im.vtkImageViewer2_SetColorWindow(cast(void*)swigCPtr, s);
  }

  public void SetColorLevel(double s) {
    vtkd_im.vtkImageViewer2_SetColorLevel(cast(void*)swigCPtr, s);
  }

  public void SetDisplayId(void* a) {
    vtkd_im.vtkImageViewer2_SetDisplayId(cast(void*)swigCPtr, cast(void*)a);
  }

  public void SetWindowId(void* a) {
    vtkd_im.vtkImageViewer2_SetWindowId(cast(void*)swigCPtr, cast(void*)a);
  }

  public void SetParentId(void* a) {
    vtkd_im.vtkImageViewer2_SetParentId(cast(void*)swigCPtr, cast(void*)a);
  }

  public int* GetPosition() {
    auto ret = cast(int*)vtkd_im.vtkImageViewer2_GetPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPosition(int a, int b) {
    vtkd_im.vtkImageViewer2_SetPosition__SWIG_0(cast(void*)swigCPtr, a, b);
  }

  public void SetPosition(SWIGTYPE_p_int.SWIGTYPE_p_int a) {
    vtkd_im.vtkImageViewer2_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(a));
  }

  public int* GetSize() {
    auto ret = cast(int*)vtkd_im.vtkImageViewer2_GetSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSize(int a, int b) {
    vtkd_im.vtkImageViewer2_SetSize__SWIG_0(cast(void*)swigCPtr, a, b);
  }

  public void SetSize(SWIGTYPE_p_int.SWIGTYPE_p_int a) {
    vtkd_im.vtkImageViewer2_SetSize__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(a));
  }

  public vtkRenderWindow.vtkRenderWindow GetRenderWindow() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetRenderWindow(cast(void*)swigCPtr);
    vtkRenderWindow.vtkRenderWindow ret = (cPtr is null) ? null : new vtkRenderWindow.vtkRenderWindow(cPtr, false);
    return ret;
  }

  public vtkRenderer.vtkRenderer GetRenderer() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetRenderer(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }

  public vtkImageActor.vtkImageActor GetImageActor() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetImageActor(cast(void*)swigCPtr);
    vtkImageActor.vtkImageActor ret = (cPtr is null) ? null : new vtkImageActor.vtkImageActor(cPtr, false);
    return ret;
  }

  public vtkImageMapToWindowLevelColors.vtkImageMapToWindowLevelColors GetWindowLevel() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetWindowLevel(cast(void*)swigCPtr);
    vtkImageMapToWindowLevelColors.vtkImageMapToWindowLevelColors ret = (cPtr is null) ? null : new vtkImageMapToWindowLevelColors.vtkImageMapToWindowLevelColors(cPtr, false);
    return ret;
  }

  public vtkInteractorStyleImage.vtkInteractorStyleImage GetInteractorStyle() {
    void* cPtr = vtkd_im.vtkImageViewer2_GetInteractorStyle(cast(void*)swigCPtr);
    vtkInteractorStyleImage.vtkInteractorStyleImage ret = (cPtr is null) ? null : new vtkInteractorStyleImage.vtkInteractorStyleImage(cPtr, false);
    return ret;
  }

  public void SetRenderWindow(vtkRenderWindow.vtkRenderWindow arg) {
    vtkd_im.vtkImageViewer2_SetRenderWindow(cast(void*)swigCPtr, vtkRenderWindow.vtkRenderWindow.swigGetCPtr(arg));
  }

  public void SetRenderer(vtkRenderer.vtkRenderer arg) {
    vtkd_im.vtkImageViewer2_SetRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(arg));
  }

  public void SetupInteractor(vtkRenderWindowInteractor.vtkRenderWindowInteractor arg0) {
    vtkd_im.vtkImageViewer2_SetupInteractor(cast(void*)swigCPtr, vtkRenderWindowInteractor.vtkRenderWindowInteractor.swigGetCPtr(arg0));
  }

  public void SetOffScreenRendering(int arg0) {
    vtkd_im.vtkImageViewer2_SetOffScreenRendering(cast(void*)swigCPtr, arg0);
  }

  public int GetOffScreenRendering() {
    auto ret = vtkd_im.vtkImageViewer2_GetOffScreenRendering(cast(void*)swigCPtr);
    return ret;
  }

  public void OffScreenRenderingOn() {
    vtkd_im.vtkImageViewer2_OffScreenRenderingOn(cast(void*)swigCPtr);
  }

  public void OffScreenRenderingOff() {
    vtkd_im.vtkImageViewer2_OffScreenRenderingOff(cast(void*)swigCPtr);
  }
}
