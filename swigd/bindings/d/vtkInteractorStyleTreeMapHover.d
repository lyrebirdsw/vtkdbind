/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkInteractorStyleTreeMapHover;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTreeMapLayout;
static import vtkTreeMapToPolyData;
static import vtkInteractorStyleImage;

class vtkInteractorStyleTreeMapHover : vtkInteractorStyleImage.vtkInteractorStyleImage {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkInteractorStyleTreeMapHover_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkInteractorStyleTreeMapHover obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkInteractorStyleTreeMapHover New() {
    void* cPtr = vtkd_im.vtkInteractorStyleTreeMapHover_New();
    vtkInteractorStyleTreeMapHover ret = (cPtr is null) ? null : new vtkInteractorStyleTreeMapHover(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkInteractorStyleTreeMapHover_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkInteractorStyleTreeMapHover SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkInteractorStyleTreeMapHover_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkInteractorStyleTreeMapHover ret = (cPtr is null) ? null : new vtkInteractorStyleTreeMapHover(cPtr, false);
    return ret;
  }

  public vtkInteractorStyleTreeMapHover NewInstance() const {
    void* cPtr = vtkd_im.vtkInteractorStyleTreeMapHover_NewInstance(cast(void*)swigCPtr);
    vtkInteractorStyleTreeMapHover ret = (cPtr is null) ? null : new vtkInteractorStyleTreeMapHover(cPtr, false);
    return ret;
  }

  alias vtkInteractorStyleImage.vtkInteractorStyleImage.NewInstance NewInstance;

  public void SetLayout(vtkTreeMapLayout.vtkTreeMapLayout layout) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetLayout(cast(void*)swigCPtr, vtkTreeMapLayout.vtkTreeMapLayout.swigGetCPtr(layout));
  }

  public vtkTreeMapLayout.vtkTreeMapLayout GetLayout() {
    void* cPtr = vtkd_im.vtkInteractorStyleTreeMapHover_GetLayout(cast(void*)swigCPtr);
    vtkTreeMapLayout.vtkTreeMapLayout ret = (cPtr is null) ? null : new vtkTreeMapLayout.vtkTreeMapLayout(cPtr, false);
    return ret;
  }

  public void SetTreeMapToPolyData(vtkTreeMapToPolyData.vtkTreeMapToPolyData filter) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetTreeMapToPolyData(cast(void*)swigCPtr, vtkTreeMapToPolyData.vtkTreeMapToPolyData.swigGetCPtr(filter));
  }

  public vtkTreeMapToPolyData.vtkTreeMapToPolyData GetTreeMapToPolyData() {
    void* cPtr = vtkd_im.vtkInteractorStyleTreeMapHover_GetTreeMapToPolyData(cast(void*)swigCPtr);
    vtkTreeMapToPolyData.vtkTreeMapToPolyData ret = (cPtr is null) ? null : new vtkTreeMapToPolyData.vtkTreeMapToPolyData(cPtr, false);
    return ret;
  }

  public void SetLabelField(string _arg) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetLabelField(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelField() {
    string ret = std.conv.to!string(vtkd_im.vtkInteractorStyleTreeMapHover_GetLabelField(cast(void*)swigCPtr));
    return ret;
  }

  public void HighLightItem(long id) {
    vtkd_im.vtkInteractorStyleTreeMapHover_HighLightItem(cast(void*)swigCPtr, id);
  }

  public void HighLightCurrentSelectedItem() {
    vtkd_im.vtkInteractorStyleTreeMapHover_HighLightCurrentSelectedItem(cast(void*)swigCPtr);
  }

  public void SetHighLightColor(double r, double g, double b) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetHighLightColor(cast(void*)swigCPtr, r, g, b);
  }

  public void SetSelectionLightColor(double r, double g, double b) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetSelectionLightColor(cast(void*)swigCPtr, r, g, b);
  }

  public void SetHighLightWidth(double lw) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetHighLightWidth(cast(void*)swigCPtr, lw);
  }

  public double GetHighLightWidth() {
    auto ret = vtkd_im.vtkInteractorStyleTreeMapHover_GetHighLightWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSelectionWidth(double lw) {
    vtkd_im.vtkInteractorStyleTreeMapHover_SetSelectionWidth(cast(void*)swigCPtr, lw);
  }

  public double GetSelectionWidth() {
    auto ret = vtkd_im.vtkInteractorStyleTreeMapHover_GetSelectionWidth(cast(void*)swigCPtr);
    return ret;
  }
}
