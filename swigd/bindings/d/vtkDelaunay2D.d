/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDelaunay2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkAlgorithmOutput;
static import vtkAbstractTransform;
static import vtkPolyDataAlgorithm;

class vtkDelaunay2D : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDelaunay2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDelaunay2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDelaunay2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDelaunay2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDelaunay2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDelaunay2D ret = (cPtr is null) ? null : new vtkDelaunay2D(cPtr, false);
    return ret;
  }

  public vtkDelaunay2D NewInstance() const {
    void* cPtr = vtkd_im.vtkDelaunay2D_NewInstance(cast(void*)swigCPtr);
    vtkDelaunay2D ret = (cPtr is null) ? null : new vtkDelaunay2D(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkDelaunay2D New() {
    void* cPtr = vtkd_im.vtkDelaunay2D_New();
    vtkDelaunay2D ret = (cPtr is null) ? null : new vtkDelaunay2D(cPtr, false);
    return ret;
  }

  public void SetSourceData(vtkPolyData.vtkPolyData arg0) {
    vtkd_im.vtkDelaunay2D_SetSourceData(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(arg0));
  }

  public void SetSourceConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkDelaunay2D_SetSourceConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public vtkPolyData.vtkPolyData GetSource() {
    void* cPtr = vtkd_im.vtkDelaunay2D_GetSource(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetAlpha(double _arg) {
    vtkd_im.vtkDelaunay2D_SetAlpha(cast(void*)swigCPtr, _arg);
  }

  public double GetAlphaMinValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetAlphaMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAlphaMaxValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetAlphaMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAlpha() {
    auto ret = vtkd_im.vtkDelaunay2D_GetAlpha(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTolerance(double _arg) {
    vtkd_im.vtkDelaunay2D_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public double GetToleranceMinValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetToleranceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetToleranceMaxValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetToleranceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTolerance() {
    auto ret = vtkd_im.vtkDelaunay2D_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOffset(double _arg) {
    vtkd_im.vtkDelaunay2D_SetOffset(cast(void*)swigCPtr, _arg);
  }

  public double GetOffsetMinValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetOffsetMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOffsetMaxValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetOffsetMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOffset() {
    auto ret = vtkd_im.vtkDelaunay2D_GetOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBoundingTriangulation(int _arg) {
    vtkd_im.vtkDelaunay2D_SetBoundingTriangulation(cast(void*)swigCPtr, _arg);
  }

  public int GetBoundingTriangulation() {
    auto ret = vtkd_im.vtkDelaunay2D_GetBoundingTriangulation(cast(void*)swigCPtr);
    return ret;
  }

  public void BoundingTriangulationOn() {
    vtkd_im.vtkDelaunay2D_BoundingTriangulationOn(cast(void*)swigCPtr);
  }

  public void BoundingTriangulationOff() {
    vtkd_im.vtkDelaunay2D_BoundingTriangulationOff(cast(void*)swigCPtr);
  }

  public void SetTransform(vtkAbstractTransform.vtkAbstractTransform arg0) {
    vtkd_im.vtkDelaunay2D_SetTransform(cast(void*)swigCPtr, vtkAbstractTransform.vtkAbstractTransform.swigGetCPtr(arg0));
  }

  public vtkAbstractTransform.vtkAbstractTransform GetTransform() {
    void* cPtr = vtkd_im.vtkDelaunay2D_GetTransform(cast(void*)swigCPtr);
    vtkAbstractTransform.vtkAbstractTransform ret = (cPtr is null) ? null : new vtkAbstractTransform.vtkAbstractTransform(cPtr, false);
    return ret;
  }

  public void SetProjectionPlaneMode(int _arg) {
    vtkd_im.vtkDelaunay2D_SetProjectionPlaneMode(cast(void*)swigCPtr, _arg);
  }

  public int GetProjectionPlaneModeMinValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetProjectionPlaneModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionPlaneModeMaxValue() {
    auto ret = vtkd_im.vtkDelaunay2D_GetProjectionPlaneModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionPlaneMode() {
    auto ret = vtkd_im.vtkDelaunay2D_GetProjectionPlaneMode(cast(void*)swigCPtr);
    return ret;
  }
}
