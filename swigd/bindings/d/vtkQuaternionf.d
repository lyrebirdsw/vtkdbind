/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionf;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkQuaternionFloatT;

class vtkQuaternionf : vtkQuaternionFloatT.vtkQuaternionFloatT {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionf_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionf obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionf(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionf__SWIG_0(), true);
  }

  public this(float w, float x, float y, float z) {
    this(vtkd_im.new_vtkQuaternionf__SWIG_1(w, x, y, z), true);
  }

  public this(float scalar) {
    this(vtkd_im.new_vtkQuaternionf__SWIG_2(scalar), true);
  }

  public this(float* init) {
    this(vtkd_im.new_vtkQuaternionf__SWIG_3(cast(void*)init), true);
  }

  public vtkQuaternionf Identity() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_Identity(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.Identity Identity;

  public vtkQuaternionf Normalized() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.Normalized Normalized;

  public vtkQuaternionf Conjugated() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.Conjugated Conjugated;

  public vtkQuaternionf Inverse() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.Inverse Inverse;

  public vtkQuaternionf UnitLog() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.UnitLog UnitLog;

  public vtkQuaternionf UnitExp() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.UnitExp UnitExp;

  public vtkQuaternionf NormalizedWithAngleInDegrees() const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.NormalizedWithAngleInDegrees NormalizedWithAngleInDegrees;

  public vtkQuaternionf Slerp(float t, vtkQuaternionf q) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_Slerp(cast(void*)swigCPtr, t, vtkQuaternionf.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.Slerp Slerp;

  public vtkQuaternionf InnerPoint(vtkQuaternionf q1, vtkQuaternionf q2) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_InnerPoint(cast(void*)swigCPtr, vtkQuaternionf.swigGetCPtr(q1), vtkQuaternionf.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.InnerPoint InnerPoint;

  public vtkQuaternionf swigOpAdd(vtkQuaternionf q) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionf.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.swigOpAdd swigOpAdd;

  public vtkQuaternionf swigOpSub(vtkQuaternionf q) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpSub(cast(void*)swigCPtr, vtkQuaternionf.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.swigOpSub swigOpSub;

  public vtkQuaternionf swigOpMul(vtkQuaternionf q) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionf.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionf swigOpMul(float scalar) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.swigOpMul swigOpMul;

  public vtkQuaternionf swigOpDiv(vtkQuaternionf q) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionf.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionf swigOpDiv(float scalar) const {
    vtkQuaternionf ret = new vtkQuaternionf(vtkd_im.vtkQuaternionf_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  alias vtkQuaternionFloatT.vtkQuaternionFloatT.swigOpDiv swigOpDiv;
}
