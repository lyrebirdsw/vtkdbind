/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageCast;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkThreadedImageAlgorithm;

class vtkImageCast : vtkThreadedImageAlgorithm.vtkThreadedImageAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageCast_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageCast obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkImageCast New() {
    void* cPtr = vtkd_im.vtkImageCast_New();
    vtkImageCast ret = (cPtr is null) ? null : new vtkImageCast(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageCast_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageCast SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageCast_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageCast ret = (cPtr is null) ? null : new vtkImageCast(cPtr, false);
    return ret;
  }

  public vtkImageCast NewInstance() const {
    void* cPtr = vtkd_im.vtkImageCast_NewInstance(cast(void*)swigCPtr);
    vtkImageCast ret = (cPtr is null) ? null : new vtkImageCast(cPtr, false);
    return ret;
  }

  alias vtkThreadedImageAlgorithm.vtkThreadedImageAlgorithm.NewInstance NewInstance;

  public void SetOutputScalarType(int _arg) {
    vtkd_im.vtkImageCast_SetOutputScalarType(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputScalarType() {
    auto ret = vtkd_im.vtkImageCast_GetOutputScalarType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputScalarTypeToFloat() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToFloat(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToDouble() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToDouble(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToInt() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToInt(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedInt() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToUnsignedInt(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToLong() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToLong(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedLong() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToUnsignedLong(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToShort() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToShort(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedShort() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToUnsignedShort(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToUnsignedChar() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToUnsignedChar(cast(void*)swigCPtr);
  }

  public void SetOutputScalarTypeToChar() {
    vtkd_im.vtkImageCast_SetOutputScalarTypeToChar(cast(void*)swigCPtr);
  }

  public void SetClampOverflow(int _arg) {
    vtkd_im.vtkImageCast_SetClampOverflow(cast(void*)swigCPtr, _arg);
  }

  public int GetClampOverflow() {
    auto ret = vtkd_im.vtkImageCast_GetClampOverflow(cast(void*)swigCPtr);
    return ret;
  }

  public void ClampOverflowOn() {
    vtkd_im.vtkImageCast_ClampOverflowOn(cast(void*)swigCPtr);
  }

  public void ClampOverflowOff() {
    vtkd_im.vtkImageCast_ClampOverflowOff(cast(void*)swigCPtr);
  }
}
