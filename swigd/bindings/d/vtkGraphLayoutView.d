/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGraphLayoutView;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGraphLayoutStrategy;
static import vtkEdgeLayoutStrategy;
static import vtkRenderView;

class vtkGraphLayoutView : vtkRenderView.vtkRenderView {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGraphLayoutView_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGraphLayoutView obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGraphLayoutView New() {
    void* cPtr = vtkd_im.vtkGraphLayoutView_New();
    vtkGraphLayoutView ret = (cPtr is null) ? null : new vtkGraphLayoutView(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGraphLayoutView_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGraphLayoutView SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGraphLayoutView_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGraphLayoutView ret = (cPtr is null) ? null : new vtkGraphLayoutView(cPtr, false);
    return ret;
  }

  public vtkGraphLayoutView NewInstance() const {
    void* cPtr = vtkd_im.vtkGraphLayoutView_NewInstance(cast(void*)swigCPtr);
    vtkGraphLayoutView ret = (cPtr is null) ? null : new vtkGraphLayoutView(cPtr, false);
    return ret;
  }

  alias vtkRenderView.vtkRenderView.NewInstance NewInstance;

  public void SetVertexLabelArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetVertexLabelArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetVertexLabelArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetVertexLabelArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetEdgeLabelArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetEdgeLabelArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetEdgeLabelArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetEdgeLabelArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetVertexLabelVisibility(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetVertexLabelVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetVertexLabelVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetVertexLabelVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void VertexLabelVisibilityOn() {
    vtkd_im.vtkGraphLayoutView_VertexLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void VertexLabelVisibilityOff() {
    vtkd_im.vtkGraphLayoutView_VertexLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetHideVertexLabelsOnInteraction(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetHideVertexLabelsOnInteraction(cast(void*)swigCPtr, vis);
  }

  public bool GetHideVertexLabelsOnInteraction() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetHideVertexLabelsOnInteraction(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void HideVertexLabelsOnInteractionOn() {
    vtkd_im.vtkGraphLayoutView_HideVertexLabelsOnInteractionOn(cast(void*)swigCPtr);
  }

  public void HideVertexLabelsOnInteractionOff() {
    vtkd_im.vtkGraphLayoutView_HideVertexLabelsOnInteractionOff(cast(void*)swigCPtr);
  }

  public void SetEdgeVisibility(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEdgeVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetEdgeVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetEdgeVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void EdgeVisibilityOn() {
    vtkd_im.vtkGraphLayoutView_EdgeVisibilityOn(cast(void*)swigCPtr);
  }

  public void EdgeVisibilityOff() {
    vtkd_im.vtkGraphLayoutView_EdgeVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetEdgeLabelVisibility(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEdgeLabelVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetEdgeLabelVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetEdgeLabelVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void EdgeLabelVisibilityOn() {
    vtkd_im.vtkGraphLayoutView_EdgeLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void EdgeLabelVisibilityOff() {
    vtkd_im.vtkGraphLayoutView_EdgeLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetHideEdgeLabelsOnInteraction(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetHideEdgeLabelsOnInteraction(cast(void*)swigCPtr, vis);
  }

  public bool GetHideEdgeLabelsOnInteraction() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetHideEdgeLabelsOnInteraction(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void HideEdgeLabelsOnInteractionOn() {
    vtkd_im.vtkGraphLayoutView_HideEdgeLabelsOnInteractionOn(cast(void*)swigCPtr);
  }

  public void HideEdgeLabelsOnInteractionOff() {
    vtkd_im.vtkGraphLayoutView_HideEdgeLabelsOnInteractionOff(cast(void*)swigCPtr);
  }

  public void SetVertexColorArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetVertexColorArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetVertexColorArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetVertexColorArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetColorVertices(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetColorVertices(cast(void*)swigCPtr, vis);
  }

  public bool GetColorVertices() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetColorVertices(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ColorVerticesOn() {
    vtkd_im.vtkGraphLayoutView_ColorVerticesOn(cast(void*)swigCPtr);
  }

  public void ColorVerticesOff() {
    vtkd_im.vtkGraphLayoutView_ColorVerticesOff(cast(void*)swigCPtr);
  }

  public void SetEdgeColorArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetEdgeColorArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetEdgeColorArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetEdgeColorArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetColorEdges(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetColorEdges(cast(void*)swigCPtr, vis);
  }

  public bool GetColorEdges() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetColorEdges(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ColorEdgesOn() {
    vtkd_im.vtkGraphLayoutView_ColorEdgesOn(cast(void*)swigCPtr);
  }

  public void ColorEdgesOff() {
    vtkd_im.vtkGraphLayoutView_ColorEdgesOff(cast(void*)swigCPtr);
  }

  public void SetEdgeSelection(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEdgeSelection(cast(void*)swigCPtr, vis);
  }

  public bool GetEdgeSelection() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetEdgeSelection(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void EdgeSelectionOn() {
    vtkd_im.vtkGraphLayoutView_EdgeSelectionOn(cast(void*)swigCPtr);
  }

  public void EdgeSelectionOff() {
    vtkd_im.vtkGraphLayoutView_EdgeSelectionOff(cast(void*)swigCPtr);
  }

  public void SetEnabledEdgesArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetEnabledEdgesArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetEnabledEdgesArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetEnabledEdgesArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetEnableEdgesByArray(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEnableEdgesByArray(cast(void*)swigCPtr, vis);
  }

  public int GetEnableEdgesByArray() {
    auto ret = vtkd_im.vtkGraphLayoutView_GetEnableEdgesByArray(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEnabledVerticesArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetEnabledVerticesArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetEnabledVerticesArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetEnabledVerticesArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetEnableVerticesByArray(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEnableVerticesByArray(cast(void*)swigCPtr, vis);
  }

  public int GetEnableVerticesByArray() {
    auto ret = vtkd_im.vtkGraphLayoutView_GetEnableVerticesByArray(cast(void*)swigCPtr);
    return ret;
  }

  public void SetScalingArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetScalingArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetScalingArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetScalingArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetScaledGlyphs(bool arg) {
    vtkd_im.vtkGraphLayoutView_SetScaledGlyphs(cast(void*)swigCPtr, arg);
  }

  public bool GetScaledGlyphs() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetScaledGlyphs(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ScaledGlyphsOn() {
    vtkd_im.vtkGraphLayoutView_ScaledGlyphsOn(cast(void*)swigCPtr);
  }

  public void ScaledGlyphsOff() {
    vtkd_im.vtkGraphLayoutView_ScaledGlyphsOff(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategy(string name) {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategy__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void SetLayoutStrategyToRandom() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToRandom(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToForceDirected() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToForceDirected(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToSimple2D() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToSimple2D(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToClustering2D() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToClustering2D(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToCommunity2D() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToCommunity2D(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToFast2D() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToFast2D(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToPassThrough() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToPassThrough(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToCircular() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToCircular(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToTree() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToTree(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToCosmicTree() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToCosmicTree(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToCone() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToCone(cast(void*)swigCPtr);
  }

  public void SetLayoutStrategyToSpanTree() {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategyToSpanTree(cast(void*)swigCPtr);
  }

  public string GetLayoutStrategyName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetLayoutStrategyName(cast(void*)swigCPtr));
    return ret;
  }

  public vtkGraphLayoutStrategy.vtkGraphLayoutStrategy GetLayoutStrategy() {
    void* cPtr = vtkd_im.vtkGraphLayoutView_GetLayoutStrategy(cast(void*)swigCPtr);
    vtkGraphLayoutStrategy.vtkGraphLayoutStrategy ret = (cPtr is null) ? null : new vtkGraphLayoutStrategy.vtkGraphLayoutStrategy(cPtr, false);
    return ret;
  }

  public void SetLayoutStrategy(vtkGraphLayoutStrategy.vtkGraphLayoutStrategy s) {
    vtkd_im.vtkGraphLayoutView_SetLayoutStrategy__SWIG_1(cast(void*)swigCPtr, vtkGraphLayoutStrategy.vtkGraphLayoutStrategy.swigGetCPtr(s));
  }

  public void SetEdgeLayoutStrategy(string name) {
    vtkd_im.vtkGraphLayoutView_SetEdgeLayoutStrategy__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void SetEdgeLayoutStrategyToArcParallel() {
    vtkd_im.vtkGraphLayoutView_SetEdgeLayoutStrategyToArcParallel(cast(void*)swigCPtr);
  }

  public void SetEdgeLayoutStrategyToPassThrough() {
    vtkd_im.vtkGraphLayoutView_SetEdgeLayoutStrategyToPassThrough(cast(void*)swigCPtr);
  }

  public string GetEdgeLayoutStrategyName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetEdgeLayoutStrategyName(cast(void*)swigCPtr));
    return ret;
  }

  public vtkEdgeLayoutStrategy.vtkEdgeLayoutStrategy GetEdgeLayoutStrategy() {
    void* cPtr = vtkd_im.vtkGraphLayoutView_GetEdgeLayoutStrategy(cast(void*)swigCPtr);
    vtkEdgeLayoutStrategy.vtkEdgeLayoutStrategy ret = (cPtr is null) ? null : new vtkEdgeLayoutStrategy.vtkEdgeLayoutStrategy(cPtr, false);
    return ret;
  }

  public void SetEdgeLayoutStrategy(vtkEdgeLayoutStrategy.vtkEdgeLayoutStrategy s) {
    vtkd_im.vtkGraphLayoutView_SetEdgeLayoutStrategy__SWIG_1(cast(void*)swigCPtr, vtkEdgeLayoutStrategy.vtkEdgeLayoutStrategy.swigGetCPtr(s));
  }

  public void AddIconType(string type, int index) {
    vtkd_im.vtkGraphLayoutView_AddIconType(cast(void*)swigCPtr, (type ? std.string.toStringz(type) : null), index);
  }

  public void ClearIconTypes() {
    vtkd_im.vtkGraphLayoutView_ClearIconTypes(cast(void*)swigCPtr);
  }

  public void SetIconAlignment(int alignment) {
    vtkd_im.vtkGraphLayoutView_SetIconAlignment(cast(void*)swigCPtr, alignment);
  }

  public void SetIconVisibility(bool b) {
    vtkd_im.vtkGraphLayoutView_SetIconVisibility(cast(void*)swigCPtr, b);
  }

  public bool GetIconVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetIconVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void IconVisibilityOn() {
    vtkd_im.vtkGraphLayoutView_IconVisibilityOn(cast(void*)swigCPtr);
  }

  public void IconVisibilityOff() {
    vtkd_im.vtkGraphLayoutView_IconVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetIconArrayName(string name) {
    vtkd_im.vtkGraphLayoutView_SetIconArrayName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetIconArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkGraphLayoutView_GetIconArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetGlyphType(int type) {
    vtkd_im.vtkGraphLayoutView_SetGlyphType(cast(void*)swigCPtr, type);
  }

  public int GetGlyphType() {
    auto ret = vtkd_im.vtkGraphLayoutView_GetGlyphType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVertexLabelFontSize(int size) {
    vtkd_im.vtkGraphLayoutView_SetVertexLabelFontSize(cast(void*)swigCPtr, size);
  }

  public int GetVertexLabelFontSize() {
    auto ret = vtkd_im.vtkGraphLayoutView_GetVertexLabelFontSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEdgeLabelFontSize(int size) {
    vtkd_im.vtkGraphLayoutView_SetEdgeLabelFontSize(cast(void*)swigCPtr, size);
  }

  public int GetEdgeLabelFontSize() {
    auto ret = vtkd_im.vtkGraphLayoutView_GetEdgeLabelFontSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEdgeScalarBarVisibility(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetEdgeScalarBarVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetEdgeScalarBarVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetEdgeScalarBarVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetVertexScalarBarVisibility(bool vis) {
    vtkd_im.vtkGraphLayoutView_SetVertexScalarBarVisibility(cast(void*)swigCPtr, vis);
  }

  public bool GetVertexScalarBarVisibility() {
    bool ret = vtkd_im.vtkGraphLayoutView_GetVertexScalarBarVisibility(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void ZoomToSelection() {
    vtkd_im.vtkGraphLayoutView_ZoomToSelection(cast(void*)swigCPtr);
  }

  public int IsLayoutComplete() {
    auto ret = vtkd_im.vtkGraphLayoutView_IsLayoutComplete(cast(void*)swigCPtr);
    return ret;
  }

  public void UpdateLayout() {
    vtkd_im.vtkGraphLayoutView_UpdateLayout(cast(void*)swigCPtr);
  }
}
