/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkProgrammableSource;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkStructuredPoints;
static import vtkStructuredGrid;
static import vtkUnstructuredGrid;
static import vtkRectilinearGrid;
static import vtkDataSetAlgorithm;

class vtkProgrammableSource : vtkDataSetAlgorithm.vtkDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkProgrammableSource_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkProgrammableSource obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkProgrammableSource New() {
    void* cPtr = vtkd_im.vtkProgrammableSource_New();
    vtkProgrammableSource ret = (cPtr is null) ? null : new vtkProgrammableSource(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkProgrammableSource_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkProgrammableSource SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkProgrammableSource_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkProgrammableSource ret = (cPtr is null) ? null : new vtkProgrammableSource(cPtr, false);
    return ret;
  }

  public vtkProgrammableSource NewInstance() const {
    void* cPtr = vtkd_im.vtkProgrammableSource_NewInstance(cast(void*)swigCPtr);
    vtkProgrammableSource ret = (cPtr is null) ? null : new vtkProgrammableSource(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.NewInstance NewInstance;

  public void SetExecuteMethod(vtkd_im.SwigExternC!(void function(void*)) f, void* arg) {
    vtkd_im.vtkProgrammableSource_SetExecuteMethod(cast(void*)swigCPtr, cast(void*)f, cast(void*)arg);
  }

  public void SetExecuteMethodArgDelete(vtkd_im.SwigExternC!(void function(void*)) f) {
    vtkd_im.vtkProgrammableSource_SetExecuteMethodArgDelete(cast(void*)swigCPtr, cast(void*)f);
  }

  public void SetRequestInformationMethod(vtkd_im.SwigExternC!(void function(void*)) f) {
    vtkd_im.vtkProgrammableSource_SetRequestInformationMethod(cast(void*)swigCPtr, cast(void*)f);
  }

  public vtkPolyData.vtkPolyData GetPolyDataOutput() {
    void* cPtr = vtkd_im.vtkProgrammableSource_GetPolyDataOutput(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.GetPolyDataOutput GetPolyDataOutput;

  public vtkStructuredPoints.vtkStructuredPoints GetStructuredPointsOutput() {
    void* cPtr = vtkd_im.vtkProgrammableSource_GetStructuredPointsOutput(cast(void*)swigCPtr);
    vtkStructuredPoints.vtkStructuredPoints ret = (cPtr is null) ? null : new vtkStructuredPoints.vtkStructuredPoints(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.GetStructuredPointsOutput GetStructuredPointsOutput;

  public vtkStructuredGrid.vtkStructuredGrid GetStructuredGridOutput() {
    void* cPtr = vtkd_im.vtkProgrammableSource_GetStructuredGridOutput(cast(void*)swigCPtr);
    vtkStructuredGrid.vtkStructuredGrid ret = (cPtr is null) ? null : new vtkStructuredGrid.vtkStructuredGrid(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.GetStructuredGridOutput GetStructuredGridOutput;

  public vtkUnstructuredGrid.vtkUnstructuredGrid GetUnstructuredGridOutput() {
    void* cPtr = vtkd_im.vtkProgrammableSource_GetUnstructuredGridOutput(cast(void*)swigCPtr);
    vtkUnstructuredGrid.vtkUnstructuredGrid ret = (cPtr is null) ? null : new vtkUnstructuredGrid.vtkUnstructuredGrid(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.GetUnstructuredGridOutput GetUnstructuredGridOutput;

  public vtkRectilinearGrid.vtkRectilinearGrid GetRectilinearGridOutput() {
    void* cPtr = vtkd_im.vtkProgrammableSource_GetRectilinearGridOutput(cast(void*)swigCPtr);
    vtkRectilinearGrid.vtkRectilinearGrid ret = (cPtr is null) ? null : new vtkRectilinearGrid.vtkRectilinearGrid(cPtr, false);
    return ret;
  }

  alias vtkDataSetAlgorithm.vtkDataSetAlgorithm.GetRectilinearGridOutput GetRectilinearGridOutput;
}
