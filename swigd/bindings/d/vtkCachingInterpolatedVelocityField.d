/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCachingInterpolatedVelocityField;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSet;
static import vtkAbstractCellLocator;
static import SWIGTYPE_p_double;
static import vtkFunctionSet;

class vtkCachingInterpolatedVelocityField : vtkFunctionSet.vtkFunctionSet {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCachingInterpolatedVelocityField_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCachingInterpolatedVelocityField obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCachingInterpolatedVelocityField SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCachingInterpolatedVelocityField_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCachingInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCachingInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public vtkCachingInterpolatedVelocityField NewInstance() const {
    void* cPtr = vtkd_im.vtkCachingInterpolatedVelocityField_NewInstance(cast(void*)swigCPtr);
    vtkCachingInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCachingInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  alias vtkFunctionSet.vtkFunctionSet.NewInstance NewInstance;

  public static vtkCachingInterpolatedVelocityField New() {
    void* cPtr = vtkd_im.vtkCachingInterpolatedVelocityField_New();
    vtkCachingInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCachingInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public int InsideTest(double* x) {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_InsideTest(cast(void*)swigCPtr, cast(void*)x);
    return ret;
  }

  public void SetDataSet(int I, vtkDataSet.vtkDataSet dataset, bool staticdataset, vtkAbstractCellLocator.vtkAbstractCellLocator locator) {
    vtkd_im.vtkCachingInterpolatedVelocityField_SetDataSet(cast(void*)swigCPtr, I, vtkDataSet.vtkDataSet.swigGetCPtr(dataset), staticdataset, vtkAbstractCellLocator.vtkAbstractCellLocator.swigGetCPtr(locator));
  }

  public string GetVectorsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkCachingInterpolatedVelocityField_GetVectorsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectVectors(string fieldName) {
    vtkd_im.vtkCachingInterpolatedVelocityField_SelectVectors(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }

  public void SetLastCellInfo(long c, int datasetindex) {
    vtkd_im.vtkCachingInterpolatedVelocityField_SetLastCellInfo(cast(void*)swigCPtr, c, datasetindex);
  }

  public void ClearLastCellInfo() {
    vtkd_im.vtkCachingInterpolatedVelocityField_ClearLastCellInfo(cast(void*)swigCPtr);
  }

  public int GetLastWeights(double* w) {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_GetLastWeights(cast(void*)swigCPtr, cast(void*)w);
    return ret;
  }

  public int GetLastLocalCoordinates(SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_GetLastLocalCoordinates(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
    return ret;
  }

  public int GetCellCacheHit() {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_GetCellCacheHit(cast(void*)swigCPtr);
    return ret;
  }

  public int GetDataSetCacheHit() {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_GetDataSetCacheHit(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCacheMiss() {
    auto ret = vtkd_im.vtkCachingInterpolatedVelocityField_GetCacheMiss(cast(void*)swigCPtr);
    return ret;
  }
}
