/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPicker;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkAbstractMapper3D;
static import vtkDataSet;
static import vtkProp3DCollection;
static import vtkActorCollection;
static import vtkPoints;
static import vtkRenderer;
static import vtkAbstractPropPicker;

class vtkPicker : vtkAbstractPropPicker.vtkAbstractPropPicker {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPicker_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPicker obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkPicker New() {
    void* cPtr = vtkd_im.vtkPicker_New();
    vtkPicker ret = (cPtr is null) ? null : new vtkPicker(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPicker_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPicker SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPicker_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPicker ret = (cPtr is null) ? null : new vtkPicker(cPtr, false);
    return ret;
  }

  public vtkPicker NewInstance() const {
    void* cPtr = vtkd_im.vtkPicker_NewInstance(cast(void*)swigCPtr);
    vtkPicker ret = (cPtr is null) ? null : new vtkPicker(cPtr, false);
    return ret;
  }

  alias vtkAbstractPropPicker.vtkAbstractPropPicker.NewInstance NewInstance;

  public void SetTolerance(double _arg) {
    vtkd_im.vtkPicker_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public double GetTolerance() {
    auto ret = vtkd_im.vtkPicker_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public double* GetMapperPosition() {
    auto ret = cast(double*)vtkd_im.vtkPicker_GetMapperPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetMapperPosition(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkPicker_GetMapperPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public vtkAbstractMapper3D.vtkAbstractMapper3D GetMapper() {
    void* cPtr = vtkd_im.vtkPicker_GetMapper(cast(void*)swigCPtr);
    vtkAbstractMapper3D.vtkAbstractMapper3D ret = (cPtr is null) ? null : new vtkAbstractMapper3D.vtkAbstractMapper3D(cPtr, false);
    return ret;
  }

  public vtkDataSet.vtkDataSet GetDataSet() {
    void* cPtr = vtkd_im.vtkPicker_GetDataSet(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public vtkProp3DCollection.vtkProp3DCollection GetProp3Ds() {
    void* cPtr = vtkd_im.vtkPicker_GetProp3Ds(cast(void*)swigCPtr);
    vtkProp3DCollection.vtkProp3DCollection ret = (cPtr is null) ? null : new vtkProp3DCollection.vtkProp3DCollection(cPtr, false);
    return ret;
  }

  public vtkActorCollection.vtkActorCollection GetActors() {
    void* cPtr = vtkd_im.vtkPicker_GetActors(cast(void*)swigCPtr);
    vtkActorCollection.vtkActorCollection ret = (cPtr is null) ? null : new vtkActorCollection.vtkActorCollection(cPtr, false);
    return ret;
  }

  public vtkPoints.vtkPoints GetPickedPositions() {
    void* cPtr = vtkd_im.vtkPicker_GetPickedPositions(cast(void*)swigCPtr);
    vtkPoints.vtkPoints ret = (cPtr is null) ? null : new vtkPoints.vtkPoints(cPtr, false);
    return ret;
  }

  public override int Pick(double selectionX, double selectionY, double selectionZ, vtkRenderer.vtkRenderer renderer) {
    auto ret = vtkd_im.vtkPicker_Pick__SWIG_0(cast(void*)swigCPtr, selectionX, selectionY, selectionZ, vtkRenderer.vtkRenderer.swigGetCPtr(renderer));
    return ret;
  }

  public int Pick(SWIGTYPE_p_double.SWIGTYPE_p_double selectionPt, vtkRenderer.vtkRenderer ren) {
    auto ret = vtkd_im.vtkPicker_Pick__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(selectionPt), vtkRenderer.vtkRenderer.swigGetCPtr(ren));
    return ret;
  }
}
