/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkProp;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPropCollection;
static import vtkAssemblyPath;
static import vtkMatrix4x4;
static import vtkInformation;
static import vtkObject;

class vtkProp : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkProp_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkProp obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkProp_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkProp SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkProp_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkProp ret = (cPtr is null) ? null : new vtkProp(cPtr, false);
    return ret;
  }

  public vtkProp NewInstance() const {
    void* cPtr = vtkd_im.vtkProp_NewInstance(cast(void*)swigCPtr);
    vtkProp ret = (cPtr is null) ? null : new vtkProp(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void GetActors(vtkPropCollection.vtkPropCollection arg0) {
    vtkd_im.vtkProp_GetActors(cast(void*)swigCPtr, vtkPropCollection.vtkPropCollection.swigGetCPtr(arg0));
  }

  public void GetActors2D(vtkPropCollection.vtkPropCollection arg0) {
    vtkd_im.vtkProp_GetActors2D(cast(void*)swigCPtr, vtkPropCollection.vtkPropCollection.swigGetCPtr(arg0));
  }

  public void GetVolumes(vtkPropCollection.vtkPropCollection arg0) {
    vtkd_im.vtkProp_GetVolumes(cast(void*)swigCPtr, vtkPropCollection.vtkPropCollection.swigGetCPtr(arg0));
  }

  public void SetVisibility(int _arg) {
    vtkd_im.vtkProp_SetVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetVisibility() {
    auto ret = vtkd_im.vtkProp_GetVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void VisibilityOn() {
    vtkd_im.vtkProp_VisibilityOn(cast(void*)swigCPtr);
  }

  public void VisibilityOff() {
    vtkd_im.vtkProp_VisibilityOff(cast(void*)swigCPtr);
  }

  public void SetPickable(int _arg) {
    vtkd_im.vtkProp_SetPickable(cast(void*)swigCPtr, _arg);
  }

  public int GetPickable() {
    auto ret = vtkd_im.vtkProp_GetPickable(cast(void*)swigCPtr);
    return ret;
  }

  public void PickableOn() {
    vtkd_im.vtkProp_PickableOn(cast(void*)swigCPtr);
  }

  public void PickableOff() {
    vtkd_im.vtkProp_PickableOff(cast(void*)swigCPtr);
  }

  public void Pick() {
    vtkd_im.vtkProp_Pick(cast(void*)swigCPtr);
  }

  public void SetDragable(int _arg) {
    vtkd_im.vtkProp_SetDragable(cast(void*)swigCPtr, _arg);
  }

  public int GetDragable() {
    auto ret = vtkd_im.vtkProp_GetDragable(cast(void*)swigCPtr);
    return ret;
  }

  public void DragableOn() {
    vtkd_im.vtkProp_DragableOn(cast(void*)swigCPtr);
  }

  public void DragableOff() {
    vtkd_im.vtkProp_DragableOff(cast(void*)swigCPtr);
  }

  public core.stdc.config.c_ulong GetRedrawMTime() {
    auto ret = vtkd_im.vtkProp_GetRedrawMTime(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseBounds(bool _arg) {
    vtkd_im.vtkProp_SetUseBounds(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseBounds() {
    bool ret = vtkd_im.vtkProp_GetUseBounds(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseBoundsOn() {
    vtkd_im.vtkProp_UseBoundsOn(cast(void*)swigCPtr);
  }

  public void UseBoundsOff() {
    vtkd_im.vtkProp_UseBoundsOff(cast(void*)swigCPtr);
  }

  public double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkProp_GetBounds(cast(void*)swigCPtr);
    return ret;
  }

  public void ShallowCopy(vtkProp prop) {
    vtkd_im.vtkProp_ShallowCopy(cast(void*)swigCPtr, vtkProp.swigGetCPtr(prop));
  }

  public void InitPathTraversal() {
    vtkd_im.vtkProp_InitPathTraversal(cast(void*)swigCPtr);
  }

  public vtkAssemblyPath.vtkAssemblyPath GetNextPath() {
    void* cPtr = vtkd_im.vtkProp_GetNextPath(cast(void*)swigCPtr);
    vtkAssemblyPath.vtkAssemblyPath ret = (cPtr is null) ? null : new vtkAssemblyPath.vtkAssemblyPath(cPtr, false);
    return ret;
  }

  public int GetNumberOfPaths() {
    auto ret = vtkd_im.vtkProp_GetNumberOfPaths(cast(void*)swigCPtr);
    return ret;
  }

  public void PokeMatrix(vtkMatrix4x4.vtkMatrix4x4 arg0) {
    vtkd_im.vtkProp_PokeMatrix(cast(void*)swigCPtr, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(arg0));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetMatrix() {
    void* cPtr = vtkd_im.vtkProp_GetMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }

  public vtkInformation.vtkInformation GetPropertyKeys() {
    void* cPtr = vtkd_im.vtkProp_GetPropertyKeys(cast(void*)swigCPtr);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public void SetPropertyKeys(vtkInformation.vtkInformation keys) {
    vtkd_im.vtkProp_SetPropertyKeys(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(keys));
  }

  public bool HasKeys(vtkInformation.vtkInformation requiredKeys) {
    bool ret = vtkd_im.vtkProp_HasKeys(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(requiredKeys)) ? true : false;
    return ret;
  }
}
