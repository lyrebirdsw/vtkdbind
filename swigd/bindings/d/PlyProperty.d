/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module PlyProperty;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;

class PlyProperty {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(PlyProperty obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_PlyProperty(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void name(string value) @property {
    vtkd_im.PlyProperty_name_set(cast(void*)swigCPtr, (value ? std.string.toStringz(value) : null));
  }

  public string name() @property const {
    string ret = std.conv.to!string(vtkd_im.PlyProperty_name_get(cast(void*)swigCPtr));
    return ret;
  }

  public void external_type(int value) @property {
    vtkd_im.PlyProperty_external_type_set(cast(void*)swigCPtr, value);
  }

  public int external_type() @property const {
    auto ret = vtkd_im.PlyProperty_external_type_get(cast(void*)swigCPtr);
    return ret;
  }

  public void internal_type(int value) @property {
    vtkd_im.PlyProperty_internal_type_set(cast(void*)swigCPtr, value);
  }

  public int internal_type() @property const {
    auto ret = vtkd_im.PlyProperty_internal_type_get(cast(void*)swigCPtr);
    return ret;
  }

  public void offset(int value) @property {
    vtkd_im.PlyProperty_offset_set(cast(void*)swigCPtr, value);
  }

  public int offset() @property const {
    auto ret = vtkd_im.PlyProperty_offset_get(cast(void*)swigCPtr);
    return ret;
  }

  public void is_list(int value) @property {
    vtkd_im.PlyProperty_is_list_set(cast(void*)swigCPtr, value);
  }

  public int is_list() @property const {
    auto ret = vtkd_im.PlyProperty_is_list_get(cast(void*)swigCPtr);
    return ret;
  }

  public void count_external(int value) @property {
    vtkd_im.PlyProperty_count_external_set(cast(void*)swigCPtr, value);
  }

  public int count_external() @property const {
    auto ret = vtkd_im.PlyProperty_count_external_get(cast(void*)swigCPtr);
    return ret;
  }

  public void count_internal(int value) @property {
    vtkd_im.PlyProperty_count_internal_set(cast(void*)swigCPtr, value);
  }

  public int count_internal() @property const {
    auto ret = vtkd_im.PlyProperty_count_internal_get(cast(void*)swigCPtr);
    return ret;
  }

  public void count_offset(int value) @property {
    vtkd_im.PlyProperty_count_offset_set(cast(void*)swigCPtr, value);
  }

  public int count_offset() @property const {
    auto ret = vtkd_im.PlyProperty_count_offset_get(cast(void*)swigCPtr);
    return ret;
  }

  public this() {
    this(vtkd_im.new_PlyProperty(), true);
  }
}
