/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLegendScaleActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkTextProperty;
static import vtkAxisActor2D;
static import vtkViewport;
static import vtkWindow;
static import vtkProp;

class vtkLegendScaleActor : vtkProp.vtkProp {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLegendScaleActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLegendScaleActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLegendScaleActor New() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_New();
    vtkLegendScaleActor ret = (cPtr is null) ? null : new vtkLegendScaleActor(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLegendScaleActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLegendScaleActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLegendScaleActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLegendScaleActor ret = (cPtr is null) ? null : new vtkLegendScaleActor(cPtr, false);
    return ret;
  }

  public vtkLegendScaleActor NewInstance() const {
    void* cPtr = vtkd_im.vtkLegendScaleActor_NewInstance(cast(void*)swigCPtr);
    vtkLegendScaleActor ret = (cPtr is null) ? null : new vtkLegendScaleActor(cPtr, false);
    return ret;
  }

  alias vtkProp.vtkProp.NewInstance NewInstance;

  public void SetLabelMode(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetLabelMode(cast(void*)swigCPtr, _arg);
  }

  public int GetLabelModeMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLabelModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLabelModeMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLabelModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLabelMode() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLabelMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelModeToDistance() {
    vtkd_im.vtkLegendScaleActor_SetLabelModeToDistance(cast(void*)swigCPtr);
  }

  public void SetLabelModeToXYCoordinates() {
    vtkd_im.vtkLegendScaleActor_SetLabelModeToXYCoordinates(cast(void*)swigCPtr);
  }

  public void SetRightAxisVisibility(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetRightAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetRightAxisVisibility() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetRightAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void RightAxisVisibilityOn() {
    vtkd_im.vtkLegendScaleActor_RightAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void RightAxisVisibilityOff() {
    vtkd_im.vtkLegendScaleActor_RightAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetTopAxisVisibility(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetTopAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetTopAxisVisibility() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetTopAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void TopAxisVisibilityOn() {
    vtkd_im.vtkLegendScaleActor_TopAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void TopAxisVisibilityOff() {
    vtkd_im.vtkLegendScaleActor_TopAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetLeftAxisVisibility(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetLeftAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetLeftAxisVisibility() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLeftAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void LeftAxisVisibilityOn() {
    vtkd_im.vtkLegendScaleActor_LeftAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void LeftAxisVisibilityOff() {
    vtkd_im.vtkLegendScaleActor_LeftAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetBottomAxisVisibility(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetBottomAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetBottomAxisVisibility() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetBottomAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void BottomAxisVisibilityOn() {
    vtkd_im.vtkLegendScaleActor_BottomAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void BottomAxisVisibilityOff() {
    vtkd_im.vtkLegendScaleActor_BottomAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetLegendVisibility(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetLegendVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetLegendVisibility() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLegendVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void LegendVisibilityOn() {
    vtkd_im.vtkLegendScaleActor_LegendVisibilityOn(cast(void*)swigCPtr);
  }

  public void LegendVisibilityOff() {
    vtkd_im.vtkLegendScaleActor_LegendVisibilityOff(cast(void*)swigCPtr);
  }

  public void AllAxesOn() {
    vtkd_im.vtkLegendScaleActor_AllAxesOn(cast(void*)swigCPtr);
  }

  public void AllAxesOff() {
    vtkd_im.vtkLegendScaleActor_AllAxesOff(cast(void*)swigCPtr);
  }

  public void AllAnnotationsOn() {
    vtkd_im.vtkLegendScaleActor_AllAnnotationsOn(cast(void*)swigCPtr);
  }

  public void AllAnnotationsOff() {
    vtkd_im.vtkLegendScaleActor_AllAnnotationsOff(cast(void*)swigCPtr);
  }

  public void SetRightBorderOffset(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetRightBorderOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetRightBorderOffsetMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetRightBorderOffsetMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRightBorderOffsetMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetRightBorderOffsetMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRightBorderOffset() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetRightBorderOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTopBorderOffset(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetTopBorderOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetTopBorderOffsetMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetTopBorderOffsetMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTopBorderOffsetMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetTopBorderOffsetMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTopBorderOffset() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetTopBorderOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLeftBorderOffset(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetLeftBorderOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetLeftBorderOffsetMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLeftBorderOffsetMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLeftBorderOffsetMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLeftBorderOffsetMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLeftBorderOffset() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetLeftBorderOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBottomBorderOffset(int _arg) {
    vtkd_im.vtkLegendScaleActor_SetBottomBorderOffset(cast(void*)swigCPtr, _arg);
  }

  public int GetBottomBorderOffsetMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetBottomBorderOffsetMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBottomBorderOffsetMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetBottomBorderOffsetMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBottomBorderOffset() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetBottomBorderOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCornerOffsetFactor(double _arg) {
    vtkd_im.vtkLegendScaleActor_SetCornerOffsetFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetCornerOffsetFactorMinValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetCornerOffsetFactorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetCornerOffsetFactorMaxValue() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetCornerOffsetFactorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetCornerOffsetFactor() {
    auto ret = vtkd_im.vtkLegendScaleActor_GetCornerOffsetFactor(cast(void*)swigCPtr);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetLegendTitleProperty() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetLegendTitleProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetLegendLabelProperty() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetLegendLabelProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetRightAxis() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetRightAxis(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetTopAxis() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetTopAxis(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetLeftAxis() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetLeftAxis(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetBottomAxis() {
    void* cPtr = vtkd_im.vtkLegendScaleActor_GetBottomAxis(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public void BuildRepresentation(vtkViewport.vtkViewport viewport) {
    vtkd_im.vtkLegendScaleActor_BuildRepresentation(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkLegendScaleActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  public int RenderOverlay(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkLegendScaleActor_RenderOverlay(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int RenderOpaqueGeometry(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkLegendScaleActor_RenderOpaqueGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }
}
