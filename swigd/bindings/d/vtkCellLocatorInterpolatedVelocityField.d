/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCellLocatorInterpolatedVelocityField;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAbstractCellLocator;
static import vtkCompositeInterpolatedVelocityField;

class vtkCellLocatorInterpolatedVelocityField : vtkCompositeInterpolatedVelocityField.vtkCompositeInterpolatedVelocityField {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCellLocatorInterpolatedVelocityField_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCellLocatorInterpolatedVelocityField obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCellLocatorInterpolatedVelocityField_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCellLocatorInterpolatedVelocityField SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCellLocatorInterpolatedVelocityField_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCellLocatorInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCellLocatorInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public vtkCellLocatorInterpolatedVelocityField NewInstance() const {
    void* cPtr = vtkd_im.vtkCellLocatorInterpolatedVelocityField_NewInstance(cast(void*)swigCPtr);
    vtkCellLocatorInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCellLocatorInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  alias vtkCompositeInterpolatedVelocityField.vtkCompositeInterpolatedVelocityField.NewInstance NewInstance;

  public static vtkCellLocatorInterpolatedVelocityField New() {
    void* cPtr = vtkd_im.vtkCellLocatorInterpolatedVelocityField_New();
    vtkCellLocatorInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkCellLocatorInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public vtkAbstractCellLocator.vtkAbstractCellLocator GetLastCellLocator() {
    void* cPtr = vtkd_im.vtkCellLocatorInterpolatedVelocityField_GetLastCellLocator(cast(void*)swigCPtr);
    vtkAbstractCellLocator.vtkAbstractCellLocator ret = (cPtr is null) ? null : new vtkAbstractCellLocator.vtkAbstractCellLocator(cPtr, false);
    return ret;
  }

  public vtkAbstractCellLocator.vtkAbstractCellLocator GetCellLocatorPrototype() {
    void* cPtr = vtkd_im.vtkCellLocatorInterpolatedVelocityField_GetCellLocatorPrototype(cast(void*)swigCPtr);
    vtkAbstractCellLocator.vtkAbstractCellLocator ret = (cPtr is null) ? null : new vtkAbstractCellLocator.vtkAbstractCellLocator(cPtr, false);
    return ret;
  }

  public void SetCellLocatorPrototype(vtkAbstractCellLocator.vtkAbstractCellLocator prototype) {
    vtkd_im.vtkCellLocatorInterpolatedVelocityField_SetCellLocatorPrototype(cast(void*)swigCPtr, vtkAbstractCellLocator.vtkAbstractCellLocator.swigGetCPtr(prototype));
  }

  public override void SetLastCellId(long c, int dataindex) {
    vtkd_im.vtkCellLocatorInterpolatedVelocityField_SetLastCellId__SWIG_0(cast(void*)swigCPtr, c, dataindex);
  }

  public override void SetLastCellId(long c) {
    vtkd_im.vtkCellLocatorInterpolatedVelocityField_SetLastCellId__SWIG_1(cast(void*)swigCPtr, c);
  }
}
