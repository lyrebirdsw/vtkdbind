/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkXMLReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataSet;
static import vtkDataArraySelection;
static import vtkInformation;
static import SWIGTYPE_p_int;
static import vtkXMLDataParser;
static import vtkAlgorithm;

class vtkXMLReader : vtkAlgorithm.vtkAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkXMLReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkXMLReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkXMLReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkXMLReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkXMLReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkXMLReader ret = (cPtr is null) ? null : new vtkXMLReader(cPtr, false);
    return ret;
  }

  public vtkXMLReader NewInstance() const {
    void* cPtr = vtkd_im.vtkXMLReader_NewInstance(cast(void*)swigCPtr);
    vtkXMLReader ret = (cPtr is null) ? null : new vtkXMLReader(cPtr, false);
    return ret;
  }

  alias vtkAlgorithm.vtkAlgorithm.NewInstance NewInstance;

  public void SetFileName(string _arg) {
    vtkd_im.vtkXMLReader_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public int CanReadFile(string name) {
    auto ret = vtkd_im.vtkXMLReader_CanReadFile(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public vtkDataSet.vtkDataSet GetOutputAsDataSet() {
    void* cPtr = vtkd_im.vtkXMLReader_GetOutputAsDataSet__SWIG_0(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public vtkDataSet.vtkDataSet GetOutputAsDataSet(int index) {
    void* cPtr = vtkd_im.vtkXMLReader_GetOutputAsDataSet__SWIG_1(cast(void*)swigCPtr, index);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public vtkDataArraySelection.vtkDataArraySelection GetPointDataArraySelection() {
    void* cPtr = vtkd_im.vtkXMLReader_GetPointDataArraySelection(cast(void*)swigCPtr);
    vtkDataArraySelection.vtkDataArraySelection ret = (cPtr is null) ? null : new vtkDataArraySelection.vtkDataArraySelection(cPtr, false);
    return ret;
  }

  public vtkDataArraySelection.vtkDataArraySelection GetCellDataArraySelection() {
    void* cPtr = vtkd_im.vtkXMLReader_GetCellDataArraySelection(cast(void*)swigCPtr);
    vtkDataArraySelection.vtkDataArraySelection ret = (cPtr is null) ? null : new vtkDataArraySelection.vtkDataArraySelection(cPtr, false);
    return ret;
  }

  public int GetNumberOfPointArrays() {
    auto ret = vtkd_im.vtkXMLReader_GetNumberOfPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfCellArrays() {
    auto ret = vtkd_im.vtkXMLReader_GetNumberOfCellArrays(cast(void*)swigCPtr);
    return ret;
  }

  public string GetPointArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkXMLReader_GetPointArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public string GetCellArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkXMLReader_GetCellArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public int GetPointArrayStatus(string name) {
    auto ret = vtkd_im.vtkXMLReader_GetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public int GetCellArrayStatus(string name) {
    auto ret = vtkd_im.vtkXMLReader_GetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPointArrayStatus(string name, int status) {
    vtkd_im.vtkXMLReader_SetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void SetCellArrayStatus(string name, int status) {
    vtkd_im.vtkXMLReader_SetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void CopyOutputInformation(vtkInformation.vtkInformation arg0, int arg1) {
    vtkd_im.vtkXMLReader_CopyOutputInformation(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0), arg1);
  }

  public void SetTimeStep(int _arg) {
    vtkd_im.vtkXMLReader_SetTimeStep(cast(void*)swigCPtr, _arg);
  }

  public int GetTimeStep() {
    auto ret = vtkd_im.vtkXMLReader_GetTimeStep(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTimeSteps() {
    auto ret = vtkd_im.vtkXMLReader_GetNumberOfTimeSteps(cast(void*)swigCPtr);
    return ret;
  }

  public int* GetTimeStepRange() {
    auto ret = cast(int*)vtkd_im.vtkXMLReader_GetTimeStepRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetTimeStepRange(int* _arg1, int* _arg2) {
    vtkd_im.vtkXMLReader_GetTimeStepRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetTimeStepRange(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkXMLReader_GetTimeStepRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetTimeStepRange(int _arg1, int _arg2) {
    vtkd_im.vtkXMLReader_SetTimeStepRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetTimeStepRange(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkXMLReader_SetTimeStepRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public vtkXMLDataParser.vtkXMLDataParser GetXMLParser() {
    void* cPtr = vtkd_im.vtkXMLReader_GetXMLParser(cast(void*)swigCPtr);
    vtkXMLDataParser.vtkXMLDataParser ret = (cPtr is null) ? null : new vtkXMLDataParser.vtkXMLDataParser(cPtr, false);
    return ret;
  }
}
