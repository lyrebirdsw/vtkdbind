/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAVSucdReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkUnstructuredGridAlgorithm;

class vtkAVSucdReader : vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAVSucdReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAVSucdReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAVSucdReader New() {
    void* cPtr = vtkd_im.vtkAVSucdReader_New();
    vtkAVSucdReader ret = (cPtr is null) ? null : new vtkAVSucdReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAVSucdReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAVSucdReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAVSucdReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAVSucdReader ret = (cPtr is null) ? null : new vtkAVSucdReader(cPtr, false);
    return ret;
  }

  public vtkAVSucdReader NewInstance() const {
    void* cPtr = vtkd_im.vtkAVSucdReader_NewInstance(cast(void*)swigCPtr);
    vtkAVSucdReader ret = (cPtr is null) ? null : new vtkAVSucdReader(cPtr, false);
    return ret;
  }

  alias vtkUnstructuredGridAlgorithm.vtkUnstructuredGridAlgorithm.NewInstance NewInstance;

  public void SetFileName(string _arg) {
    vtkd_im.vtkAVSucdReader_SetFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkAVSucdReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetBinaryFile(int _arg) {
    vtkd_im.vtkAVSucdReader_SetBinaryFile(cast(void*)swigCPtr, _arg);
  }

  public int GetBinaryFile() {
    auto ret = vtkd_im.vtkAVSucdReader_GetBinaryFile(cast(void*)swigCPtr);
    return ret;
  }

  public void BinaryFileOn() {
    vtkd_im.vtkAVSucdReader_BinaryFileOn(cast(void*)swigCPtr);
  }

  public void BinaryFileOff() {
    vtkd_im.vtkAVSucdReader_BinaryFileOff(cast(void*)swigCPtr);
  }

  public int GetNumberOfCells() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfCells(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfNodes() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfNodes(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfNodeFields() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfNodeFields(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfCellFields() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfCellFields(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfFields() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfFields(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfNodeComponents() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfNodeComponents(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfCellComponents() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfCellComponents(cast(void*)swigCPtr);
    return ret;
  }

  public void SetByteOrderToBigEndian() {
    vtkd_im.vtkAVSucdReader_SetByteOrderToBigEndian(cast(void*)swigCPtr);
  }

  public void SetByteOrderToLittleEndian() {
    vtkd_im.vtkAVSucdReader_SetByteOrderToLittleEndian(cast(void*)swigCPtr);
  }

  public string GetByteOrderAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkAVSucdReader_GetByteOrderAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetByteOrder(int _arg) {
    vtkd_im.vtkAVSucdReader_SetByteOrder(cast(void*)swigCPtr, _arg);
  }

  public int GetByteOrder() {
    auto ret = vtkd_im.vtkAVSucdReader_GetByteOrder(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfPointArrays() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfCellArrays() {
    auto ret = vtkd_im.vtkAVSucdReader_GetNumberOfCellArrays(cast(void*)swigCPtr);
    return ret;
  }

  public string GetPointArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkAVSucdReader_GetPointArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public string GetCellArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkAVSucdReader_GetCellArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public int GetPointArrayStatus(string name) {
    auto ret = vtkd_im.vtkAVSucdReader_GetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public int GetCellArrayStatus(string name) {
    auto ret = vtkd_im.vtkAVSucdReader_GetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPointArrayStatus(string name, int status) {
    vtkd_im.vtkAVSucdReader_SetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void SetCellArrayStatus(string name, int status) {
    vtkd_im.vtkAVSucdReader_SetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void DisableAllCellArrays() {
    vtkd_im.vtkAVSucdReader_DisableAllCellArrays(cast(void*)swigCPtr);
  }

  public void EnableAllCellArrays() {
    vtkd_im.vtkAVSucdReader_EnableAllCellArrays(cast(void*)swigCPtr);
  }

  public void DisableAllPointArrays() {
    vtkd_im.vtkAVSucdReader_DisableAllPointArrays(cast(void*)swigCPtr);
  }

  public void EnableAllPointArrays() {
    vtkd_im.vtkAVSucdReader_EnableAllPointArrays(cast(void*)swigCPtr);
  }

  public void GetCellDataRange(int cellComp, int index, float* min, float* max) {
    vtkd_im.vtkAVSucdReader_GetCellDataRange(cast(void*)swigCPtr, cellComp, index, cast(void*)min, cast(void*)max);
  }

  public void GetNodeDataRange(int nodeComp, int index, float* min, float* max) {
    vtkd_im.vtkAVSucdReader_GetNodeDataRange(cast(void*)swigCPtr, nodeComp, index, cast(void*)min, cast(void*)max);
  }
}
