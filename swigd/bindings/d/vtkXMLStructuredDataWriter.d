/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkXMLStructuredDataWriter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_int;
static import vtkExtentTranslator;
static import vtkXMLWriter;

class vtkXMLStructuredDataWriter : vtkXMLWriter.vtkXMLWriter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkXMLStructuredDataWriter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkXMLStructuredDataWriter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkXMLStructuredDataWriter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkXMLStructuredDataWriter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkXMLStructuredDataWriter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkXMLStructuredDataWriter ret = (cPtr is null) ? null : new vtkXMLStructuredDataWriter(cPtr, false);
    return ret;
  }

  public vtkXMLStructuredDataWriter NewInstance() const {
    void* cPtr = vtkd_im.vtkXMLStructuredDataWriter_NewInstance(cast(void*)swigCPtr);
    vtkXMLStructuredDataWriter ret = (cPtr is null) ? null : new vtkXMLStructuredDataWriter(cPtr, false);
    return ret;
  }

  alias vtkXMLWriter.vtkXMLWriter.NewInstance NewInstance;

  public void SetNumberOfPieces(int _arg) {
    vtkd_im.vtkXMLStructuredDataWriter_SetNumberOfPieces(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfPieces() {
    auto ret = vtkd_im.vtkXMLStructuredDataWriter_GetNumberOfPieces(cast(void*)swigCPtr);
    return ret;
  }

  public void SetWriteExtent(int _arg1, int _arg2, int _arg3, int _arg4, int _arg5, int _arg6) {
    vtkd_im.vtkXMLStructuredDataWriter_SetWriteExtent__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetWriteExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkXMLStructuredDataWriter_SetWriteExtent__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public int* GetWriteExtent() {
    auto ret = cast(int*)vtkd_im.vtkXMLStructuredDataWriter_GetWriteExtent__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetWriteExtent(int* _arg1, int* _arg2, int* _arg3, int* _arg4, int* _arg5, int* _arg6) {
    vtkd_im.vtkXMLStructuredDataWriter_GetWriteExtent__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetWriteExtent(SWIGTYPE_p_int.SWIGTYPE_p_int _arg) {
    vtkd_im.vtkXMLStructuredDataWriter_GetWriteExtent__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_int.SWIGTYPE_p_int.swigGetCPtr(_arg));
  }

  public void SetExtentTranslator(vtkExtentTranslator.vtkExtentTranslator arg0) {
    vtkd_im.vtkXMLStructuredDataWriter_SetExtentTranslator(cast(void*)swigCPtr, vtkExtentTranslator.vtkExtentTranslator.swigGetCPtr(arg0));
  }

  public vtkExtentTranslator.vtkExtentTranslator GetExtentTranslator() {
    void* cPtr = vtkd_im.vtkXMLStructuredDataWriter_GetExtentTranslator(cast(void*)swigCPtr);
    vtkExtentTranslator.vtkExtentTranslator ret = (cPtr is null) ? null : new vtkExtentTranslator.vtkExtentTranslator(cPtr, false);
    return ret;
  }
}
