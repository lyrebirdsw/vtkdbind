/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkProperty;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkActor;
static import vtkRenderer;
static import SWIGTYPE_p_double;
static import vtkXMLMaterial;
static import vtkShaderProgram;
static import vtkShaderDeviceAdapter2;
static import vtkTexture;
static import vtkWindow;
static import vtkObject;

class vtkProperty : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkProperty_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkProperty obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkProperty_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkProperty SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkProperty_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkProperty ret = (cPtr is null) ? null : new vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty NewInstance() const {
    void* cPtr = vtkd_im.vtkProperty_NewInstance(cast(void*)swigCPtr);
    vtkProperty ret = (cPtr is null) ? null : new vtkProperty(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkProperty New() {
    void* cPtr = vtkd_im.vtkProperty_New();
    vtkProperty ret = (cPtr is null) ? null : new vtkProperty(cPtr, false);
    return ret;
  }

  public void DeepCopy(vtkProperty p) {
    vtkd_im.vtkProperty_DeepCopy(cast(void*)swigCPtr, vtkProperty.swigGetCPtr(p));
  }

  public void Render(vtkActor.vtkActor arg0, vtkRenderer.vtkRenderer arg1) {
    vtkd_im.vtkProperty_Render(cast(void*)swigCPtr, vtkActor.vtkActor.swigGetCPtr(arg0), vtkRenderer.vtkRenderer.swigGetCPtr(arg1));
  }

  public void BackfaceRender(vtkActor.vtkActor arg0, vtkRenderer.vtkRenderer arg1) {
    vtkd_im.vtkProperty_BackfaceRender(cast(void*)swigCPtr, vtkActor.vtkActor.swigGetCPtr(arg0), vtkRenderer.vtkRenderer.swigGetCPtr(arg1));
  }

  public bool GetLighting() {
    bool ret = vtkd_im.vtkProperty_GetLighting(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetLighting(bool _arg) {
    vtkd_im.vtkProperty_SetLighting(cast(void*)swigCPtr, _arg);
  }

  public void LightingOn() {
    vtkd_im.vtkProperty_LightingOn(cast(void*)swigCPtr);
  }

  public void LightingOff() {
    vtkd_im.vtkProperty_LightingOff(cast(void*)swigCPtr);
  }

  public void SetInterpolation(int _arg) {
    vtkd_im.vtkProperty_SetInterpolation(cast(void*)swigCPtr, _arg);
  }

  public int GetInterpolationMinValue() {
    auto ret = vtkd_im.vtkProperty_GetInterpolationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInterpolationMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetInterpolationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInterpolation() {
    auto ret = vtkd_im.vtkProperty_GetInterpolation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInterpolationToFlat() {
    vtkd_im.vtkProperty_SetInterpolationToFlat(cast(void*)swigCPtr);
  }

  public void SetInterpolationToGouraud() {
    vtkd_im.vtkProperty_SetInterpolationToGouraud(cast(void*)swigCPtr);
  }

  public void SetInterpolationToPhong() {
    vtkd_im.vtkProperty_SetInterpolationToPhong(cast(void*)swigCPtr);
  }

  public string GetInterpolationAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkProperty_GetInterpolationAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetRepresentation(int _arg) {
    vtkd_im.vtkProperty_SetRepresentation(cast(void*)swigCPtr, _arg);
  }

  public int GetRepresentationMinValue() {
    auto ret = vtkd_im.vtkProperty_GetRepresentationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRepresentationMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetRepresentationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRepresentation() {
    auto ret = vtkd_im.vtkProperty_GetRepresentation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRepresentationToPoints() {
    vtkd_im.vtkProperty_SetRepresentationToPoints(cast(void*)swigCPtr);
  }

  public void SetRepresentationToWireframe() {
    vtkd_im.vtkProperty_SetRepresentationToWireframe(cast(void*)swigCPtr);
  }

  public void SetRepresentationToSurface() {
    vtkd_im.vtkProperty_SetRepresentationToSurface(cast(void*)swigCPtr);
  }

  public string GetRepresentationAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkProperty_GetRepresentationAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetColor(double r, double g, double b) {
    vtkd_im.vtkProperty_SetColor__SWIG_0(cast(void*)swigCPtr, r, g, b);
  }

  public void SetColor(SWIGTYPE_p_double.SWIGTYPE_p_double a) {
    vtkd_im.vtkProperty_SetColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(a));
  }

  public double* GetColor() {
    auto ret = cast(double*)vtkd_im.vtkProperty_GetColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetColor(SWIGTYPE_p_double.SWIGTYPE_p_double rgb) {
    vtkd_im.vtkProperty_GetColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rgb));
  }

  public void GetColor(double* r, double* g, double* b) {
    vtkd_im.vtkProperty_GetColor__SWIG_2(cast(void*)swigCPtr, cast(void*)r, cast(void*)g, cast(void*)b);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void SetAmbient(double _arg) {
    vtkd_im.vtkProperty_SetAmbient(cast(void*)swigCPtr, _arg);
  }

  public double GetAmbientMinValue() {
    auto ret = vtkd_im.vtkProperty_GetAmbientMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAmbientMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetAmbientMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAmbient() {
    auto ret = vtkd_im.vtkProperty_GetAmbient(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDiffuse(double _arg) {
    vtkd_im.vtkProperty_SetDiffuse(cast(void*)swigCPtr, _arg);
  }

  public double GetDiffuseMinValue() {
    auto ret = vtkd_im.vtkProperty_GetDiffuseMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDiffuseMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetDiffuseMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDiffuse() {
    auto ret = vtkd_im.vtkProperty_GetDiffuse(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSpecular(double _arg) {
    vtkd_im.vtkProperty_SetSpecular(cast(void*)swigCPtr, _arg);
  }

  public double GetSpecularMinValue() {
    auto ret = vtkd_im.vtkProperty_GetSpecularMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSpecularMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetSpecularMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSpecular() {
    auto ret = vtkd_im.vtkProperty_GetSpecular(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSpecularPower(double _arg) {
    vtkd_im.vtkProperty_SetSpecularPower(cast(void*)swigCPtr, _arg);
  }

  public double GetSpecularPowerMinValue() {
    auto ret = vtkd_im.vtkProperty_GetSpecularPowerMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSpecularPowerMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetSpecularPowerMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetSpecularPower() {
    auto ret = vtkd_im.vtkProperty_GetSpecularPower(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOpacity(double _arg) {
    vtkd_im.vtkProperty_SetOpacity(cast(void*)swigCPtr, _arg);
  }

  public double GetOpacityMinValue() {
    auto ret = vtkd_im.vtkProperty_GetOpacityMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOpacityMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetOpacityMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetOpacity() {
    auto ret = vtkd_im.vtkProperty_GetOpacity(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAmbientColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkProperty_SetAmbientColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAmbientColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_SetAmbientColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAmbientColor() {
    auto ret = cast(double*)vtkd_im.vtkProperty_GetAmbientColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAmbientColor(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkProperty_GetAmbientColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAmbientColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_GetAmbientColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetDiffuseColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkProperty_SetDiffuseColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDiffuseColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_SetDiffuseColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDiffuseColor() {
    auto ret = cast(double*)vtkd_im.vtkProperty_GetDiffuseColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDiffuseColor(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkProperty_GetDiffuseColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetDiffuseColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_GetDiffuseColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetSpecularColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkProperty_SetSpecularColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetSpecularColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_SetSpecularColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetSpecularColor() {
    auto ret = cast(double*)vtkd_im.vtkProperty_GetSpecularColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetSpecularColor(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkProperty_GetSpecularColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetSpecularColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_GetSpecularColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public int GetEdgeVisibility() {
    auto ret = vtkd_im.vtkProperty_GetEdgeVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEdgeVisibility(int _arg) {
    vtkd_im.vtkProperty_SetEdgeVisibility(cast(void*)swigCPtr, _arg);
  }

  public void EdgeVisibilityOn() {
    vtkd_im.vtkProperty_EdgeVisibilityOn(cast(void*)swigCPtr);
  }

  public void EdgeVisibilityOff() {
    vtkd_im.vtkProperty_EdgeVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetEdgeColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkProperty_SetEdgeColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetEdgeColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_SetEdgeColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetEdgeColor() {
    auto ret = cast(double*)vtkd_im.vtkProperty_GetEdgeColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetEdgeColor(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkProperty_GetEdgeColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetEdgeColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkProperty_GetEdgeColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetLineWidth(float _arg) {
    vtkd_im.vtkProperty_SetLineWidth(cast(void*)swigCPtr, _arg);
  }

  public float GetLineWidthMinValue() {
    auto ret = vtkd_im.vtkProperty_GetLineWidthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetLineWidthMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetLineWidthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetLineWidth() {
    auto ret = vtkd_im.vtkProperty_GetLineWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLineStipplePattern(int _arg) {
    vtkd_im.vtkProperty_SetLineStipplePattern(cast(void*)swigCPtr, _arg);
  }

  public int GetLineStipplePattern() {
    auto ret = vtkd_im.vtkProperty_GetLineStipplePattern(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLineStippleRepeatFactor(int _arg) {
    vtkd_im.vtkProperty_SetLineStippleRepeatFactor(cast(void*)swigCPtr, _arg);
  }

  public int GetLineStippleRepeatFactorMinValue() {
    auto ret = vtkd_im.vtkProperty_GetLineStippleRepeatFactorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLineStippleRepeatFactorMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetLineStippleRepeatFactorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLineStippleRepeatFactor() {
    auto ret = vtkd_im.vtkProperty_GetLineStippleRepeatFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPointSize(float _arg) {
    vtkd_im.vtkProperty_SetPointSize(cast(void*)swigCPtr, _arg);
  }

  public float GetPointSizeMinValue() {
    auto ret = vtkd_im.vtkProperty_GetPointSizeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetPointSizeMaxValue() {
    auto ret = vtkd_im.vtkProperty_GetPointSizeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetPointSize() {
    auto ret = vtkd_im.vtkProperty_GetPointSize(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBackfaceCulling() {
    auto ret = vtkd_im.vtkProperty_GetBackfaceCulling(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBackfaceCulling(int _arg) {
    vtkd_im.vtkProperty_SetBackfaceCulling(cast(void*)swigCPtr, _arg);
  }

  public void BackfaceCullingOn() {
    vtkd_im.vtkProperty_BackfaceCullingOn(cast(void*)swigCPtr);
  }

  public void BackfaceCullingOff() {
    vtkd_im.vtkProperty_BackfaceCullingOff(cast(void*)swigCPtr);
  }

  public int GetFrontfaceCulling() {
    auto ret = vtkd_im.vtkProperty_GetFrontfaceCulling(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFrontfaceCulling(int _arg) {
    vtkd_im.vtkProperty_SetFrontfaceCulling(cast(void*)swigCPtr, _arg);
  }

  public void FrontfaceCullingOn() {
    vtkd_im.vtkProperty_FrontfaceCullingOn(cast(void*)swigCPtr);
  }

  public void FrontfaceCullingOff() {
    vtkd_im.vtkProperty_FrontfaceCullingOff(cast(void*)swigCPtr);
  }

  public vtkXMLMaterial.vtkXMLMaterial GetMaterial() {
    void* cPtr = vtkd_im.vtkProperty_GetMaterial(cast(void*)swigCPtr);
    vtkXMLMaterial.vtkXMLMaterial ret = (cPtr is null) ? null : new vtkXMLMaterial.vtkXMLMaterial(cPtr, false);
    return ret;
  }

  public string GetMaterialName() {
    string ret = std.conv.to!string(vtkd_im.vtkProperty_GetMaterialName(cast(void*)swigCPtr));
    return ret;
  }

  public void LoadMaterial(string name) {
    vtkd_im.vtkProperty_LoadMaterial__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void LoadMaterialFromString(string materialxml) {
    vtkd_im.vtkProperty_LoadMaterialFromString(cast(void*)swigCPtr, (materialxml ? std.string.toStringz(materialxml) : null));
  }

  public void LoadMaterial(vtkXMLMaterial.vtkXMLMaterial arg0) {
    vtkd_im.vtkProperty_LoadMaterial__SWIG_1(cast(void*)swigCPtr, vtkXMLMaterial.vtkXMLMaterial.swigGetCPtr(arg0));
  }

  public void SetShading(int _arg) {
    vtkd_im.vtkProperty_SetShading(cast(void*)swigCPtr, _arg);
  }

  public int GetShading() {
    auto ret = vtkd_im.vtkProperty_GetShading(cast(void*)swigCPtr);
    return ret;
  }

  public void ShadingOn() {
    vtkd_im.vtkProperty_ShadingOn(cast(void*)swigCPtr);
  }

  public void ShadingOff() {
    vtkd_im.vtkProperty_ShadingOff(cast(void*)swigCPtr);
  }

  public vtkShaderProgram.vtkShaderProgram GetShaderProgram() {
    void* cPtr = vtkd_im.vtkProperty_GetShaderProgram(cast(void*)swigCPtr);
    vtkShaderProgram.vtkShaderProgram ret = (cPtr is null) ? null : new vtkShaderProgram.vtkShaderProgram(cPtr, false);
    return ret;
  }

  public vtkShaderDeviceAdapter2.vtkShaderDeviceAdapter2 GetShaderDeviceAdapter2() {
    void* cPtr = vtkd_im.vtkProperty_GetShaderDeviceAdapter2(cast(void*)swigCPtr);
    vtkShaderDeviceAdapter2.vtkShaderDeviceAdapter2 ret = (cPtr is null) ? null : new vtkShaderDeviceAdapter2.vtkShaderDeviceAdapter2(cPtr, false);
    return ret;
  }

  public void AddShaderVariable(string name, int numVars, int* x) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), numVars, cast(void*)x);
  }

  public void AddShaderVariable(string name, int numVars, float* x) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), numVars, cast(void*)x);
  }

  public void AddShaderVariable(string name, int numVars, double* x) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_2(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), numVars, cast(void*)x);
  }

  public void AddShaderVariable(string name, int v) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_3(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v);
  }

  public void AddShaderVariable(string name, float v) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_4(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v);
  }

  public void AddShaderVariable(string name, double v) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_5(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v);
  }

  public void AddShaderVariable(string name, int v1, int v2) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_6(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2);
  }

  public void AddShaderVariable(string name, float v1, float v2) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_7(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2);
  }

  public void AddShaderVariable(string name, double v1, double v2) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_8(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2);
  }

  public void AddShaderVariable(string name, int v1, int v2, int v3) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_9(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2, v3);
  }

  public void AddShaderVariable(string name, float v1, float v2, float v3) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_10(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2, v3);
  }

  public void AddShaderVariable(string name, double v1, double v2, double v3) {
    vtkd_im.vtkProperty_AddShaderVariable__SWIG_11(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), v1, v2, v3);
  }

  public void SetTexture(string name, vtkTexture.vtkTexture texture) {
    vtkd_im.vtkProperty_SetTexture__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), vtkTexture.vtkTexture.swigGetCPtr(texture));
  }

  public vtkTexture.vtkTexture GetTexture(string name) {
    void* cPtr = vtkd_im.vtkProperty_GetTexture__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    vtkTexture.vtkTexture ret = (cPtr is null) ? null : new vtkTexture.vtkTexture(cPtr, false);
    return ret;
  }

  public void SetTexture(int unit, vtkTexture.vtkTexture texture) {
    vtkd_im.vtkProperty_SetTexture__SWIG_1(cast(void*)swigCPtr, unit, vtkTexture.vtkTexture.swigGetCPtr(texture));
  }

  public vtkTexture.vtkTexture GetTexture(int unit) {
    void* cPtr = vtkd_im.vtkProperty_GetTexture__SWIG_1(cast(void*)swigCPtr, unit);
    vtkTexture.vtkTexture ret = (cPtr is null) ? null : new vtkTexture.vtkTexture(cPtr, false);
    return ret;
  }

  public void RemoveTexture(int unit) {
    vtkd_im.vtkProperty_RemoveTexture__SWIG_0(cast(void*)swigCPtr, unit);
  }

  public void RemoveTexture(string name) {
    vtkd_im.vtkProperty_RemoveTexture__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void RemoveAllTextures() {
    vtkd_im.vtkProperty_RemoveAllTextures(cast(void*)swigCPtr);
  }

  public int GetNumberOfTextures() {
    auto ret = vtkd_im.vtkProperty_GetNumberOfTextures(cast(void*)swigCPtr);
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow win) {
    vtkd_im.vtkProperty_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(win));
  }
}
