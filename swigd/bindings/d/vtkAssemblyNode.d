/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAssemblyNode;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkProp;
static import vtkMatrix4x4;
static import vtkObject;

class vtkAssemblyNode : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAssemblyNode_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAssemblyNode obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAssemblyNode New() {
    void* cPtr = vtkd_im.vtkAssemblyNode_New();
    vtkAssemblyNode ret = (cPtr is null) ? null : new vtkAssemblyNode(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAssemblyNode_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAssemblyNode SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAssemblyNode_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAssemblyNode ret = (cPtr is null) ? null : new vtkAssemblyNode(cPtr, false);
    return ret;
  }

  public vtkAssemblyNode NewInstance() const {
    void* cPtr = vtkd_im.vtkAssemblyNode_NewInstance(cast(void*)swigCPtr);
    vtkAssemblyNode ret = (cPtr is null) ? null : new vtkAssemblyNode(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetViewProp(vtkProp.vtkProp prop) {
    vtkd_im.vtkAssemblyNode_SetViewProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(prop));
  }

  public vtkProp.vtkProp GetViewProp() {
    void* cPtr = vtkd_im.vtkAssemblyNode_GetViewProp(cast(void*)swigCPtr);
    vtkProp.vtkProp ret = (cPtr is null) ? null : new vtkProp.vtkProp(cPtr, false);
    return ret;
  }

  public void SetMatrix(vtkMatrix4x4.vtkMatrix4x4 matrix) {
    vtkd_im.vtkAssemblyNode_SetMatrix(cast(void*)swigCPtr, vtkMatrix4x4.vtkMatrix4x4.swigGetCPtr(matrix));
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetMatrix() {
    void* cPtr = vtkd_im.vtkAssemblyNode_GetMatrix(cast(void*)swigCPtr);
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }
}
