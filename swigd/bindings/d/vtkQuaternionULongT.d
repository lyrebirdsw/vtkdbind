/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionULongT;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_unsigned_long;
static import SWIGTYPE_p_a_3__unsigned_long;
static import vtkUnsignedLongTuple4TN;

class vtkQuaternionULongT : vtkUnsignedLongTuple4TN.vtkUnsignedLongTuple4TN {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionULongT_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionULongT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionULongT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionULongT__SWIG_0(), true);
  }

  public this(core.stdc.config.c_ulong scalar) {
    this(vtkd_im.new_vtkQuaternionULongT__SWIG_1(scalar), true);
  }

  public this(core.stdc.config.c_ulong* init) {
    this(vtkd_im.new_vtkQuaternionULongT__SWIG_2(cast(void*)init), true);
  }

  public this(core.stdc.config.c_ulong w, core.stdc.config.c_ulong x, core.stdc.config.c_ulong y, core.stdc.config.c_ulong z) {
    this(vtkd_im.new_vtkQuaternionULongT__SWIG_3(w, x, y, z), true);
  }

  public core.stdc.config.c_ulong SquaredNorm() const {
    auto ret = vtkd_im.vtkQuaternionULongT_SquaredNorm(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong Norm() const {
    auto ret = vtkd_im.vtkQuaternionULongT_Norm(cast(void*)swigCPtr);
    return ret;
  }

  public void ToIdentity() {
    vtkd_im.vtkQuaternionULongT_ToIdentity(cast(void*)swigCPtr);
  }

  public static vtkQuaternionULongT Identity() {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_Identity(), true);
    return ret;
  }

  public core.stdc.config.c_ulong Normalize() {
    auto ret = vtkd_im.vtkQuaternionULongT_Normalize(cast(void*)swigCPtr);
    return ret;
  }

  public vtkQuaternionULongT Normalized() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Conjugate() {
    vtkd_im.vtkQuaternionULongT_Conjugate(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongT Conjugated() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Invert() {
    vtkd_im.vtkQuaternionULongT_Invert(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongT Inverse() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitLog() {
    vtkd_im.vtkQuaternionULongT_ToUnitLog(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongT UnitLog() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitExp() {
    vtkd_im.vtkQuaternionULongT_ToUnitExp(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongT UnitExp() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void NormalizeWithAngleInDegrees() {
    vtkd_im.vtkQuaternionULongT_NormalizeWithAngleInDegrees(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongT NormalizedWithAngleInDegrees() const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Set(core.stdc.config.c_ulong w, core.stdc.config.c_ulong x, core.stdc.config.c_ulong y, core.stdc.config.c_ulong z) {
    vtkd_im.vtkQuaternionULongT_Set__SWIG_0(cast(void*)swigCPtr, w, x, y, z);
  }

  public void Set(SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long quat) {
    vtkd_im.vtkQuaternionULongT_Set__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long.swigGetCPtr(quat));
  }

  public void Get(SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long quat) const {
    vtkd_im.vtkQuaternionULongT_Get(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long.swigGetCPtr(quat));
  }

  public void SetW(core.stdc.config.c_ulong w) {
    vtkd_im.vtkQuaternionULongT_SetW(cast(void*)swigCPtr, w);
  }

  public core.stdc.config.c_ulong GetW() const {
    auto ret = vtkd_im.vtkQuaternionULongT_GetW(cast(void*)swigCPtr);
    return ret;
  }

  public void SetX(core.stdc.config.c_ulong x) {
    vtkd_im.vtkQuaternionULongT_SetX(cast(void*)swigCPtr, x);
  }

  public core.stdc.config.c_ulong GetX() const {
    auto ret = vtkd_im.vtkQuaternionULongT_GetX(cast(void*)swigCPtr);
    return ret;
  }

  public void SetY(core.stdc.config.c_ulong y) {
    vtkd_im.vtkQuaternionULongT_SetY(cast(void*)swigCPtr, y);
  }

  public core.stdc.config.c_ulong GetY() const {
    auto ret = vtkd_im.vtkQuaternionULongT_GetY(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZ(core.stdc.config.c_ulong z) {
    vtkd_im.vtkQuaternionULongT_SetZ(cast(void*)swigCPtr, z);
  }

  public core.stdc.config.c_ulong GetZ() const {
    auto ret = vtkd_im.vtkQuaternionULongT_GetZ(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong GetRotationAngleAndAxis(SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long axis) const {
    auto ret = vtkd_im.vtkQuaternionULongT_GetRotationAngleAndAxis(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long.swigGetCPtr(axis));
    return ret;
  }

  public void SetRotationAngleAndAxis(core.stdc.config.c_ulong angle, SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long axis) {
    vtkd_im.vtkQuaternionULongT_SetRotationAngleAndAxis__SWIG_0(cast(void*)swigCPtr, angle, SWIGTYPE_p_unsigned_long.SWIGTYPE_p_unsigned_long.swigGetCPtr(axis));
  }

  public void SetRotationAngleAndAxis(core.stdc.config.c_ulong angle, core.stdc.config.c_ulong x, core.stdc.config.c_ulong y, core.stdc.config.c_ulong z) {
    vtkd_im.vtkQuaternionULongT_SetRotationAngleAndAxis__SWIG_1(cast(void*)swigCPtr, angle, x, y, z);
  }

  public void ToMatrix3x3(SWIGTYPE_p_a_3__unsigned_long.SWIGTYPE_p_a_3__unsigned_long A) const {
    vtkd_im.vtkQuaternionULongT_ToMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__unsigned_long.SWIGTYPE_p_a_3__unsigned_long.swigGetCPtr(A));
  }

  public void FromMatrix3x3(SWIGTYPE_p_a_3__unsigned_long.SWIGTYPE_p_a_3__unsigned_long A) {
    vtkd_im.vtkQuaternionULongT_FromMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__unsigned_long.SWIGTYPE_p_a_3__unsigned_long.swigGetCPtr(A));
  }

  public vtkQuaternionULongT Slerp(core.stdc.config.c_ulong t, vtkQuaternionULongT q) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_Slerp(cast(void*)swigCPtr, t, vtkQuaternionULongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongT InnerPoint(vtkQuaternionULongT q1, vtkQuaternionULongT q2) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_InnerPoint(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q1), vtkQuaternionULongT.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Equal(vtkQuaternionULongT q) {
    vtkd_im.vtkQuaternionULongT_Equal(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkQuaternionULongT swigOpAdd(vtkQuaternionULongT q) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongT swigOpSub(vtkQuaternionULongT q) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpSub(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongT swigOpMul(vtkQuaternionULongT q) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongT swigOpMul(core.stdc.config.c_ulong scalar) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpMulAssign(core.stdc.config.c_ulong scalar) const {
    vtkd_im.vtkQuaternionULongT_swigOpMulAssign(cast(void*)swigCPtr, scalar);
  }

  public vtkQuaternionULongT swigOpDiv(vtkQuaternionULongT q) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionULongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongT swigOpDiv(core.stdc.config.c_ulong scalar) const {
    vtkQuaternionULongT ret = new vtkQuaternionULongT(vtkd_im.vtkQuaternionULongT_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpDivAssign(core.stdc.config.c_ulong scalar) {
    vtkd_im.vtkQuaternionULongT_swigOpDivAssign(cast(void*)swigCPtr, scalar);
  }
}
