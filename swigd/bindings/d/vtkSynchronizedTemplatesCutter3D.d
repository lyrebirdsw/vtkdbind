/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSynchronizedTemplatesCutter3D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageData;
static import vtkInformation;
static import vtkImplicitFunction;
static import vtkSynchronizedTemplates3D;

class vtkSynchronizedTemplatesCutter3D : vtkSynchronizedTemplates3D.vtkSynchronizedTemplates3D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSynchronizedTemplatesCutter3D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSynchronizedTemplatesCutter3D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSynchronizedTemplatesCutter3D New() {
    void* cPtr = vtkd_im.vtkSynchronizedTemplatesCutter3D_New();
    vtkSynchronizedTemplatesCutter3D ret = (cPtr is null) ? null : new vtkSynchronizedTemplatesCutter3D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSynchronizedTemplatesCutter3D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSynchronizedTemplatesCutter3D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSynchronizedTemplatesCutter3D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSynchronizedTemplatesCutter3D ret = (cPtr is null) ? null : new vtkSynchronizedTemplatesCutter3D(cPtr, false);
    return ret;
  }

  public vtkSynchronizedTemplatesCutter3D NewInstance() const {
    void* cPtr = vtkd_im.vtkSynchronizedTemplatesCutter3D_NewInstance(cast(void*)swigCPtr);
    vtkSynchronizedTemplatesCutter3D ret = (cPtr is null) ? null : new vtkSynchronizedTemplatesCutter3D(cPtr, false);
    return ret;
  }

  alias vtkSynchronizedTemplates3D.vtkSynchronizedTemplates3D.NewInstance NewInstance;

  public void ThreadedExecute(vtkImageData.vtkImageData data, vtkInformation.vtkInformation outInfo, int* exExt, int arg3) {
    vtkd_im.vtkSynchronizedTemplatesCutter3D_ThreadedExecute(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(data), vtkInformation.vtkInformation.swigGetCPtr(outInfo), cast(void*)exExt, arg3);
  }

  alias vtkSynchronizedTemplates3D.vtkSynchronizedTemplates3D.ThreadedExecute ThreadedExecute;

  public void SetCutFunction(vtkImplicitFunction.vtkImplicitFunction arg0) {
    vtkd_im.vtkSynchronizedTemplatesCutter3D_SetCutFunction(cast(void*)swigCPtr, vtkImplicitFunction.vtkImplicitFunction.swigGetCPtr(arg0));
  }

  public vtkImplicitFunction.vtkImplicitFunction GetCutFunction() {
    void* cPtr = vtkd_im.vtkSynchronizedTemplatesCutter3D_GetCutFunction(cast(void*)swigCPtr);
    vtkImplicitFunction.vtkImplicitFunction ret = (cPtr is null) ? null : new vtkImplicitFunction.vtkImplicitFunction(cPtr, false);
    return ret;
  }

  public void SetOutputPointsPrecision(int _arg) {
    vtkd_im.vtkSynchronizedTemplatesCutter3D_SetOutputPointsPrecision(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputPointsPrecisionMinValue() {
    auto ret = vtkd_im.vtkSynchronizedTemplatesCutter3D_GetOutputPointsPrecisionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputPointsPrecisionMaxValue() {
    auto ret = vtkd_im.vtkSynchronizedTemplatesCutter3D_GetOutputPointsPrecisionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputPointsPrecision() {
    auto ret = vtkd_im.vtkSynchronizedTemplatesCutter3D_GetOutputPointsPrecision(cast(void*)swigCPtr);
    return ret;
  }
}
