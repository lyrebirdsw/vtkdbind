/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLabelPlacementMapper;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkLabelRenderStrategy;
static import SWIGTYPE_p_double;
static import vtkCoordinate;
static import vtkMapper2D;

class vtkLabelPlacementMapper : vtkMapper2D.vtkMapper2D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkLabelPlacementMapper_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkLabelPlacementMapper obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkLabelPlacementMapper New() {
    void* cPtr = vtkd_im.vtkLabelPlacementMapper_New();
    vtkLabelPlacementMapper ret = (cPtr is null) ? null : new vtkLabelPlacementMapper(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkLabelPlacementMapper_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkLabelPlacementMapper SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkLabelPlacementMapper_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkLabelPlacementMapper ret = (cPtr is null) ? null : new vtkLabelPlacementMapper(cPtr, false);
    return ret;
  }

  public vtkLabelPlacementMapper NewInstance() const {
    void* cPtr = vtkd_im.vtkLabelPlacementMapper_NewInstance(cast(void*)swigCPtr);
    vtkLabelPlacementMapper ret = (cPtr is null) ? null : new vtkLabelPlacementMapper(cPtr, false);
    return ret;
  }

  alias vtkMapper2D.vtkMapper2D.NewInstance NewInstance;

  public void SetRenderStrategy(vtkLabelRenderStrategy.vtkLabelRenderStrategy s) {
    vtkd_im.vtkLabelPlacementMapper_SetRenderStrategy(cast(void*)swigCPtr, vtkLabelRenderStrategy.vtkLabelRenderStrategy.swigGetCPtr(s));
  }

  public vtkLabelRenderStrategy.vtkLabelRenderStrategy GetRenderStrategy() {
    void* cPtr = vtkd_im.vtkLabelPlacementMapper_GetRenderStrategy(cast(void*)swigCPtr);
    vtkLabelRenderStrategy.vtkLabelRenderStrategy ret = (cPtr is null) ? null : new vtkLabelRenderStrategy.vtkLabelRenderStrategy(cPtr, false);
    return ret;
  }

  public void SetMaximumLabelFraction(double _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetMaximumLabelFraction(cast(void*)swigCPtr, _arg);
  }

  public double GetMaximumLabelFractionMinValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetMaximumLabelFractionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumLabelFractionMaxValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetMaximumLabelFractionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumLabelFraction() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetMaximumLabelFraction(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIteratorType(int _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetIteratorType(cast(void*)swigCPtr, _arg);
  }

  public int GetIteratorType() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetIteratorType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseUnicodeStrings(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetUseUnicodeStrings(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseUnicodeStrings() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetUseUnicodeStrings(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseUnicodeStringsOn() {
    vtkd_im.vtkLabelPlacementMapper_UseUnicodeStringsOn(cast(void*)swigCPtr);
  }

  public void UseUnicodeStringsOff() {
    vtkd_im.vtkLabelPlacementMapper_UseUnicodeStringsOff(cast(void*)swigCPtr);
  }

  public bool GetPositionsAsNormals() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetPositionsAsNormals(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetPositionsAsNormals(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetPositionsAsNormals(cast(void*)swigCPtr, _arg);
  }

  public void PositionsAsNormalsOn() {
    vtkd_im.vtkLabelPlacementMapper_PositionsAsNormalsOn(cast(void*)swigCPtr);
  }

  public void PositionsAsNormalsOff() {
    vtkd_im.vtkLabelPlacementMapper_PositionsAsNormalsOff(cast(void*)swigCPtr);
  }

  public bool GetGeneratePerturbedLabelSpokes() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetGeneratePerturbedLabelSpokes(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetGeneratePerturbedLabelSpokes(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetGeneratePerturbedLabelSpokes(cast(void*)swigCPtr, _arg);
  }

  public void GeneratePerturbedLabelSpokesOn() {
    vtkd_im.vtkLabelPlacementMapper_GeneratePerturbedLabelSpokesOn(cast(void*)swigCPtr);
  }

  public void GeneratePerturbedLabelSpokesOff() {
    vtkd_im.vtkLabelPlacementMapper_GeneratePerturbedLabelSpokesOff(cast(void*)swigCPtr);
  }

  public bool GetUseDepthBuffer() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetUseDepthBuffer(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetUseDepthBuffer(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetUseDepthBuffer(cast(void*)swigCPtr, _arg);
  }

  public void UseDepthBufferOn() {
    vtkd_im.vtkLabelPlacementMapper_UseDepthBufferOn(cast(void*)swigCPtr);
  }

  public void UseDepthBufferOff() {
    vtkd_im.vtkLabelPlacementMapper_UseDepthBufferOff(cast(void*)swigCPtr);
  }

  public void SetPlaceAllLabels(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetPlaceAllLabels(cast(void*)swigCPtr, _arg);
  }

  public bool GetPlaceAllLabels() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetPlaceAllLabels(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void PlaceAllLabelsOn() {
    vtkd_im.vtkLabelPlacementMapper_PlaceAllLabelsOn(cast(void*)swigCPtr);
  }

  public void PlaceAllLabelsOff() {
    vtkd_im.vtkLabelPlacementMapper_PlaceAllLabelsOff(cast(void*)swigCPtr);
  }

  public void SetOutputTraversedBounds(bool _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetOutputTraversedBounds(cast(void*)swigCPtr, _arg);
  }

  public bool GetOutputTraversedBounds() {
    bool ret = vtkd_im.vtkLabelPlacementMapper_GetOutputTraversedBounds(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void OutputTraversedBoundsOn() {
    vtkd_im.vtkLabelPlacementMapper_OutputTraversedBoundsOn(cast(void*)swigCPtr);
  }

  public void OutputTraversedBoundsOff() {
    vtkd_im.vtkLabelPlacementMapper_OutputTraversedBoundsOff(cast(void*)swigCPtr);
  }

  public void SetShape(int _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetShape(cast(void*)swigCPtr, _arg);
  }

  public int GetShapeMinValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetShapeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShapeMaxValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetShapeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShape() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetShape(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShapeToNone() {
    vtkd_im.vtkLabelPlacementMapper_SetShapeToNone(cast(void*)swigCPtr);
  }

  public void SetShapeToRect() {
    vtkd_im.vtkLabelPlacementMapper_SetShapeToRect(cast(void*)swigCPtr);
  }

  public void SetShapeToRoundedRect() {
    vtkd_im.vtkLabelPlacementMapper_SetShapeToRoundedRect(cast(void*)swigCPtr);
  }

  public void SetStyle(int _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetStyle(cast(void*)swigCPtr, _arg);
  }

  public int GetStyleMinValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetStyleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetStyleMaxValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetStyleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetStyle() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetStyle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetStyleToFilled() {
    vtkd_im.vtkLabelPlacementMapper_SetStyleToFilled(cast(void*)swigCPtr);
  }

  public void SetStyleToOutline() {
    vtkd_im.vtkLabelPlacementMapper_SetStyleToOutline(cast(void*)swigCPtr);
  }

  public void SetMargin(double _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetMargin(cast(void*)swigCPtr, _arg);
  }

  public double GetMargin() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetMargin(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBackgroundColor(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkLabelPlacementMapper_SetBackgroundColor__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetBackgroundColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetBackgroundColor__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetBackgroundColor() {
    auto ret = cast(double*)vtkd_im.vtkLabelPlacementMapper_GetBackgroundColor__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBackgroundColor(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkLabelPlacementMapper_GetBackgroundColor__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetBackgroundColor(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkLabelPlacementMapper_GetBackgroundColor__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetBackgroundOpacity(double _arg) {
    vtkd_im.vtkLabelPlacementMapper_SetBackgroundOpacity(cast(void*)swigCPtr, _arg);
  }

  public double GetBackgroundOpacityMinValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetBackgroundOpacityMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetBackgroundOpacityMaxValue() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetBackgroundOpacityMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetBackgroundOpacity() {
    auto ret = vtkd_im.vtkLabelPlacementMapper_GetBackgroundOpacity(cast(void*)swigCPtr);
    return ret;
  }

  public vtkCoordinate.vtkCoordinate GetAnchorTransform() {
    void* cPtr = vtkd_im.vtkLabelPlacementMapper_GetAnchorTransform(cast(void*)swigCPtr);
    vtkCoordinate.vtkCoordinate ret = (cPtr is null) ? null : new vtkCoordinate.vtkCoordinate(cPtr, false);
    return ret;
  }
}
