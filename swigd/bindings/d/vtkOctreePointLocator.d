/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkOctreePointLocator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkIdTypeArray;
static import vtkAbstractPointLocator;

class vtkOctreePointLocator : vtkAbstractPointLocator.vtkAbstractPointLocator {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkOctreePointLocator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkOctreePointLocator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkOctreePointLocator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkOctreePointLocator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkOctreePointLocator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkOctreePointLocator ret = (cPtr is null) ? null : new vtkOctreePointLocator(cPtr, false);
    return ret;
  }

  public vtkOctreePointLocator NewInstance() const {
    void* cPtr = vtkd_im.vtkOctreePointLocator_NewInstance(cast(void*)swigCPtr);
    vtkOctreePointLocator ret = (cPtr is null) ? null : new vtkOctreePointLocator(cPtr, false);
    return ret;
  }

  alias vtkAbstractPointLocator.vtkAbstractPointLocator.NewInstance NewInstance;

  public static vtkOctreePointLocator New() {
    void* cPtr = vtkd_im.vtkOctreePointLocator_New();
    vtkOctreePointLocator ret = (cPtr is null) ? null : new vtkOctreePointLocator(cPtr, false);
    return ret;
  }

  public void SetMaximumPointsPerRegion(int _arg) {
    vtkd_im.vtkOctreePointLocator_SetMaximumPointsPerRegion(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumPointsPerRegion() {
    auto ret = vtkd_im.vtkOctreePointLocator_GetMaximumPointsPerRegion(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCreateCubicOctants(int _arg) {
    vtkd_im.vtkOctreePointLocator_SetCreateCubicOctants(cast(void*)swigCPtr, _arg);
  }

  public int GetCreateCubicOctants() {
    auto ret = vtkd_im.vtkOctreePointLocator_GetCreateCubicOctants(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFudgeFactor() {
    auto ret = vtkd_im.vtkOctreePointLocator_GetFudgeFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFudgeFactor(double _arg) {
    vtkd_im.vtkOctreePointLocator_SetFudgeFactor(cast(void*)swigCPtr, _arg);
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkOctreePointLocator_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public override void GetBounds(double* bounds) {
    vtkd_im.vtkOctreePointLocator_GetBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)bounds);
  }

  public int GetNumberOfLeafNodes() {
    auto ret = vtkd_im.vtkOctreePointLocator_GetNumberOfLeafNodes(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRegionBounds(int regionID, SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkOctreePointLocator_GetRegionBounds(cast(void*)swigCPtr, regionID, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public void GetRegionDataBounds(int leafNodeID, SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkOctreePointLocator_GetRegionDataBounds(cast(void*)swigCPtr, leafNodeID, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public int GetRegionContainingPoint(double x, double y, double z) {
    auto ret = vtkd_im.vtkOctreePointLocator_GetRegionContainingPoint(cast(void*)swigCPtr, x, y, z);
    return ret;
  }

  public override long FindClosestPoint(SWIGTYPE_p_double.SWIGTYPE_p_double x) {
    auto ret = vtkd_im.vtkOctreePointLocator_FindClosestPoint__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(x));
    return ret;
  }

  public long FindClosestPoint(double x, double y, double z, double* dist2) {
    auto ret = vtkd_im.vtkOctreePointLocator_FindClosestPoint__SWIG_1(cast(void*)swigCPtr, x, y, z, cast(void*)dist2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  alias vtkAbstractPointLocator.vtkAbstractPointLocator.FindClosestPoint FindClosestPoint;

  public long FindClosestPointInRegion(int regionId, double* x, double* dist2) {
    auto ret = vtkd_im.vtkOctreePointLocator_FindClosestPointInRegion__SWIG_0(cast(void*)swigCPtr, regionId, cast(void*)x, cast(void*)dist2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public long FindClosestPointInRegion(int regionId, double x, double y, double z, double* dist2) {
    auto ret = vtkd_im.vtkOctreePointLocator_FindClosestPointInRegion__SWIG_1(cast(void*)swigCPtr, regionId, x, y, z, cast(void*)dist2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkIdTypeArray.vtkIdTypeArray GetPointsInRegion(int leafNodeId) {
    void* cPtr = vtkd_im.vtkOctreePointLocator_GetPointsInRegion(cast(void*)swigCPtr, leafNodeId);
    vtkIdTypeArray.vtkIdTypeArray ret = (cPtr is null) ? null : new vtkIdTypeArray.vtkIdTypeArray(cPtr, false);
    return ret;
  }

  public void FindPointsInArea(double* area, vtkIdTypeArray.vtkIdTypeArray ids, bool clearArray) {
    vtkd_im.vtkOctreePointLocator_FindPointsInArea__SWIG_0(cast(void*)swigCPtr, cast(void*)area, vtkIdTypeArray.vtkIdTypeArray.swigGetCPtr(ids), clearArray);
  }

  public void FindPointsInArea(double* area, vtkIdTypeArray.vtkIdTypeArray ids) {
    vtkd_im.vtkOctreePointLocator_FindPointsInArea__SWIG_1(cast(void*)swigCPtr, cast(void*)area, vtkIdTypeArray.vtkIdTypeArray.swigGetCPtr(ids));
  }
}
