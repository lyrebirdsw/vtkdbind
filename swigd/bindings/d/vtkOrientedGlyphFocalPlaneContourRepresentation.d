/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkOrientedGlyphFocalPlaneContourRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkProperty2D;
static import vtkMatrix4x4;
static import SWIGTYPE_p_double;
static import vtkFocalPlaneContourRepresentation;

class vtkOrientedGlyphFocalPlaneContourRepresentation : vtkFocalPlaneContourRepresentation.vtkFocalPlaneContourRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkOrientedGlyphFocalPlaneContourRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkOrientedGlyphFocalPlaneContourRepresentation New() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_New();
    vtkOrientedGlyphFocalPlaneContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphFocalPlaneContourRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkOrientedGlyphFocalPlaneContourRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkOrientedGlyphFocalPlaneContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphFocalPlaneContourRepresentation(cPtr, false);
    return ret;
  }

  public vtkOrientedGlyphFocalPlaneContourRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkOrientedGlyphFocalPlaneContourRepresentation ret = (cPtr is null) ? null : new vtkOrientedGlyphFocalPlaneContourRepresentation(cPtr, false);
    return ret;
  }

  alias vtkFocalPlaneContourRepresentation.vtkFocalPlaneContourRepresentation.NewInstance NewInstance;

  public void SetCursorShape(vtkPolyData.vtkPolyData cursorShape) {
    vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_SetCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(cursorShape));
  }

  public vtkPolyData.vtkPolyData GetCursorShape() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetActiveCursorShape(vtkPolyData.vtkPolyData activeShape) {
    vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_SetActiveCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(activeShape));
  }

  public vtkPolyData.vtkPolyData GetActiveCursorShape() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetActiveCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetActiveProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetActiveProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetLinesProperty() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetLinesProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y, int modified) {
    auto ret = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modified);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public vtkPolyData.vtkPolyData GetContourRepresentationAsPolyData() {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetContourRepresentationAsPolyData(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public vtkMatrix4x4.vtkMatrix4x4 GetContourPlaneDirectionCosines(SWIGTYPE_p_double.SWIGTYPE_p_double origin) {
    void* cPtr = vtkd_im.vtkOrientedGlyphFocalPlaneContourRepresentation_GetContourPlaneDirectionCosines(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(origin));
    vtkMatrix4x4.vtkMatrix4x4 ret = (cPtr is null) ? null : new vtkMatrix4x4.vtkMatrix4x4(cPtr, false);
    return ret;
  }
}
