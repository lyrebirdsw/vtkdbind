/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkMultiBlockPLOT3DReaderInternals;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t;
static import SWIGTYPE_p_FILE;

class vtkMultiBlockPLOT3DReaderInternals {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkMultiBlockPLOT3DReaderInternals obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkMultiBlockPLOT3DReaderInternals(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void Blocks(SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_Blocks_set(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.swigGetCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t Blocks() @property const {
    void* cPtr = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_Blocks_get(cast(void*)swigCPtr);
    SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t ret = (cPtr is null) ? null : new SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t.SWIGTYPE_p_std__vectorT_vtkSmartPointerT_vtkStructuredGrid_t_t(cPtr, false);
    return ret;
  }

  public void BinaryFile(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_BinaryFile_set(cast(void*)swigCPtr, value);
  }

  public int BinaryFile() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_BinaryFile_get(cast(void*)swigCPtr);
    return ret;
  }

  public void ByteOrder(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_ByteOrder_set(cast(void*)swigCPtr, value);
  }

  public int ByteOrder() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_ByteOrder_get(cast(void*)swigCPtr);
    return ret;
  }

  public void HasByteCount(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_HasByteCount_set(cast(void*)swigCPtr, value);
  }

  public int HasByteCount() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_HasByteCount_get(cast(void*)swigCPtr);
    return ret;
  }

  public void MultiGrid(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_MultiGrid_set(cast(void*)swigCPtr, value);
  }

  public int MultiGrid() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_MultiGrid_get(cast(void*)swigCPtr);
    return ret;
  }

  public void NumberOfDimensions(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_NumberOfDimensions_set(cast(void*)swigCPtr, value);
  }

  public int NumberOfDimensions() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_NumberOfDimensions_get(cast(void*)swigCPtr);
    return ret;
  }

  public void Precision(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_Precision_set(cast(void*)swigCPtr, value);
  }

  public int Precision() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_Precision_get(cast(void*)swigCPtr);
    return ret;
  }

  public void IBlanking(int value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_IBlanking_set(cast(void*)swigCPtr, value);
  }

  public int IBlanking() @property const {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_IBlanking_get(cast(void*)swigCPtr);
    return ret;
  }

  public void NeedToCheckXYZFile(bool value) @property {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_NeedToCheckXYZFile_set(cast(void*)swigCPtr, value);
  }

  public bool NeedToCheckXYZFile() @property const {
    bool ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_NeedToCheckXYZFile_get(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkMultiBlockPLOT3DReaderInternals(), true);
  }

  public int ReadInts(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp, int n, int* val) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_ReadInts(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp), n, cast(void*)val);
    return ret;
  }

  public void CheckBinaryFile(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckBinaryFile(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
  }

  public int CheckByteOrder(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckByteOrder(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
    return ret;
  }

  public int CheckByteCount(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckByteCount(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
    return ret;
  }

  public int CheckMultiGrid(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckMultiGrid(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
    return ret;
  }

  public int Check2DGeom(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_Check2DGeom(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
    return ret;
  }

  public int CheckBlankingAndPrecision(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckBlankingAndPrecision(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp));
    return ret;
  }

  public int CheckCFile(SWIGTYPE_p_FILE.SWIGTYPE_p_FILE fp, core.stdc.config.c_long fileSize) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CheckCFile(cast(void*)swigCPtr, SWIGTYPE_p_FILE.SWIGTYPE_p_FILE.swigGetCPtr(fp), fileSize);
    return ret;
  }

  public core.stdc.config.c_long CalculateFileSize(int mgrid, int precision, int blanking, int ndims, int hasByteCount, int nGrids, int* gridDims) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CalculateFileSize(cast(void*)swigCPtr, mgrid, precision, blanking, ndims, hasByteCount, nGrids, cast(void*)gridDims);
    return ret;
  }

  public core.stdc.config.c_long CalculateFileSizeForBlock(int precision, int blanking, int ndims, int hasByteCount, int* gridDims) {
    auto ret = vtkd_im.vtkMultiBlockPLOT3DReaderInternals_CalculateFileSizeForBlock(cast(void*)swigCPtr, precision, blanking, ndims, hasByteCount, cast(void*)gridDims);
    return ret;
  }
}
