/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkDataObject;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkInformation;
static import vtkFieldData;
static import vtkDataSetAttributes;
static import vtkAbstractArray;
static import vtkInformationStringKey;
static import vtkInformationDataObjectKey;
static import vtkInformationIntegerKey;
static import vtkInformationIntegerPointerKey;
static import vtkInformationDoubleKey;
static import vtkInformationInformationVectorKey;
static import vtkInformationDoubleVectorKey;
static import vtkInformationIntegerVectorKey;
static import vtkObject;

class vtkDataObject : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkDataObject_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkDataObject obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkDataObject New() {
    void* cPtr = vtkd_im.vtkDataObject_New();
    vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkDataObject_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkDataObject SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkDataObject_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject(cPtr, false);
    return ret;
  }

  public vtkDataObject NewInstance() const {
    void* cPtr = vtkd_im.vtkDataObject_NewInstance(cast(void*)swigCPtr);
    vtkDataObject ret = (cPtr is null) ? null : new vtkDataObject(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public vtkInformation.vtkInformation GetInformation() {
    void* cPtr = vtkd_im.vtkDataObject_GetInformation(cast(void*)swigCPtr);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public void SetInformation(vtkInformation.vtkInformation arg0) {
    vtkd_im.vtkDataObject_SetInformation(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0));
  }

  public void Initialize() {
    vtkd_im.vtkDataObject_Initialize(cast(void*)swigCPtr);
  }

  public void ReleaseData() {
    vtkd_im.vtkDataObject_ReleaseData(cast(void*)swigCPtr);
  }

  public int GetDataReleased() {
    auto ret = vtkd_im.vtkDataObject_GetDataReleased(cast(void*)swigCPtr);
    return ret;
  }

  public static void SetGlobalReleaseDataFlag(int val) {
    vtkd_im.vtkDataObject_SetGlobalReleaseDataFlag(val);
  }

  public void GlobalReleaseDataFlagOn() {
    vtkd_im.vtkDataObject_GlobalReleaseDataFlagOn(cast(void*)swigCPtr);
  }

  public void GlobalReleaseDataFlagOff() {
    vtkd_im.vtkDataObject_GlobalReleaseDataFlagOff(cast(void*)swigCPtr);
  }

  public static int GetGlobalReleaseDataFlag() {
    auto ret = vtkd_im.vtkDataObject_GetGlobalReleaseDataFlag();
    return ret;
  }

  public void SetFieldData(vtkFieldData.vtkFieldData arg0) {
    vtkd_im.vtkDataObject_SetFieldData(cast(void*)swigCPtr, vtkFieldData.vtkFieldData.swigGetCPtr(arg0));
  }

  public vtkFieldData.vtkFieldData GetFieldData() {
    void* cPtr = vtkd_im.vtkDataObject_GetFieldData(cast(void*)swigCPtr);
    vtkFieldData.vtkFieldData ret = (cPtr is null) ? null : new vtkFieldData.vtkFieldData(cPtr, false);
    return ret;
  }

  public int GetDataObjectType() {
    auto ret = vtkd_im.vtkDataObject_GetDataObjectType(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong GetUpdateTime() {
    auto ret = vtkd_im.vtkDataObject_GetUpdateTime(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong GetActualMemorySize() {
    auto ret = vtkd_im.vtkDataObject_GetActualMemorySize(cast(void*)swigCPtr);
    return ret;
  }

  public void CopyInformationFromPipeline(vtkInformation.vtkInformation arg0) {
    vtkd_im.vtkDataObject_CopyInformationFromPipeline(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0));
  }

  public static vtkInformation.vtkInformation GetActiveFieldInformation(vtkInformation.vtkInformation info, int fieldAssociation, int attributeType) {
    void* cPtr = vtkd_im.vtkDataObject_GetActiveFieldInformation(vtkInformation.vtkInformation.swigGetCPtr(info), fieldAssociation, attributeType);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public static vtkInformation.vtkInformation GetNamedFieldInformation(vtkInformation.vtkInformation info, int fieldAssociation, string name) {
    void* cPtr = vtkd_im.vtkDataObject_GetNamedFieldInformation(vtkInformation.vtkInformation.swigGetCPtr(info), fieldAssociation, (name ? std.string.toStringz(name) : null));
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public static void RemoveNamedFieldInformation(vtkInformation.vtkInformation info, int fieldAssociation, string name) {
    vtkd_im.vtkDataObject_RemoveNamedFieldInformation(vtkInformation.vtkInformation.swigGetCPtr(info), fieldAssociation, (name ? std.string.toStringz(name) : null));
  }

  public static vtkInformation.vtkInformation SetActiveAttribute(vtkInformation.vtkInformation info, int fieldAssociation, string attributeName, int attributeType) {
    void* cPtr = vtkd_im.vtkDataObject_SetActiveAttribute(vtkInformation.vtkInformation.swigGetCPtr(info), fieldAssociation, (attributeName ? std.string.toStringz(attributeName) : null), attributeType);
    vtkInformation.vtkInformation ret = (cPtr is null) ? null : new vtkInformation.vtkInformation(cPtr, false);
    return ret;
  }

  public static void SetActiveAttributeInfo(vtkInformation.vtkInformation info, int fieldAssociation, int attributeType, string name, int arrayType, int numComponents, int numTuples) {
    vtkd_im.vtkDataObject_SetActiveAttributeInfo(vtkInformation.vtkInformation.swigGetCPtr(info), fieldAssociation, attributeType, (name ? std.string.toStringz(name) : null), arrayType, numComponents, numTuples);
  }

  public static void SetPointDataActiveScalarInfo(vtkInformation.vtkInformation info, int arrayType, int numComponents) {
    vtkd_im.vtkDataObject_SetPointDataActiveScalarInfo(vtkInformation.vtkInformation.swigGetCPtr(info), arrayType, numComponents);
  }

  public void DataHasBeenGenerated() {
    vtkd_im.vtkDataObject_DataHasBeenGenerated(cast(void*)swigCPtr);
  }

  public void PrepareForNewData() {
    vtkd_im.vtkDataObject_PrepareForNewData(cast(void*)swigCPtr);
  }

  public void ShallowCopy(vtkDataObject src) {
    vtkd_im.vtkDataObject_ShallowCopy(cast(void*)swigCPtr, vtkDataObject.swigGetCPtr(src));
  }

  public void DeepCopy(vtkDataObject src) {
    vtkd_im.vtkDataObject_DeepCopy(cast(void*)swigCPtr, vtkDataObject.swigGetCPtr(src));
  }

  public int GetExtentType() {
    auto ret = vtkd_im.vtkDataObject_GetExtentType(cast(void*)swigCPtr);
    return ret;
  }

  public void Crop(int* updateExtent) {
    vtkd_im.vtkDataObject_Crop(cast(void*)swigCPtr, cast(void*)updateExtent);
  }

  public vtkDataSetAttributes.vtkDataSetAttributes GetAttributes(int type) {
    void* cPtr = vtkd_im.vtkDataObject_GetAttributes(cast(void*)swigCPtr, type);
    vtkDataSetAttributes.vtkDataSetAttributes ret = (cPtr is null) ? null : new vtkDataSetAttributes.vtkDataSetAttributes(cPtr, false);
    return ret;
  }

  public vtkFieldData.vtkFieldData GetAttributesAsFieldData(int type) {
    void* cPtr = vtkd_im.vtkDataObject_GetAttributesAsFieldData(cast(void*)swigCPtr, type);
    vtkFieldData.vtkFieldData ret = (cPtr is null) ? null : new vtkFieldData.vtkFieldData(cPtr, false);
    return ret;
  }

  public int GetAttributeTypeForArray(vtkAbstractArray.vtkAbstractArray arr) {
    auto ret = vtkd_im.vtkDataObject_GetAttributeTypeForArray(cast(void*)swigCPtr, vtkAbstractArray.vtkAbstractArray.swigGetCPtr(arr));
    return ret;
  }

  public long GetNumberOfElements(int type) {
    auto ret = vtkd_im.vtkDataObject_GetNumberOfElements(cast(void*)swigCPtr, type);
    return ret;
  }

  public static string GetAssociationTypeAsString(int associationType) {
    string ret = std.conv.to!string(vtkd_im.vtkDataObject_GetAssociationTypeAsString(associationType));
    return ret;
  }

  public static int GetAssociationTypeFromString(string associationType) {
    auto ret = vtkd_im.vtkDataObject_GetAssociationTypeFromString((associationType ? std.string.toStringz(associationType) : null));
    return ret;
  }

  public static vtkInformationStringKey.vtkInformationStringKey DATA_TYPE_NAME() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_TYPE_NAME();
    vtkInformationStringKey.vtkInformationStringKey ret = (cPtr is null) ? null : new vtkInformationStringKey.vtkInformationStringKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDataObjectKey.vtkInformationDataObjectKey DATA_OBJECT() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_OBJECT();
    vtkInformationDataObjectKey.vtkInformationDataObjectKey ret = (cPtr is null) ? null : new vtkInformationDataObjectKey.vtkInformationDataObjectKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_EXTENT_TYPE() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_EXTENT_TYPE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerPointerKey.vtkInformationIntegerPointerKey DATA_EXTENT() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_EXTENT();
    vtkInformationIntegerPointerKey.vtkInformationIntegerPointerKey ret = (cPtr is null) ? null : new vtkInformationIntegerPointerKey.vtkInformationIntegerPointerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_PIECE_NUMBER() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_PIECE_NUMBER();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_NUMBER_OF_PIECES() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_NUMBER_OF_PIECES();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_NUMBER_OF_GHOST_LEVELS() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_NUMBER_OF_GHOST_LEVELS();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleKey.vtkInformationDoubleKey DATA_RESOLUTION() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_RESOLUTION();
    vtkInformationDoubleKey.vtkInformationDoubleKey ret = (cPtr is null) ? null : new vtkInformationDoubleKey.vtkInformationDoubleKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleKey.vtkInformationDoubleKey DATA_TIME_STEP() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_TIME_STEP();
    vtkInformationDoubleKey.vtkInformationDoubleKey ret = (cPtr is null) ? null : new vtkInformationDoubleKey.vtkInformationDoubleKey(cPtr, false);
    return ret;
  }

  public static vtkInformationInformationVectorKey.vtkInformationInformationVectorKey POINT_DATA_VECTOR() {
    void* cPtr = vtkd_im.vtkDataObject_POINT_DATA_VECTOR();
    vtkInformationInformationVectorKey.vtkInformationInformationVectorKey ret = (cPtr is null) ? null : new vtkInformationInformationVectorKey.vtkInformationInformationVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationInformationVectorKey.vtkInformationInformationVectorKey CELL_DATA_VECTOR() {
    void* cPtr = vtkd_im.vtkDataObject_CELL_DATA_VECTOR();
    vtkInformationInformationVectorKey.vtkInformationInformationVectorKey ret = (cPtr is null) ? null : new vtkInformationInformationVectorKey.vtkInformationInformationVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationInformationVectorKey.vtkInformationInformationVectorKey VERTEX_DATA_VECTOR() {
    void* cPtr = vtkd_im.vtkDataObject_VERTEX_DATA_VECTOR();
    vtkInformationInformationVectorKey.vtkInformationInformationVectorKey ret = (cPtr is null) ? null : new vtkInformationInformationVectorKey.vtkInformationInformationVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationInformationVectorKey.vtkInformationInformationVectorKey EDGE_DATA_VECTOR() {
    void* cPtr = vtkd_im.vtkDataObject_EDGE_DATA_VECTOR();
    vtkInformationInformationVectorKey.vtkInformationInformationVectorKey ret = (cPtr is null) ? null : new vtkInformationInformationVectorKey.vtkInformationInformationVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_ARRAY_TYPE() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_ARRAY_TYPE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_ASSOCIATION() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_ASSOCIATION();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_ATTRIBUTE_TYPE() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_ATTRIBUTE_TYPE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_ACTIVE_ATTRIBUTE() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_ACTIVE_ATTRIBUTE();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_NUMBER_OF_COMPONENTS() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_NUMBER_OF_COMPONENTS();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_NUMBER_OF_TUPLES() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_NUMBER_OF_TUPLES();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey FIELD_OPERATION() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_OPERATION();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey FIELD_RANGE() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_RANGE();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey PIECE_FIELD_RANGE() {
    void* cPtr = vtkd_im.vtkDataObject_PIECE_FIELD_RANGE();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationStringKey.vtkInformationStringKey FIELD_ARRAY_NAME() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_ARRAY_NAME();
    vtkInformationStringKey.vtkInformationStringKey ret = (cPtr is null) ? null : new vtkInformationStringKey.vtkInformationStringKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerVectorKey.vtkInformationIntegerVectorKey PIECE_EXTENT() {
    void* cPtr = vtkd_im.vtkDataObject_PIECE_EXTENT();
    vtkInformationIntegerVectorKey.vtkInformationIntegerVectorKey ret = (cPtr is null) ? null : new vtkInformationIntegerVectorKey.vtkInformationIntegerVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationStringKey.vtkInformationStringKey FIELD_NAME() {
    void* cPtr = vtkd_im.vtkDataObject_FIELD_NAME();
    vtkInformationStringKey.vtkInformationStringKey ret = (cPtr is null) ? null : new vtkInformationStringKey.vtkInformationStringKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ORIGIN() {
    void* cPtr = vtkd_im.vtkDataObject_ORIGIN();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey SPACING() {
    void* cPtr = vtkd_im.vtkDataObject_SPACING();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationIntegerKey.vtkInformationIntegerKey DATA_GEOMETRY_UNMODIFIED() {
    void* cPtr = vtkd_im.vtkDataObject_DATA_GEOMETRY_UNMODIFIED();
    vtkInformationIntegerKey.vtkInformationIntegerKey ret = (cPtr is null) ? null : new vtkInformationIntegerKey.vtkInformationIntegerKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey BOUNDING_BOX() {
    void* cPtr = vtkd_im.vtkDataObject_BOUNDING_BOX();
    vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey ret = (cPtr is null) ? null : new vtkInformationDoubleVectorKey.vtkInformationDoubleVectorKey(cPtr, false);
    return ret;
  }

  public static vtkInformationDataObjectKey.vtkInformationDataObjectKey SIL() {
    void* cPtr = vtkd_im.vtkDataObject_SIL();
    vtkInformationDataObjectKey.vtkInformationDataObjectKey ret = (cPtr is null) ? null : new vtkInformationDataObjectKey.vtkInformationDataObjectKey(cPtr, false);
    return ret;
  }
}
