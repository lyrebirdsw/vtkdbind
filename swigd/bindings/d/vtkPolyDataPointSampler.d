/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPolyDataPointSampler;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkPolyDataPointSampler : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPolyDataPointSampler_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPolyDataPointSampler obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkPolyDataPointSampler New() {
    void* cPtr = vtkd_im.vtkPolyDataPointSampler_New();
    vtkPolyDataPointSampler ret = (cPtr is null) ? null : new vtkPolyDataPointSampler(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPolyDataPointSampler_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPolyDataPointSampler SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPolyDataPointSampler_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPolyDataPointSampler ret = (cPtr is null) ? null : new vtkPolyDataPointSampler(cPtr, false);
    return ret;
  }

  public vtkPolyDataPointSampler NewInstance() const {
    void* cPtr = vtkd_im.vtkPolyDataPointSampler_NewInstance(cast(void*)swigCPtr);
    vtkPolyDataPointSampler ret = (cPtr is null) ? null : new vtkPolyDataPointSampler(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetDistance(double _arg) {
    vtkd_im.vtkPolyDataPointSampler_SetDistance(cast(void*)swigCPtr, _arg);
  }

  public double GetDistanceMinValue() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetDistanceMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistanceMaxValue() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetDistanceMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistance() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetDistance(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGenerateVertexPoints() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetGenerateVertexPoints(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateVertexPoints(int _arg) {
    vtkd_im.vtkPolyDataPointSampler_SetGenerateVertexPoints(cast(void*)swigCPtr, _arg);
  }

  public void GenerateVertexPointsOn() {
    vtkd_im.vtkPolyDataPointSampler_GenerateVertexPointsOn(cast(void*)swigCPtr);
  }

  public void GenerateVertexPointsOff() {
    vtkd_im.vtkPolyDataPointSampler_GenerateVertexPointsOff(cast(void*)swigCPtr);
  }

  public int GetGenerateEdgePoints() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetGenerateEdgePoints(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateEdgePoints(int _arg) {
    vtkd_im.vtkPolyDataPointSampler_SetGenerateEdgePoints(cast(void*)swigCPtr, _arg);
  }

  public void GenerateEdgePointsOn() {
    vtkd_im.vtkPolyDataPointSampler_GenerateEdgePointsOn(cast(void*)swigCPtr);
  }

  public void GenerateEdgePointsOff() {
    vtkd_im.vtkPolyDataPointSampler_GenerateEdgePointsOff(cast(void*)swigCPtr);
  }

  public int GetGenerateInteriorPoints() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetGenerateInteriorPoints(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateInteriorPoints(int _arg) {
    vtkd_im.vtkPolyDataPointSampler_SetGenerateInteriorPoints(cast(void*)swigCPtr, _arg);
  }

  public void GenerateInteriorPointsOn() {
    vtkd_im.vtkPolyDataPointSampler_GenerateInteriorPointsOn(cast(void*)swigCPtr);
  }

  public void GenerateInteriorPointsOff() {
    vtkd_im.vtkPolyDataPointSampler_GenerateInteriorPointsOff(cast(void*)swigCPtr);
  }

  public int GetGenerateVertices() {
    auto ret = vtkd_im.vtkPolyDataPointSampler_GetGenerateVertices(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateVertices(int _arg) {
    vtkd_im.vtkPolyDataPointSampler_SetGenerateVertices(cast(void*)swigCPtr, _arg);
  }

  public void GenerateVerticesOn() {
    vtkd_im.vtkPolyDataPointSampler_GenerateVerticesOn(cast(void*)swigCPtr);
  }

  public void GenerateVerticesOff() {
    vtkd_im.vtkPolyDataPointSampler_GenerateVerticesOff(cast(void*)swigCPtr);
  }
}
