/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkHardwareSelectionPolyDataPainter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStandardPolyDataPainter;

class vtkHardwareSelectionPolyDataPainter : vtkStandardPolyDataPainter.vtkStandardPolyDataPainter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkHardwareSelectionPolyDataPainter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkHardwareSelectionPolyDataPainter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkHardwareSelectionPolyDataPainter(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkHardwareSelectionPolyDataPainter New() {
    void* cPtr = vtkd_im.vtkHardwareSelectionPolyDataPainter_New();
    vtkHardwareSelectionPolyDataPainter ret = (cPtr is null) ? null : new vtkHardwareSelectionPolyDataPainter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkHardwareSelectionPolyDataPainter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkHardwareSelectionPolyDataPainter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkHardwareSelectionPolyDataPainter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkHardwareSelectionPolyDataPainter ret = (cPtr is null) ? null : new vtkHardwareSelectionPolyDataPainter(cPtr, false);
    return ret;
  }

  public vtkHardwareSelectionPolyDataPainter NewInstance() const {
    void* cPtr = vtkd_im.vtkHardwareSelectionPolyDataPainter_NewInstance(cast(void*)swigCPtr);
    vtkHardwareSelectionPolyDataPainter ret = (cPtr is null) ? null : new vtkHardwareSelectionPolyDataPainter(cPtr, false);
    return ret;
  }

  alias vtkStandardPolyDataPainter.vtkStandardPolyDataPainter.NewInstance NewInstance;

  public void SetEnableSelection(int _arg) {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_SetEnableSelection(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableSelection() {
    auto ret = vtkd_im.vtkHardwareSelectionPolyDataPainter_GetEnableSelection(cast(void*)swigCPtr);
    return ret;
  }

  public void EnableSelectionOn() {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_EnableSelectionOn(cast(void*)swigCPtr);
  }

  public void EnableSelectionOff() {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_EnableSelectionOff(cast(void*)swigCPtr);
  }

  public void SetPointIdArrayName(string _arg) {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_SetPointIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetPointIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHardwareSelectionPolyDataPainter_GetPointIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetCellIdArrayName(string _arg) {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_SetCellIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetCellIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHardwareSelectionPolyDataPainter_GetCellIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetProcessIdArrayName(string _arg) {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_SetProcessIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetProcessIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHardwareSelectionPolyDataPainter_GetProcessIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetCompositeIdArrayName(string _arg) {
    vtkd_im.vtkHardwareSelectionPolyDataPainter_SetCompositeIdArrayName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetCompositeIdArrayName() {
    string ret = std.conv.to!string(vtkd_im.vtkHardwareSelectionPolyDataPainter_GetCompositeIdArrayName(cast(void*)swigCPtr));
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkHardwareSelectionPolyDataPainter(), true);
  }
}
