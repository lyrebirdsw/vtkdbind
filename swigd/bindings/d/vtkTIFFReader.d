/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTIFFReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageReader2;

class vtkTIFFReader : vtkImageReader2.vtkImageReader2 {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTIFFReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTIFFReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTIFFReader New() {
    void* cPtr = vtkd_im.vtkTIFFReader_New();
    vtkTIFFReader ret = (cPtr is null) ? null : new vtkTIFFReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTIFFReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTIFFReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTIFFReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTIFFReader ret = (cPtr is null) ? null : new vtkTIFFReader(cPtr, false);
    return ret;
  }

  public vtkTIFFReader NewInstance() const {
    void* cPtr = vtkd_im.vtkTIFFReader_NewInstance(cast(void*)swigCPtr);
    vtkTIFFReader ret = (cPtr is null) ? null : new vtkTIFFReader(cPtr, false);
    return ret;
  }

  alias vtkImageReader2.vtkImageReader2.NewInstance NewInstance;

  public void InitializeColors() {
    vtkd_im.vtkTIFFReader_InitializeColors(cast(void*)swigCPtr);
  }

  public void ReadVolume(void* buffer) {
    vtkd_im.vtkTIFFReader_ReadVolume(cast(void*)swigCPtr, cast(void*)buffer);
  }

  public void ReadTiles(void* buffer) {
    vtkd_im.vtkTIFFReader_ReadTiles(cast(void*)swigCPtr, cast(void*)buffer);
  }

  public void SetOrientationType(uint orientationType) {
    vtkd_im.vtkTIFFReader_SetOrientationType(cast(void*)swigCPtr, orientationType);
  }

  public uint GetOrientationType() {
    auto ret = vtkd_im.vtkTIFFReader_GetOrientationType(cast(void*)swigCPtr);
    return ret;
  }

  public bool GetOrientationTypeSpecifiedFlag() {
    bool ret = vtkd_im.vtkTIFFReader_GetOrientationTypeSpecifiedFlag(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetOriginSpecifiedFlag(bool _arg) {
    vtkd_im.vtkTIFFReader_SetOriginSpecifiedFlag(cast(void*)swigCPtr, _arg);
  }

  public bool GetOriginSpecifiedFlag() {
    bool ret = vtkd_im.vtkTIFFReader_GetOriginSpecifiedFlag(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void OriginSpecifiedFlagOn() {
    vtkd_im.vtkTIFFReader_OriginSpecifiedFlagOn(cast(void*)swigCPtr);
  }

  public void OriginSpecifiedFlagOff() {
    vtkd_im.vtkTIFFReader_OriginSpecifiedFlagOff(cast(void*)swigCPtr);
  }

  public void SetSpacingSpecifiedFlag(bool _arg) {
    vtkd_im.vtkTIFFReader_SetSpacingSpecifiedFlag(cast(void*)swigCPtr, _arg);
  }

  public bool GetSpacingSpecifiedFlag() {
    bool ret = vtkd_im.vtkTIFFReader_GetSpacingSpecifiedFlag(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SpacingSpecifiedFlagOn() {
    vtkd_im.vtkTIFFReader_SpacingSpecifiedFlagOn(cast(void*)swigCPtr);
  }

  public void SpacingSpecifiedFlagOff() {
    vtkd_im.vtkTIFFReader_SpacingSpecifiedFlagOff(cast(void*)swigCPtr);
  }

  public void ReadImageInternal(void* arg0, void* outPtr, int* outExt, uint size) {
    vtkd_im.vtkTIFFReader_ReadImageInternal(cast(void*)swigCPtr, cast(void*)arg0, cast(void*)outPtr, cast(void*)outExt, size);
  }
}
