/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkWeightedTransformFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAbstractTransform;
static import vtkPointSetAlgorithm;

class vtkWeightedTransformFilter : vtkPointSetAlgorithm.vtkPointSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkWeightedTransformFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkWeightedTransformFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkWeightedTransformFilter New() {
    void* cPtr = vtkd_im.vtkWeightedTransformFilter_New();
    vtkWeightedTransformFilter ret = (cPtr is null) ? null : new vtkWeightedTransformFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkWeightedTransformFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkWeightedTransformFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkWeightedTransformFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkWeightedTransformFilter ret = (cPtr is null) ? null : new vtkWeightedTransformFilter(cPtr, false);
    return ret;
  }

  public vtkWeightedTransformFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkWeightedTransformFilter_NewInstance(cast(void*)swigCPtr);
    vtkWeightedTransformFilter ret = (cPtr is null) ? null : new vtkWeightedTransformFilter(cPtr, false);
    return ret;
  }

  alias vtkPointSetAlgorithm.vtkPointSetAlgorithm.NewInstance NewInstance;

  public void SetWeightArray(string _arg) {
    vtkd_im.vtkWeightedTransformFilter_SetWeightArray(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetWeightArray() {
    string ret = std.conv.to!string(vtkd_im.vtkWeightedTransformFilter_GetWeightArray(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTransformIndexArray(string _arg) {
    vtkd_im.vtkWeightedTransformFilter_SetTransformIndexArray(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetTransformIndexArray() {
    string ret = std.conv.to!string(vtkd_im.vtkWeightedTransformFilter_GetTransformIndexArray(cast(void*)swigCPtr));
    return ret;
  }

  public void SetCellDataWeightArray(string _arg) {
    vtkd_im.vtkWeightedTransformFilter_SetCellDataWeightArray(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetCellDataWeightArray() {
    string ret = std.conv.to!string(vtkd_im.vtkWeightedTransformFilter_GetCellDataWeightArray(cast(void*)swigCPtr));
    return ret;
  }

  public void SetCellDataTransformIndexArray(string _arg) {
    vtkd_im.vtkWeightedTransformFilter_SetCellDataTransformIndexArray(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetCellDataTransformIndexArray() {
    string ret = std.conv.to!string(vtkd_im.vtkWeightedTransformFilter_GetCellDataTransformIndexArray(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTransform(vtkAbstractTransform.vtkAbstractTransform transform, int num) {
    vtkd_im.vtkWeightedTransformFilter_SetTransform(cast(void*)swigCPtr, vtkAbstractTransform.vtkAbstractTransform.swigGetCPtr(transform), num);
  }

  public vtkAbstractTransform.vtkAbstractTransform GetTransform(int num) {
    void* cPtr = vtkd_im.vtkWeightedTransformFilter_GetTransform(cast(void*)swigCPtr, num);
    vtkAbstractTransform.vtkAbstractTransform ret = (cPtr is null) ? null : new vtkAbstractTransform.vtkAbstractTransform(cPtr, false);
    return ret;
  }

  public void SetNumberOfTransforms(int num) {
    vtkd_im.vtkWeightedTransformFilter_SetNumberOfTransforms(cast(void*)swigCPtr, num);
  }

  public int GetNumberOfTransforms() {
    auto ret = vtkd_im.vtkWeightedTransformFilter_GetNumberOfTransforms(cast(void*)swigCPtr);
    return ret;
  }

  public void AddInputValuesOn() {
    vtkd_im.vtkWeightedTransformFilter_AddInputValuesOn(cast(void*)swigCPtr);
  }

  public void AddInputValuesOff() {
    vtkd_im.vtkWeightedTransformFilter_AddInputValuesOff(cast(void*)swigCPtr);
  }

  public void SetAddInputValues(int _arg) {
    vtkd_im.vtkWeightedTransformFilter_SetAddInputValues(cast(void*)swigCPtr, _arg);
  }

  public int GetAddInputValues() {
    auto ret = vtkd_im.vtkWeightedTransformFilter_GetAddInputValues(cast(void*)swigCPtr);
    return ret;
  }
}
