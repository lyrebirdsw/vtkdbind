/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkTableToSparseArray;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkArrayExtents;
static import vtkArrayDataAlgorithm;

class vtkTableToSparseArray : vtkArrayDataAlgorithm.vtkArrayDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkTableToSparseArray_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkTableToSparseArray obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkTableToSparseArray(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkTableToSparseArray New() {
    void* cPtr = vtkd_im.vtkTableToSparseArray_New();
    vtkTableToSparseArray ret = (cPtr is null) ? null : new vtkTableToSparseArray(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkTableToSparseArray_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkTableToSparseArray SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkTableToSparseArray_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkTableToSparseArray ret = (cPtr is null) ? null : new vtkTableToSparseArray(cPtr, false);
    return ret;
  }

  public vtkTableToSparseArray NewInstance() const {
    void* cPtr = vtkd_im.vtkTableToSparseArray_NewInstance(cast(void*)swigCPtr);
    vtkTableToSparseArray ret = (cPtr is null) ? null : new vtkTableToSparseArray(cPtr, false);
    return ret;
  }

  alias vtkArrayDataAlgorithm.vtkArrayDataAlgorithm.NewInstance NewInstance;

  public void ClearCoordinateColumns() {
    vtkd_im.vtkTableToSparseArray_ClearCoordinateColumns(cast(void*)swigCPtr);
  }

  public void AddCoordinateColumn(string name) {
    vtkd_im.vtkTableToSparseArray_AddCoordinateColumn(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void SetValueColumn(string name) {
    vtkd_im.vtkTableToSparseArray_SetValueColumn(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public string GetValueColumn() {
    string ret = std.conv.to!string(vtkd_im.vtkTableToSparseArray_GetValueColumn(cast(void*)swigCPtr));
    return ret;
  }

  public void ClearOutputExtents() {
    vtkd_im.vtkTableToSparseArray_ClearOutputExtents(cast(void*)swigCPtr);
  }

  public void SetOutputExtents(vtkArrayExtents.vtkArrayExtents extents) {
    vtkd_im.vtkTableToSparseArray_SetOutputExtents(cast(void*)swigCPtr, vtkArrayExtents.vtkArrayExtents.swigGetCPtr(extents));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this() {
    this(vtkd_im.new_vtkTableToSparseArray(), true);
  }
}
