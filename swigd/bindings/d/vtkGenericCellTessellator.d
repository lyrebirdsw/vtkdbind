/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericCellTessellator;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGenericAdaptorCell;
static import vtkGenericAttributeCollection;
static import vtkDoubleArray;
static import vtkCellArray;
static import vtkPointData;
static import vtkCollection;
static import vtkGenericDataSet;
static import vtkObject;

class vtkGenericCellTessellator : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericCellTessellator_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericCellTessellator obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericCellTessellator_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericCellTessellator SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericCellTessellator_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericCellTessellator ret = (cPtr is null) ? null : new vtkGenericCellTessellator(cPtr, false);
    return ret;
  }

  public vtkGenericCellTessellator NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericCellTessellator_NewInstance(cast(void*)swigCPtr);
    vtkGenericCellTessellator ret = (cPtr is null) ? null : new vtkGenericCellTessellator(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void TessellateFace(vtkGenericAdaptorCell.vtkGenericAdaptorCell cell, vtkGenericAttributeCollection.vtkGenericAttributeCollection att, long index, vtkDoubleArray.vtkDoubleArray points, vtkCellArray.vtkCellArray cellArray, vtkPointData.vtkPointData internalPd) {
    vtkd_im.vtkGenericCellTessellator_TessellateFace(cast(void*)swigCPtr, vtkGenericAdaptorCell.vtkGenericAdaptorCell.swigGetCPtr(cell), vtkGenericAttributeCollection.vtkGenericAttributeCollection.swigGetCPtr(att), index, vtkDoubleArray.vtkDoubleArray.swigGetCPtr(points), vtkCellArray.vtkCellArray.swigGetCPtr(cellArray), vtkPointData.vtkPointData.swigGetCPtr(internalPd));
  }

  public void Tessellate(vtkGenericAdaptorCell.vtkGenericAdaptorCell cell, vtkGenericAttributeCollection.vtkGenericAttributeCollection att, vtkDoubleArray.vtkDoubleArray points, vtkCellArray.vtkCellArray cellArray, vtkPointData.vtkPointData internalPd) {
    vtkd_im.vtkGenericCellTessellator_Tessellate(cast(void*)swigCPtr, vtkGenericAdaptorCell.vtkGenericAdaptorCell.swigGetCPtr(cell), vtkGenericAttributeCollection.vtkGenericAttributeCollection.swigGetCPtr(att), vtkDoubleArray.vtkDoubleArray.swigGetCPtr(points), vtkCellArray.vtkCellArray.swigGetCPtr(cellArray), vtkPointData.vtkPointData.swigGetCPtr(internalPd));
  }

  public void Triangulate(vtkGenericAdaptorCell.vtkGenericAdaptorCell cell, vtkGenericAttributeCollection.vtkGenericAttributeCollection att, vtkDoubleArray.vtkDoubleArray points, vtkCellArray.vtkCellArray cellArray, vtkPointData.vtkPointData internalPd) {
    vtkd_im.vtkGenericCellTessellator_Triangulate(cast(void*)swigCPtr, vtkGenericAdaptorCell.vtkGenericAdaptorCell.swigGetCPtr(cell), vtkGenericAttributeCollection.vtkGenericAttributeCollection.swigGetCPtr(att), vtkDoubleArray.vtkDoubleArray.swigGetCPtr(points), vtkCellArray.vtkCellArray.swigGetCPtr(cellArray), vtkPointData.vtkPointData.swigGetCPtr(internalPd));
  }

  public void SetErrorMetrics(vtkCollection.vtkCollection someErrorMetrics) {
    vtkd_im.vtkGenericCellTessellator_SetErrorMetrics(cast(void*)swigCPtr, vtkCollection.vtkCollection.swigGetCPtr(someErrorMetrics));
  }

  public vtkCollection.vtkCollection GetErrorMetrics() {
    void* cPtr = vtkd_im.vtkGenericCellTessellator_GetErrorMetrics(cast(void*)swigCPtr);
    vtkCollection.vtkCollection ret = (cPtr is null) ? null : new vtkCollection.vtkCollection(cPtr, false);
    return ret;
  }

  public void Initialize(vtkGenericDataSet.vtkGenericDataSet ds) {
    vtkd_im.vtkGenericCellTessellator_Initialize(cast(void*)swigCPtr, vtkGenericDataSet.vtkGenericDataSet.swigGetCPtr(ds));
  }

  public void InitErrorMetrics(vtkGenericDataSet.vtkGenericDataSet ds) {
    vtkd_im.vtkGenericCellTessellator_InitErrorMetrics(cast(void*)swigCPtr, vtkGenericDataSet.vtkGenericDataSet.swigGetCPtr(ds));
  }

  public int GetMeasurement() {
    auto ret = vtkd_im.vtkGenericCellTessellator_GetMeasurement(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMeasurement(int _arg) {
    vtkd_im.vtkGenericCellTessellator_SetMeasurement(cast(void*)swigCPtr, _arg);
  }

  public void GetMaxErrors(double* errors) {
    vtkd_im.vtkGenericCellTessellator_GetMaxErrors(cast(void*)swigCPtr, cast(void*)errors);
  }
}
