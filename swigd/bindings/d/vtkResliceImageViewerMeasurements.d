/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkResliceImageViewerMeasurements;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAbstractWidget;
static import vtkResliceImageViewer;
static import vtkObject;

class vtkResliceImageViewerMeasurements : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkResliceImageViewerMeasurements_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkResliceImageViewerMeasurements obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkResliceImageViewerMeasurements New() {
    void* cPtr = vtkd_im.vtkResliceImageViewerMeasurements_New();
    vtkResliceImageViewerMeasurements ret = (cPtr is null) ? null : new vtkResliceImageViewerMeasurements(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkResliceImageViewerMeasurements_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkResliceImageViewerMeasurements SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkResliceImageViewerMeasurements_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkResliceImageViewerMeasurements ret = (cPtr is null) ? null : new vtkResliceImageViewerMeasurements(cPtr, false);
    return ret;
  }

  public vtkResliceImageViewerMeasurements NewInstance() const {
    void* cPtr = vtkd_im.vtkResliceImageViewerMeasurements_NewInstance(cast(void*)swigCPtr);
    vtkResliceImageViewerMeasurements ret = (cPtr is null) ? null : new vtkResliceImageViewerMeasurements(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void Render() {
    vtkd_im.vtkResliceImageViewerMeasurements_Render(cast(void*)swigCPtr);
  }

  public void AddItem(vtkAbstractWidget.vtkAbstractWidget arg0) {
    vtkd_im.vtkResliceImageViewerMeasurements_AddItem(cast(void*)swigCPtr, vtkAbstractWidget.vtkAbstractWidget.swigGetCPtr(arg0));
  }

  public void RemoveItem(vtkAbstractWidget.vtkAbstractWidget arg0) {
    vtkd_im.vtkResliceImageViewerMeasurements_RemoveItem(cast(void*)swigCPtr, vtkAbstractWidget.vtkAbstractWidget.swigGetCPtr(arg0));
  }

  public void RemoveAllItems() {
    vtkd_im.vtkResliceImageViewerMeasurements_RemoveAllItems(cast(void*)swigCPtr);
  }

  public void SetProcessEvents(int _arg) {
    vtkd_im.vtkResliceImageViewerMeasurements_SetProcessEvents(cast(void*)swigCPtr, _arg);
  }

  public int GetProcessEventsMinValue() {
    auto ret = vtkd_im.vtkResliceImageViewerMeasurements_GetProcessEventsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProcessEventsMaxValue() {
    auto ret = vtkd_im.vtkResliceImageViewerMeasurements_GetProcessEventsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProcessEvents() {
    auto ret = vtkd_im.vtkResliceImageViewerMeasurements_GetProcessEvents(cast(void*)swigCPtr);
    return ret;
  }

  public void ProcessEventsOn() {
    vtkd_im.vtkResliceImageViewerMeasurements_ProcessEventsOn(cast(void*)swigCPtr);
  }

  public void ProcessEventsOff() {
    vtkd_im.vtkResliceImageViewerMeasurements_ProcessEventsOff(cast(void*)swigCPtr);
  }

  public void SetTolerance(double _arg) {
    vtkd_im.vtkResliceImageViewerMeasurements_SetTolerance(cast(void*)swigCPtr, _arg);
  }

  public double GetTolerance() {
    auto ret = vtkd_im.vtkResliceImageViewerMeasurements_GetTolerance(cast(void*)swigCPtr);
    return ret;
  }

  public void SetResliceImageViewer(vtkResliceImageViewer.vtkResliceImageViewer arg0) {
    vtkd_im.vtkResliceImageViewerMeasurements_SetResliceImageViewer(cast(void*)swigCPtr, vtkResliceImageViewer.vtkResliceImageViewer.swigGetCPtr(arg0));
  }

  public vtkResliceImageViewer.vtkResliceImageViewer GetResliceImageViewer() {
    void* cPtr = vtkd_im.vtkResliceImageViewerMeasurements_GetResliceImageViewer(cast(void*)swigCPtr);
    vtkResliceImageViewer.vtkResliceImageViewer ret = (cPtr is null) ? null : new vtkResliceImageViewer.vtkResliceImageViewer(cPtr, false);
    return ret;
  }

  public void Update() {
    vtkd_im.vtkResliceImageViewerMeasurements_Update(cast(void*)swigCPtr);
  }
}
