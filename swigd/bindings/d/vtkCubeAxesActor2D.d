/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCubeAxesActor2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAlgorithmOutput;
static import vtkDataSet;
static import vtkProp;
static import SWIGTYPE_p_double;
static import vtkCamera;
static import vtkAxisActor2D;
static import vtkTextProperty;
static import vtkActor2D;

class vtkCubeAxesActor2D : vtkActor2D.vtkActor2D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCubeAxesActor2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCubeAxesActor2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCubeAxesActor2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCubeAxesActor2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCubeAxesActor2D ret = (cPtr is null) ? null : new vtkCubeAxesActor2D(cPtr, false);
    return ret;
  }

  public vtkCubeAxesActor2D NewInstance() const {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_NewInstance(cast(void*)swigCPtr);
    vtkCubeAxesActor2D ret = (cPtr is null) ? null : new vtkCubeAxesActor2D(cPtr, false);
    return ret;
  }

  alias vtkActor2D.vtkActor2D.NewInstance NewInstance;

  public static vtkCubeAxesActor2D New() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_New();
    vtkCubeAxesActor2D ret = (cPtr is null) ? null : new vtkCubeAxesActor2D(cPtr, false);
    return ret;
  }

  public void SetInputConnection(vtkAlgorithmOutput.vtkAlgorithmOutput arg0) {
    vtkd_im.vtkCubeAxesActor2D_SetInputConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(arg0));
  }

  public void SetInputData(vtkDataSet.vtkDataSet arg0) {
    vtkd_im.vtkCubeAxesActor2D_SetInputData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(arg0));
  }

  public vtkDataSet.vtkDataSet GetInput() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetInput(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetViewProp(vtkProp.vtkProp prop) {
    vtkd_im.vtkCubeAxesActor2D_SetViewProp(cast(void*)swigCPtr, vtkProp.vtkProp.swigGetCPtr(prop));
  }

  public vtkProp.vtkProp GetViewProp() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetViewProp(cast(void*)swigCPtr);
    vtkProp.vtkProp ret = (cPtr is null) ? null : new vtkProp.vtkProp(cPtr, false);
    return ret;
  }

  public void SetBounds(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkCubeAxesActor2D_SetBounds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor2D_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(double* xmin, double* xmax, double* ymin, double* ymax, double* zmin, double* zmax) {
    vtkd_im.vtkCubeAxesActor2D_GetBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)xmin, cast(void*)xmax, cast(void*)ymin, cast(void*)ymax, cast(void*)zmin, cast(void*)zmax);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkCubeAxesActor2D_GetBounds__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public void SetRanges(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkCubeAxesActor2D_SetRanges__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetRanges(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetRanges__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetRanges() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor2D_GetRanges__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetRanges(double* xmin, double* xmax, double* ymin, double* ymax, double* zmin, double* zmax) {
    vtkd_im.vtkCubeAxesActor2D_GetRanges__SWIG_1(cast(void*)swigCPtr, cast(void*)xmin, cast(void*)xmax, cast(void*)ymin, cast(void*)ymax, cast(void*)zmin, cast(void*)zmax);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetRanges(SWIGTYPE_p_double.SWIGTYPE_p_double ranges) {
    vtkd_im.vtkCubeAxesActor2D_GetRanges__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(ranges));
  }

  public void SetXOrigin(double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetXOrigin(cast(void*)swigCPtr, _arg);
  }

  public void SetYOrigin(double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetYOrigin(cast(void*)swigCPtr, _arg);
  }

  public void SetZOrigin(double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetZOrigin(cast(void*)swigCPtr, _arg);
  }

  public void SetUseRanges(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetUseRanges(cast(void*)swigCPtr, _arg);
  }

  public int GetUseRanges() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetUseRanges(cast(void*)swigCPtr);
    return ret;
  }

  public void UseRangesOn() {
    vtkd_im.vtkCubeAxesActor2D_UseRangesOn(cast(void*)swigCPtr);
  }

  public void UseRangesOff() {
    vtkd_im.vtkCubeAxesActor2D_UseRangesOff(cast(void*)swigCPtr);
  }

  public void SetCamera(vtkCamera.vtkCamera arg0) {
    vtkd_im.vtkCubeAxesActor2D_SetCamera(cast(void*)swigCPtr, vtkCamera.vtkCamera.swigGetCPtr(arg0));
  }

  public vtkCamera.vtkCamera GetCamera() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetCamera(cast(void*)swigCPtr);
    vtkCamera.vtkCamera ret = (cPtr is null) ? null : new vtkCamera.vtkCamera(cPtr, false);
    return ret;
  }

  public void SetFlyMode(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetFlyMode(cast(void*)swigCPtr, _arg);
  }

  public int GetFlyModeMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFlyModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFlyModeMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFlyModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFlyMode() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFlyMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFlyModeToOuterEdges() {
    vtkd_im.vtkCubeAxesActor2D_SetFlyModeToOuterEdges(cast(void*)swigCPtr);
  }

  public void SetFlyModeToClosestTriad() {
    vtkd_im.vtkCubeAxesActor2D_SetFlyModeToClosestTriad(cast(void*)swigCPtr);
  }

  public void SetFlyModeToNone() {
    vtkd_im.vtkCubeAxesActor2D_SetFlyModeToNone(cast(void*)swigCPtr);
  }

  public void SetScaling(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetScaling(cast(void*)swigCPtr, _arg);
  }

  public int GetScaling() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetScaling(cast(void*)swigCPtr);
    return ret;
  }

  public void ScalingOn() {
    vtkd_im.vtkCubeAxesActor2D_ScalingOn(cast(void*)swigCPtr);
  }

  public void ScalingOff() {
    vtkd_im.vtkCubeAxesActor2D_ScalingOff(cast(void*)swigCPtr);
  }

  public void SetNumberOfLabels(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetNumberOfLabels(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfLabelsMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetNumberOfLabelsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfLabelsMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetNumberOfLabelsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfLabels() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetNumberOfLabels(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXLabel(string _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetXLabel(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXLabel() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor2D_GetXLabel(cast(void*)swigCPtr));
    return ret;
  }

  public void SetYLabel(string _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetYLabel(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetYLabel() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor2D_GetYLabel(cast(void*)swigCPtr));
    return ret;
  }

  public void SetZLabel(string _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetZLabel(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetZLabel() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor2D_GetZLabel(cast(void*)swigCPtr));
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetXAxisActor2D() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetXAxisActor2D(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetYAxisActor2D() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetYAxisActor2D(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public vtkAxisActor2D.vtkAxisActor2D GetZAxisActor2D() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetZAxisActor2D(cast(void*)swigCPtr);
    vtkAxisActor2D.vtkAxisActor2D ret = (cPtr is null) ? null : new vtkAxisActor2D.vtkAxisActor2D(cPtr, false);
    return ret;
  }

  public void SetAxisTitleTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkCubeAxesActor2D_SetAxisTitleTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetAxisTitleTextProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetAxisTitleTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetAxisLabelTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkCubeAxesActor2D_SetAxisLabelTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetAxisLabelTextProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor2D_GetAxisLabelTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor2D_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFontFactor(double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetFontFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetFontFactorMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFontFactorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFontFactorMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFontFactorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetFontFactor() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetFontFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInertia(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetInertia(cast(void*)swigCPtr, _arg);
  }

  public int GetInertiaMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetInertiaMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInertiaMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetInertiaMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInertia() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetInertia(cast(void*)swigCPtr);
    return ret;
  }

  public void SetShowActualBounds(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetShowActualBounds(cast(void*)swigCPtr, _arg);
  }

  public int GetShowActualBoundsMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetShowActualBoundsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShowActualBoundsMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetShowActualBoundsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetShowActualBounds() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetShowActualBounds(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCornerOffset(double _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetCornerOffset(cast(void*)swigCPtr, _arg);
  }

  public double GetCornerOffset() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetCornerOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetXAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetXAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetXAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void XAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor2D_XAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void XAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor2D_XAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetYAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetYAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetYAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetYAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void YAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor2D_YAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void YAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor2D_YAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetZAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor2D_SetZAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetZAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor2D_GetZAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ZAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor2D_ZAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void ZAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor2D_ZAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void ShallowCopy(vtkCubeAxesActor2D actor) {
    vtkd_im.vtkCubeAxesActor2D_ShallowCopy(cast(void*)swigCPtr, vtkCubeAxesActor2D.swigGetCPtr(actor));
  }

  alias vtkActor2D.vtkActor2D.ShallowCopy ShallowCopy;
}
