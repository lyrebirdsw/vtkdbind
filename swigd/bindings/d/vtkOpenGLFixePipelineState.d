/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkOpenGLFixePipelineState;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_GLboolean;
static import SWIGTYPE_p_std__vectorT_GLboolean_t;
static import SWIGTYPE_p_GLint;
static import SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t;

class vtkOpenGLFixePipelineState {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkOpenGLFixePipelineState obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkOpenGLFixePipelineState(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public void Normalize(SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Normalize_set(cast(void*)swigCPtr, SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean Normalize() @property const {
    SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ret = new SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean(vtkd_im.vtkOpenGLFixePipelineState_Normalize_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void RescaleNormal(SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_RescaleNormal_set(cast(void*)swigCPtr, SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean RescaleNormal() @property const {
    SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ret = new SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean(vtkd_im.vtkOpenGLFixePipelineState_RescaleNormal_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void LightingEnabled(SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_LightingEnabled_set(cast(void*)swigCPtr, SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean LightingEnabled() @property const {
    SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ret = new SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean(vtkd_im.vtkOpenGLFixePipelineState_LightingEnabled_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void LightEnabled(SWIGTYPE_p_std__vectorT_GLboolean_t.SWIGTYPE_p_std__vectorT_GLboolean_t value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_LightEnabled_set(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_GLboolean_t.SWIGTYPE_p_std__vectorT_GLboolean_t.swigGetCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_GLboolean_t.SWIGTYPE_p_std__vectorT_GLboolean_t LightEnabled() @property const {
    void* cPtr = vtkd_im.vtkOpenGLFixePipelineState_LightEnabled_get(cast(void*)swigCPtr);
    SWIGTYPE_p_std__vectorT_GLboolean_t.SWIGTYPE_p_std__vectorT_GLboolean_t ret = (cPtr is null) ? null : new SWIGTYPE_p_std__vectorT_GLboolean_t.SWIGTYPE_p_std__vectorT_GLboolean_t(cPtr, false);
    return ret;
  }

  public void CombineRGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_CombineRGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint CombineRGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_CombineRGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void CombineAlpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_CombineAlpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint CombineAlpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_CombineAlpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source0RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source0RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source0RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source0RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source1RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source1RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source1RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source1RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source2RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source2RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source2RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source2RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source0Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source0Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source0Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source0Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source1Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source1Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source1Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source1Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Source2Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Source2Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Source2Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Source2Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand0RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand0RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand0RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand0RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand1RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand1RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand1RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand1RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand2RGB(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand2RGB_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand2RGB() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand2RGB_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand0Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand0Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand0Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand0Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand1Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand1Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand1Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand1Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Operand2Alpha(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_Operand2Alpha_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint Operand2Alpha() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_Operand2Alpha_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void RGBScale(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_RGBScale_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint RGBScale() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_RGBScale_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void AlphaScale(SWIGTYPE_p_GLint.SWIGTYPE_p_GLint value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_AlphaScale_set(cast(void*)swigCPtr, SWIGTYPE_p_GLint.SWIGTYPE_p_GLint.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLint.SWIGTYPE_p_GLint AlphaScale() @property const {
    SWIGTYPE_p_GLint.SWIGTYPE_p_GLint ret = new SWIGTYPE_p_GLint.SWIGTYPE_p_GLint(vtkd_im.vtkOpenGLFixePipelineState_AlphaScale_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void TextureImageUnitEnabled(SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_TextureImageUnitEnabled_set(cast(void*)swigCPtr, SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.swigGetCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t TextureImageUnitEnabled() @property const {
    void* cPtr = vtkd_im.vtkOpenGLFixePipelineState_TextureImageUnitEnabled_get(cast(void*)swigCPtr);
    SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t ret = (cPtr is null) ? null : new SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t.SWIGTYPE_p_std__vectorT_vtkOpenGLTextureImageUnitFixedPipelineState_t(cPtr, false);
    return ret;
  }

  public void FogEnabled(SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_FogEnabled_set(cast(void*)swigCPtr, SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean FogEnabled() @property const {
    SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ret = new SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean(vtkd_im.vtkOpenGLFixePipelineState_FogEnabled_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void ColorSumEnabled(SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean value) @property {
    vtkd_im.vtkOpenGLFixePipelineState_ColorSumEnabled_set(cast(void*)swigCPtr, SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean.swigGetCPtr(value));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ColorSumEnabled() @property const {
    SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean ret = new SWIGTYPE_p_GLboolean.SWIGTYPE_p_GLboolean(vtkd_im.vtkOpenGLFixePipelineState_ColorSumEnabled_get(cast(void*)swigCPtr), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkOpenGLFixePipelineState(), true);
  }
}
