/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericInterpolatedVelocityField;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGenericDataSet;
static import vtkGenericAdaptorCell;
static import SWIGTYPE_p_double;
static import vtkFunctionSet;

class vtkGenericInterpolatedVelocityField : vtkFunctionSet.vtkFunctionSet {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericInterpolatedVelocityField_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericInterpolatedVelocityField obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericInterpolatedVelocityField_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericInterpolatedVelocityField SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericInterpolatedVelocityField_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkGenericInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public vtkGenericInterpolatedVelocityField NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericInterpolatedVelocityField_NewInstance(cast(void*)swigCPtr);
    vtkGenericInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkGenericInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  alias vtkFunctionSet.vtkFunctionSet.NewInstance NewInstance;

  public static vtkGenericInterpolatedVelocityField New() {
    void* cPtr = vtkd_im.vtkGenericInterpolatedVelocityField_New();
    vtkGenericInterpolatedVelocityField ret = (cPtr is null) ? null : new vtkGenericInterpolatedVelocityField(cPtr, false);
    return ret;
  }

  public void AddDataSet(vtkGenericDataSet.vtkGenericDataSet dataset) {
    vtkd_im.vtkGenericInterpolatedVelocityField_AddDataSet(cast(void*)swigCPtr, vtkGenericDataSet.vtkGenericDataSet.swigGetCPtr(dataset));
  }

  public void ClearLastCell() {
    vtkd_im.vtkGenericInterpolatedVelocityField_ClearLastCell(cast(void*)swigCPtr);
  }

  public vtkGenericAdaptorCell.vtkGenericAdaptorCell GetLastCell() {
    void* cPtr = vtkd_im.vtkGenericInterpolatedVelocityField_GetLastCell(cast(void*)swigCPtr);
    vtkGenericAdaptorCell.vtkGenericAdaptorCell ret = (cPtr is null) ? null : new vtkGenericAdaptorCell.vtkGenericAdaptorCell(cPtr, false);
    return ret;
  }

  public int GetLastLocalCoordinates(SWIGTYPE_p_double.SWIGTYPE_p_double pcoords) {
    auto ret = vtkd_im.vtkGenericInterpolatedVelocityField_GetLastLocalCoordinates(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(pcoords));
    return ret;
  }

  public int GetCaching() {
    auto ret = vtkd_im.vtkGenericInterpolatedVelocityField_GetCaching(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCaching(int _arg) {
    vtkd_im.vtkGenericInterpolatedVelocityField_SetCaching(cast(void*)swigCPtr, _arg);
  }

  public void CachingOn() {
    vtkd_im.vtkGenericInterpolatedVelocityField_CachingOn(cast(void*)swigCPtr);
  }

  public void CachingOff() {
    vtkd_im.vtkGenericInterpolatedVelocityField_CachingOff(cast(void*)swigCPtr);
  }

  public int GetCacheHit() {
    auto ret = vtkd_im.vtkGenericInterpolatedVelocityField_GetCacheHit(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCacheMiss() {
    auto ret = vtkd_im.vtkGenericInterpolatedVelocityField_GetCacheMiss(cast(void*)swigCPtr);
    return ret;
  }

  public string GetVectorsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericInterpolatedVelocityField_GetVectorsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectVectors(string fieldName) {
    vtkd_im.vtkGenericInterpolatedVelocityField_SelectVectors(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }

  public vtkGenericDataSet.vtkGenericDataSet GetLastDataSet() {
    void* cPtr = vtkd_im.vtkGenericInterpolatedVelocityField_GetLastDataSet(cast(void*)swigCPtr);
    vtkGenericDataSet.vtkGenericDataSet ret = (cPtr is null) ? null : new vtkGenericDataSet.vtkGenericDataSet(cPtr, false);
    return ret;
  }

  public void CopyParameters(vtkGenericInterpolatedVelocityField from) {
    vtkd_im.vtkGenericInterpolatedVelocityField_CopyParameters(cast(void*)swigCPtr, vtkGenericInterpolatedVelocityField.swigGetCPtr(from));
  }
}
