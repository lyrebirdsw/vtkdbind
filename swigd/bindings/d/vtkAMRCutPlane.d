/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAMRCutPlane;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkMultiProcessController;
static import vtkInformation;
static import SWIGTYPE_p_p_vtkInformationVector;
static import vtkInformationVector;
static import vtkMultiBlockDataSetAlgorithm;

class vtkAMRCutPlane : vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAMRCutPlane_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAMRCutPlane obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAMRCutPlane New() {
    void* cPtr = vtkd_im.vtkAMRCutPlane_New();
    vtkAMRCutPlane ret = (cPtr is null) ? null : new vtkAMRCutPlane(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAMRCutPlane_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAMRCutPlane SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAMRCutPlane_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAMRCutPlane ret = (cPtr is null) ? null : new vtkAMRCutPlane(cPtr, false);
    return ret;
  }

  public vtkAMRCutPlane NewInstance() const {
    void* cPtr = vtkd_im.vtkAMRCutPlane_NewInstance(cast(void*)swigCPtr);
    vtkAMRCutPlane ret = (cPtr is null) ? null : new vtkAMRCutPlane(cPtr, false);
    return ret;
  }

  alias vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm.NewInstance NewInstance;

  public void SetCenter(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkAMRCutPlane_SetCenter__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetCenter(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAMRCutPlane_SetCenter__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetNormal(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkAMRCutPlane_SetNormal__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetNormal(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAMRCutPlane_SetNormal__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetLevelOfResolution(int _arg) {
    vtkd_im.vtkAMRCutPlane_SetLevelOfResolution(cast(void*)swigCPtr, _arg);
  }

  public int GetLevelOfResolution() {
    auto ret = vtkd_im.vtkAMRCutPlane_GetLevelOfResolution(cast(void*)swigCPtr);
    return ret;
  }

  public void SetUseNativeCutter(bool _arg) {
    vtkd_im.vtkAMRCutPlane_SetUseNativeCutter(cast(void*)swigCPtr, _arg);
  }

  public bool GetUseNativeCutter() {
    bool ret = vtkd_im.vtkAMRCutPlane_GetUseNativeCutter(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void UseNativeCutterOn() {
    vtkd_im.vtkAMRCutPlane_UseNativeCutterOn(cast(void*)swigCPtr);
  }

  public void UseNativeCutterOff() {
    vtkd_im.vtkAMRCutPlane_UseNativeCutterOff(cast(void*)swigCPtr);
  }

  public void SetController(vtkMultiProcessController.vtkMultiProcessController _arg) {
    vtkd_im.vtkAMRCutPlane_SetController(cast(void*)swigCPtr, vtkMultiProcessController.vtkMultiProcessController.swigGetCPtr(_arg));
  }

  public vtkMultiProcessController.vtkMultiProcessController GetController() {
    void* cPtr = vtkd_im.vtkAMRCutPlane_GetController(cast(void*)swigCPtr);
    vtkMultiProcessController.vtkMultiProcessController ret = (cPtr is null) ? null : new vtkMultiProcessController.vtkMultiProcessController(cPtr, false);
    return ret;
  }

  public int RequestData(vtkInformation.vtkInformation arg0, SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector arg1, vtkInformationVector.vtkInformationVector arg2) {
    auto ret = vtkd_im.vtkAMRCutPlane_RequestData(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0), SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector.swigGetCPtr(arg1), vtkInformationVector.vtkInformationVector.swigGetCPtr(arg2));
    return ret;
  }

  public int FillInputPortInformation(int port, vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkAMRCutPlane_FillInputPortInformation(cast(void*)swigCPtr, port, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public int FillOutputPortInformation(int port, vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkAMRCutPlane_FillOutputPortInformation(cast(void*)swigCPtr, port, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public int RequestInformation(vtkInformation.vtkInformation rqst, SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector inputVector, vtkInformationVector.vtkInformationVector outputVector) {
    auto ret = vtkd_im.vtkAMRCutPlane_RequestInformation(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(rqst), SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector.swigGetCPtr(inputVector), vtkInformationVector.vtkInformationVector.swigGetCPtr(outputVector));
    return ret;
  }

  public int RequestUpdateExtent(vtkInformation.vtkInformation arg0, SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector arg1, vtkInformationVector.vtkInformationVector arg2) {
    auto ret = vtkd_im.vtkAMRCutPlane_RequestUpdateExtent(cast(void*)swigCPtr, vtkInformation.vtkInformation.swigGetCPtr(arg0), SWIGTYPE_p_p_vtkInformationVector.SWIGTYPE_p_p_vtkInformationVector.swigGetCPtr(arg1), vtkInformationVector.vtkInformationVector.swigGetCPtr(arg2));
    return ret;
  }
}
