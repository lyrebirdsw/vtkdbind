/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGeoInteractorStyle;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkGeoCamera;
static import vtkObject;
static import SWIGTYPE_p_double;
static import vtkInteractorStyleTrackballCamera;

class vtkGeoInteractorStyle : vtkInteractorStyleTrackballCamera.vtkInteractorStyleTrackballCamera {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGeoInteractorStyle_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGeoInteractorStyle obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGeoInteractorStyle New() {
    void* cPtr = vtkd_im.vtkGeoInteractorStyle_New();
    vtkGeoInteractorStyle ret = (cPtr is null) ? null : new vtkGeoInteractorStyle(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGeoInteractorStyle_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGeoInteractorStyle SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGeoInteractorStyle_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGeoInteractorStyle ret = (cPtr is null) ? null : new vtkGeoInteractorStyle(cPtr, false);
    return ret;
  }

  public vtkGeoInteractorStyle NewInstance() const {
    void* cPtr = vtkd_im.vtkGeoInteractorStyle_NewInstance(cast(void*)swigCPtr);
    vtkGeoInteractorStyle ret = (cPtr is null) ? null : new vtkGeoInteractorStyle(cPtr, false);
    return ret;
  }

  alias vtkInteractorStyleTrackballCamera.vtkInteractorStyleTrackballCamera.NewInstance NewInstance;

  public void RubberBandZoom() {
    vtkd_im.vtkGeoInteractorStyle_RubberBandZoom(cast(void*)swigCPtr);
  }

  public void RedrawRectangle() {
    vtkd_im.vtkGeoInteractorStyle_RedrawRectangle(cast(void*)swigCPtr);
  }

  public vtkGeoCamera.vtkGeoCamera GetGeoCamera() {
    void* cPtr = vtkd_im.vtkGeoInteractorStyle_GetGeoCamera(cast(void*)swigCPtr);
    vtkGeoCamera.vtkGeoCamera ret = (cPtr is null) ? null : new vtkGeoCamera.vtkGeoCamera(cPtr, false);
    return ret;
  }

  public void ResetCamera() {
    vtkd_im.vtkGeoInteractorStyle_ResetCamera(cast(void*)swigCPtr);
  }

  public void WidgetInteraction(vtkObject.vtkObject caller) {
    vtkd_im.vtkGeoInteractorStyle_WidgetInteraction(cast(void*)swigCPtr, vtkObject.vtkObject.swigGetCPtr(caller));
  }

  public int ViewportToWorld(double x, double y, double* wx, double* wy, double* wz) {
    auto ret = vtkd_im.vtkGeoInteractorStyle_ViewportToWorld(cast(void*)swigCPtr, x, y, cast(void*)wx, cast(void*)wy, cast(void*)wz);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void WorldToLongLat(double wx, double wy, double wz, double* lon, double* lat) {
    vtkd_im.vtkGeoInteractorStyle_WorldToLongLat(cast(void*)swigCPtr, wx, wy, wz, cast(void*)lon, cast(void*)lat);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void ViewportToLongLat(double x, double y, double* lon, double* lat) {
    vtkd_im.vtkGeoInteractorStyle_ViewportToLongLat(cast(void*)swigCPtr, x, y, cast(void*)lon, cast(void*)lat);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public int GetRayIntersection(SWIGTYPE_p_double.SWIGTYPE_p_double origin, SWIGTYPE_p_double.SWIGTYPE_p_double direction, SWIGTYPE_p_double.SWIGTYPE_p_double intersection) {
    auto ret = vtkd_im.vtkGeoInteractorStyle_GetRayIntersection(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(origin), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(direction), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(intersection));
    return ret;
  }

  public bool GetLockHeading() {
    bool ret = vtkd_im.vtkGeoInteractorStyle_GetLockHeading(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetLockHeading(bool _arg) {
    vtkd_im.vtkGeoInteractorStyle_SetLockHeading(cast(void*)swigCPtr, _arg);
  }

  public void LockHeadingOn() {
    vtkd_im.vtkGeoInteractorStyle_LockHeadingOn(cast(void*)swigCPtr);
  }

  public void LockHeadingOff() {
    vtkd_im.vtkGeoInteractorStyle_LockHeadingOff(cast(void*)swigCPtr);
  }

  public void ResetCameraClippingRange() {
    vtkd_im.vtkGeoInteractorStyle_ResetCameraClippingRange(cast(void*)swigCPtr);
  }
}
