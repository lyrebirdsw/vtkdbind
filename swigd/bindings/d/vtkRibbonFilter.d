/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkRibbonFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkPolyDataAlgorithm;

class vtkRibbonFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkRibbonFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkRibbonFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkRibbonFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkRibbonFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkRibbonFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkRibbonFilter ret = (cPtr is null) ? null : new vtkRibbonFilter(cPtr, false);
    return ret;
  }

  public vtkRibbonFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkRibbonFilter_NewInstance(cast(void*)swigCPtr);
    vtkRibbonFilter ret = (cPtr is null) ? null : new vtkRibbonFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkRibbonFilter New() {
    void* cPtr = vtkd_im.vtkRibbonFilter_New();
    vtkRibbonFilter ret = (cPtr is null) ? null : new vtkRibbonFilter(cPtr, false);
    return ret;
  }

  public void SetWidth(double _arg) {
    vtkd_im.vtkRibbonFilter_SetWidth(cast(void*)swigCPtr, _arg);
  }

  public double GetWidthMinValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetWidthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetWidthMaxValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetWidthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetWidth() {
    auto ret = vtkd_im.vtkRibbonFilter_GetWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAngle(double _arg) {
    vtkd_im.vtkRibbonFilter_SetAngle(cast(void*)swigCPtr, _arg);
  }

  public double GetAngleMinValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetAngleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAngleMaxValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetAngleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetAngle() {
    auto ret = vtkd_im.vtkRibbonFilter_GetAngle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetVaryWidth(int _arg) {
    vtkd_im.vtkRibbonFilter_SetVaryWidth(cast(void*)swigCPtr, _arg);
  }

  public int GetVaryWidth() {
    auto ret = vtkd_im.vtkRibbonFilter_GetVaryWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void VaryWidthOn() {
    vtkd_im.vtkRibbonFilter_VaryWidthOn(cast(void*)swigCPtr);
  }

  public void VaryWidthOff() {
    vtkd_im.vtkRibbonFilter_VaryWidthOff(cast(void*)swigCPtr);
  }

  public void SetWidthFactor(double _arg) {
    vtkd_im.vtkRibbonFilter_SetWidthFactor(cast(void*)swigCPtr, _arg);
  }

  public double GetWidthFactor() {
    auto ret = vtkd_im.vtkRibbonFilter_GetWidthFactor(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDefaultNormal(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkRibbonFilter_SetDefaultNormal__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetDefaultNormal(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkRibbonFilter_SetDefaultNormal__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetDefaultNormal() {
    auto ret = cast(double*)vtkd_im.vtkRibbonFilter_GetDefaultNormal__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetDefaultNormal(SWIGTYPE_p_double.SWIGTYPE_p_double data) {
    vtkd_im.vtkRibbonFilter_GetDefaultNormal__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(data));
  }

  public void SetUseDefaultNormal(int _arg) {
    vtkd_im.vtkRibbonFilter_SetUseDefaultNormal(cast(void*)swigCPtr, _arg);
  }

  public int GetUseDefaultNormal() {
    auto ret = vtkd_im.vtkRibbonFilter_GetUseDefaultNormal(cast(void*)swigCPtr);
    return ret;
  }

  public void UseDefaultNormalOn() {
    vtkd_im.vtkRibbonFilter_UseDefaultNormalOn(cast(void*)swigCPtr);
  }

  public void UseDefaultNormalOff() {
    vtkd_im.vtkRibbonFilter_UseDefaultNormalOff(cast(void*)swigCPtr);
  }

  public void SetGenerateTCoords(int _arg) {
    vtkd_im.vtkRibbonFilter_SetGenerateTCoords(cast(void*)swigCPtr, _arg);
  }

  public int GetGenerateTCoordsMinValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetGenerateTCoordsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGenerateTCoordsMaxValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetGenerateTCoordsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetGenerateTCoords() {
    auto ret = vtkd_im.vtkRibbonFilter_GetGenerateTCoords(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGenerateTCoordsToOff() {
    vtkd_im.vtkRibbonFilter_SetGenerateTCoordsToOff(cast(void*)swigCPtr);
  }

  public void SetGenerateTCoordsToNormalizedLength() {
    vtkd_im.vtkRibbonFilter_SetGenerateTCoordsToNormalizedLength(cast(void*)swigCPtr);
  }

  public void SetGenerateTCoordsToUseLength() {
    vtkd_im.vtkRibbonFilter_SetGenerateTCoordsToUseLength(cast(void*)swigCPtr);
  }

  public void SetGenerateTCoordsToUseScalars() {
    vtkd_im.vtkRibbonFilter_SetGenerateTCoordsToUseScalars(cast(void*)swigCPtr);
  }

  public string GetGenerateTCoordsAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkRibbonFilter_GetGenerateTCoordsAsString(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTextureLength(double _arg) {
    vtkd_im.vtkRibbonFilter_SetTextureLength(cast(void*)swigCPtr, _arg);
  }

  public double GetTextureLengthMinValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetTextureLengthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTextureLengthMaxValue() {
    auto ret = vtkd_im.vtkRibbonFilter_GetTextureLengthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTextureLength() {
    auto ret = vtkd_im.vtkRibbonFilter_GetTextureLength(cast(void*)swigCPtr);
    return ret;
  }
}
