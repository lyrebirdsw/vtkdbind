/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAMRInformation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkAMRBox;
static import SWIGTYPE_p_std__vectorT_int_t;
static import SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t;
static import vtkObject;

class vtkAMRInformation : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAMRInformation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAMRInformation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAMRInformation New() {
    void* cPtr = vtkd_im.vtkAMRInformation_New();
    vtkAMRInformation ret = (cPtr is null) ? null : new vtkAMRInformation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAMRInformation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAMRInformation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAMRInformation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAMRInformation ret = (cPtr is null) ? null : new vtkAMRInformation(cPtr, false);
    return ret;
  }

  public vtkAMRInformation NewInstance() const {
    void* cPtr = vtkd_im.vtkAMRInformation_NewInstance(cast(void*)swigCPtr);
    vtkAMRInformation ret = (cPtr is null) ? null : new vtkAMRInformation(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public bool swigOpEquals(vtkAMRInformation other) {
    bool ret = vtkd_im.vtkAMRInformation_swigOpEquals(cast(void*)swigCPtr, vtkAMRInformation.swigGetCPtr(other)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Initialize(int numLevels, int* blocksPerLevel) {
    vtkd_im.vtkAMRInformation_Initialize(cast(void*)swigCPtr, numLevels, cast(void*)blocksPerLevel);
  }

  public int GetGridDescription() {
    auto ret = vtkd_im.vtkAMRInformation_GetGridDescription(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGridDescription(int description) {
    vtkd_im.vtkAMRInformation_SetGridDescription(cast(void*)swigCPtr, description);
  }

  public void GetOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double origin) {
    vtkd_im.vtkAMRInformation_GetOrigin__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(origin));
  }

  public double* GetOrigin() {
    auto ret = cast(double*)vtkd_im.vtkAMRInformation_GetOrigin__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOrigin(double* origin) {
    vtkd_im.vtkAMRInformation_SetOrigin(cast(void*)swigCPtr, cast(void*)origin);
  }

  public uint GetNumberOfLevels() const {
    auto ret = vtkd_im.vtkAMRInformation_GetNumberOfLevels(cast(void*)swigCPtr);
    return ret;
  }

  public uint GetNumberOfDataSets(uint level) const {
    auto ret = vtkd_im.vtkAMRInformation_GetNumberOfDataSets(cast(void*)swigCPtr, level);
    return ret;
  }

  public uint GetTotalNumberOfBlocks() {
    auto ret = vtkd_im.vtkAMRInformation_GetTotalNumberOfBlocks(cast(void*)swigCPtr);
    return ret;
  }

  public int GetIndex(uint level, uint id) const {
    auto ret = vtkd_im.vtkAMRInformation_GetIndex(cast(void*)swigCPtr, level, id);
    return ret;
  }

  public void ComputeIndexPair(uint index, uint* level, uint* id) {
    vtkd_im.vtkAMRInformation_ComputeIndexPair(cast(void*)swigCPtr, index, cast(void*)level, cast(void*)id);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkAMRInformation_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(uint level, uint id, double* bb) {
    vtkd_im.vtkAMRInformation_GetBounds__SWIG_1(cast(void*)swigCPtr, level, id, cast(void*)bb);
  }

  public bool GetOrigin(uint level, uint id, double* origin) {
    bool ret = vtkd_im.vtkAMRInformation_GetOrigin__SWIG_2(cast(void*)swigCPtr, level, id, cast(void*)origin) ? true : false;
    return ret;
  }

  public void GetSpacing(uint level, SWIGTYPE_p_double.SWIGTYPE_p_double spacing) {
    vtkd_im.vtkAMRInformation_GetSpacing(cast(void*)swigCPtr, level, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(spacing));
  }

  public bool HasSpacing(uint level) {
    bool ret = vtkd_im.vtkAMRInformation_HasSpacing(cast(void*)swigCPtr, level) ? true : false;
    return ret;
  }

  public void SetAMRBox(uint level, uint id, vtkAMRBox.vtkAMRBox box) {
    vtkd_im.vtkAMRInformation_SetAMRBox(cast(void*)swigCPtr, level, id, vtkAMRBox.vtkAMRBox.swigGetCPtr(box));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkAMRBox.vtkAMRBox GetAMRBox(uint level, uint id) const {
    vtkAMRBox.vtkAMRBox ret = new vtkAMRBox.vtkAMRBox(vtkd_im.vtkAMRInformation_GetAMRBox(cast(void*)swigCPtr, level, id), false);
    return ret;
  }

  public bool GetCoarsenedAMRBox(uint level, uint id, vtkAMRBox.vtkAMRBox box) const {
    bool ret = vtkd_im.vtkAMRInformation_GetCoarsenedAMRBox(cast(void*)swigCPtr, level, id, vtkAMRBox.vtkAMRBox.swigGetCPtr(box)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetAMRBlockSourceIndex(int index) {
    auto ret = vtkd_im.vtkAMRInformation_GetAMRBlockSourceIndex(cast(void*)swigCPtr, index);
    return ret;
  }

  public void SetAMRBlockSourceIndex(int index, int sourceId) {
    vtkd_im.vtkAMRInformation_SetAMRBlockSourceIndex(cast(void*)swigCPtr, index, sourceId);
  }

  public void GenerateRefinementRatio() {
    vtkd_im.vtkAMRInformation_GenerateRefinementRatio(cast(void*)swigCPtr);
  }

  public bool HasRefinementRatio() {
    bool ret = vtkd_im.vtkAMRInformation_HasRefinementRatio(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetRefinementRatio(uint level, int ratio) {
    vtkd_im.vtkAMRInformation_SetRefinementRatio(cast(void*)swigCPtr, level, ratio);
  }

  public int GetRefinementRatio(uint level) const {
    auto ret = vtkd_im.vtkAMRInformation_GetRefinementRatio(cast(void*)swigCPtr, level);
    return ret;
  }

  public void SetSpacing(uint level, double* h) {
    vtkd_im.vtkAMRInformation_SetSpacing(cast(void*)swigCPtr, level, cast(void*)h);
  }

  public bool HasChildrenInformation() {
    bool ret = vtkd_im.vtkAMRInformation_HasChildrenInformation(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public uint* GetParents(uint level, uint index, uint* numParents) {
    auto ret = cast(uint*)vtkd_im.vtkAMRInformation_GetParents(cast(void*)swigCPtr, level, index, cast(void*)numParents);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public uint* GetChildren(uint level, uint index, uint* numChildren) {
    auto ret = cast(uint*)vtkd_im.vtkAMRInformation_GetChildren(cast(void*)swigCPtr, level, index, cast(void*)numChildren);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void PrintParentChildInfo(uint level, uint index) {
    vtkd_im.vtkAMRInformation_PrintParentChildInfo(cast(void*)swigCPtr, level, index);
  }

  public void GenerateParentChildInformation() {
    vtkd_im.vtkAMRInformation_GenerateParentChildInformation(cast(void*)swigCPtr);
  }

  public bool Audit() {
    bool ret = vtkd_im.vtkAMRInformation_Audit(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public bool FindCell(SWIGTYPE_p_double.SWIGTYPE_p_double q, uint level, uint index, int* cellIdx) {
    bool ret = vtkd_im.vtkAMRInformation_FindCell(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q), level, index, cast(void*)cellIdx) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool FindGrid(SWIGTYPE_p_double.SWIGTYPE_p_double q, int level, uint* gridId) {
    bool ret = vtkd_im.vtkAMRInformation_FindGrid__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q), level, cast(void*)gridId) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public bool FindGrid(SWIGTYPE_p_double.SWIGTYPE_p_double q, uint* level, uint* gridId) {
    bool ret = vtkd_im.vtkAMRInformation_FindGrid__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(q), cast(void*)level, cast(void*)gridId) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_int_t.SWIGTYPE_p_std__vectorT_int_t GetNumBlocks() const {
    SWIGTYPE_p_std__vectorT_int_t.SWIGTYPE_p_std__vectorT_int_t ret = new SWIGTYPE_p_std__vectorT_int_t.SWIGTYPE_p_std__vectorT_int_t(vtkd_im.vtkAMRInformation_GetNumBlocks(cast(void*)swigCPtr), false);
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t.SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t GetChildrenAtLevel(uint i) {
    SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t.SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t ret = new SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t.SWIGTYPE_p_std__vectorT_std__vectorT_unsigned_int_t_t(vtkd_im.vtkAMRInformation_GetChildrenAtLevel(cast(void*)swigCPtr, i), false);
    return ret;
  }

  public void DeepCopy(vtkAMRInformation other) {
    vtkd_im.vtkAMRInformation_DeepCopy(cast(void*)swigCPtr, vtkAMRInformation.swigGetCPtr(other));
  }
}
