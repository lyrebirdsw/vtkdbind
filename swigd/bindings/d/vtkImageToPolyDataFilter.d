/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageToPolyDataFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkScalarsToColors;
static import vtkPolyDataAlgorithm;

class vtkImageToPolyDataFilter : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageToPolyDataFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageToPolyDataFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageToPolyDataFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageToPolyDataFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageToPolyDataFilter ret = (cPtr is null) ? null : new vtkImageToPolyDataFilter(cPtr, false);
    return ret;
  }

  public vtkImageToPolyDataFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkImageToPolyDataFilter_NewInstance(cast(void*)swigCPtr);
    vtkImageToPolyDataFilter ret = (cPtr is null) ? null : new vtkImageToPolyDataFilter(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkImageToPolyDataFilter New() {
    void* cPtr = vtkd_im.vtkImageToPolyDataFilter_New();
    vtkImageToPolyDataFilter ret = (cPtr is null) ? null : new vtkImageToPolyDataFilter(cPtr, false);
    return ret;
  }

  public void SetOutputStyle(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetOutputStyle(cast(void*)swigCPtr, _arg);
  }

  public int GetOutputStyleMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetOutputStyleMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputStyleMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetOutputStyleMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOutputStyle() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetOutputStyle(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOutputStyleToPixelize() {
    vtkd_im.vtkImageToPolyDataFilter_SetOutputStyleToPixelize(cast(void*)swigCPtr);
  }

  public void SetOutputStyleToPolygonalize() {
    vtkd_im.vtkImageToPolyDataFilter_SetOutputStyleToPolygonalize(cast(void*)swigCPtr);
  }

  public void SetOutputStyleToRunLength() {
    vtkd_im.vtkImageToPolyDataFilter_SetOutputStyleToRunLength(cast(void*)swigCPtr);
  }

  public void SetColorMode(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetColorMode(cast(void*)swigCPtr, _arg);
  }

  public int GetColorModeMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetColorModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetColorModeMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetColorModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetColorMode() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetColorMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetColorModeToLUT() {
    vtkd_im.vtkImageToPolyDataFilter_SetColorModeToLUT(cast(void*)swigCPtr);
  }

  public void SetColorModeToLinear256() {
    vtkd_im.vtkImageToPolyDataFilter_SetColorModeToLinear256(cast(void*)swigCPtr);
  }

  public void SetLookupTable(vtkScalarsToColors.vtkScalarsToColors arg0) {
    vtkd_im.vtkImageToPolyDataFilter_SetLookupTable(cast(void*)swigCPtr, vtkScalarsToColors.vtkScalarsToColors.swigGetCPtr(arg0));
  }

  public vtkScalarsToColors.vtkScalarsToColors GetLookupTable() {
    void* cPtr = vtkd_im.vtkImageToPolyDataFilter_GetLookupTable(cast(void*)swigCPtr);
    vtkScalarsToColors.vtkScalarsToColors ret = (cPtr is null) ? null : new vtkScalarsToColors.vtkScalarsToColors(cPtr, false);
    return ret;
  }

  public void SetSmoothing(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetSmoothing(cast(void*)swigCPtr, _arg);
  }

  public int GetSmoothing() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetSmoothing(cast(void*)swigCPtr);
    return ret;
  }

  public void SmoothingOn() {
    vtkd_im.vtkImageToPolyDataFilter_SmoothingOn(cast(void*)swigCPtr);
  }

  public void SmoothingOff() {
    vtkd_im.vtkImageToPolyDataFilter_SmoothingOff(cast(void*)swigCPtr);
  }

  public void SetNumberOfSmoothingIterations(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetNumberOfSmoothingIterations(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfSmoothingIterationsMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetNumberOfSmoothingIterationsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfSmoothingIterationsMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetNumberOfSmoothingIterationsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfSmoothingIterations() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetNumberOfSmoothingIterations(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDecimation(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetDecimation(cast(void*)swigCPtr, _arg);
  }

  public int GetDecimation() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetDecimation(cast(void*)swigCPtr);
    return ret;
  }

  public void DecimationOn() {
    vtkd_im.vtkImageToPolyDataFilter_DecimationOn(cast(void*)swigCPtr);
  }

  public void DecimationOff() {
    vtkd_im.vtkImageToPolyDataFilter_DecimationOff(cast(void*)swigCPtr);
  }

  public void SetDecimationError(double _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetDecimationError(cast(void*)swigCPtr, _arg);
  }

  public double GetDecimationErrorMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetDecimationErrorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDecimationErrorMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetDecimationErrorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDecimationError() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetDecimationError(cast(void*)swigCPtr);
    return ret;
  }

  public void SetError(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetError(cast(void*)swigCPtr, _arg);
  }

  public int GetErrorMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetErrorMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetErrorMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetErrorMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetError() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetError(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSubImageSize(int _arg) {
    vtkd_im.vtkImageToPolyDataFilter_SetSubImageSize(cast(void*)swigCPtr, _arg);
  }

  public int GetSubImageSizeMinValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetSubImageSizeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSubImageSizeMaxValue() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetSubImageSizeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSubImageSize() {
    auto ret = vtkd_im.vtkImageToPolyDataFilter_GetSubImageSize(cast(void*)swigCPtr);
    return ret;
  }
}
