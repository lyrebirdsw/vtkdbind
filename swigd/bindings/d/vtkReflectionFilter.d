/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkReflectionFilter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataObjectAlgorithm;

class vtkReflectionFilter : vtkDataObjectAlgorithm.vtkDataObjectAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkReflectionFilter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkReflectionFilter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkReflectionFilter New() {
    void* cPtr = vtkd_im.vtkReflectionFilter_New();
    vtkReflectionFilter ret = (cPtr is null) ? null : new vtkReflectionFilter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkReflectionFilter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkReflectionFilter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkReflectionFilter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkReflectionFilter ret = (cPtr is null) ? null : new vtkReflectionFilter(cPtr, false);
    return ret;
  }

  public vtkReflectionFilter NewInstance() const {
    void* cPtr = vtkd_im.vtkReflectionFilter_NewInstance(cast(void*)swigCPtr);
    vtkReflectionFilter ret = (cPtr is null) ? null : new vtkReflectionFilter(cPtr, false);
    return ret;
  }

  alias vtkDataObjectAlgorithm.vtkDataObjectAlgorithm.NewInstance NewInstance;

  public void SetPlane(int _arg) {
    vtkd_im.vtkReflectionFilter_SetPlane(cast(void*)swigCPtr, _arg);
  }

  public int GetPlaneMinValue() {
    auto ret = vtkd_im.vtkReflectionFilter_GetPlaneMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPlaneMaxValue() {
    auto ret = vtkd_im.vtkReflectionFilter_GetPlaneMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPlane() {
    auto ret = vtkd_im.vtkReflectionFilter_GetPlane(cast(void*)swigCPtr);
    return ret;
  }

  public void SetPlaneToX() {
    vtkd_im.vtkReflectionFilter_SetPlaneToX(cast(void*)swigCPtr);
  }

  public void SetPlaneToY() {
    vtkd_im.vtkReflectionFilter_SetPlaneToY(cast(void*)swigCPtr);
  }

  public void SetPlaneToZ() {
    vtkd_im.vtkReflectionFilter_SetPlaneToZ(cast(void*)swigCPtr);
  }

  public void SetPlaneToXMin() {
    vtkd_im.vtkReflectionFilter_SetPlaneToXMin(cast(void*)swigCPtr);
  }

  public void SetPlaneToYMin() {
    vtkd_im.vtkReflectionFilter_SetPlaneToYMin(cast(void*)swigCPtr);
  }

  public void SetPlaneToZMin() {
    vtkd_im.vtkReflectionFilter_SetPlaneToZMin(cast(void*)swigCPtr);
  }

  public void SetPlaneToXMax() {
    vtkd_im.vtkReflectionFilter_SetPlaneToXMax(cast(void*)swigCPtr);
  }

  public void SetPlaneToYMax() {
    vtkd_im.vtkReflectionFilter_SetPlaneToYMax(cast(void*)swigCPtr);
  }

  public void SetPlaneToZMax() {
    vtkd_im.vtkReflectionFilter_SetPlaneToZMax(cast(void*)swigCPtr);
  }

  public void SetCenter(double _arg) {
    vtkd_im.vtkReflectionFilter_SetCenter(cast(void*)swigCPtr, _arg);
  }

  public double GetCenter() {
    auto ret = vtkd_im.vtkReflectionFilter_GetCenter(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCopyInput(int _arg) {
    vtkd_im.vtkReflectionFilter_SetCopyInput(cast(void*)swigCPtr, _arg);
  }

  public int GetCopyInput() {
    auto ret = vtkd_im.vtkReflectionFilter_GetCopyInput(cast(void*)swigCPtr);
    return ret;
  }

  public void CopyInputOn() {
    vtkd_im.vtkReflectionFilter_CopyInputOn(cast(void*)swigCPtr);
  }

  public void CopyInputOff() {
    vtkd_im.vtkReflectionFilter_CopyInputOff(cast(void*)swigCPtr);
  }
}
