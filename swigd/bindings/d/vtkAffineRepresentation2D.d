/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAffineRepresentation2D;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkProperty2D;
static import vtkTextProperty;
static import vtkAffineRepresentation;

class vtkAffineRepresentation2D : vtkAffineRepresentation.vtkAffineRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAffineRepresentation2D_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAffineRepresentation2D obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAffineRepresentation2D New() {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_New();
    vtkAffineRepresentation2D ret = (cPtr is null) ? null : new vtkAffineRepresentation2D(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAffineRepresentation2D_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAffineRepresentation2D SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAffineRepresentation2D ret = (cPtr is null) ? null : new vtkAffineRepresentation2D(cPtr, false);
    return ret;
  }

  public vtkAffineRepresentation2D NewInstance() const {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_NewInstance(cast(void*)swigCPtr);
    vtkAffineRepresentation2D ret = (cPtr is null) ? null : new vtkAffineRepresentation2D(cPtr, false);
    return ret;
  }

  alias vtkAffineRepresentation.vtkAffineRepresentation.NewInstance NewInstance;

  public void SetBoxWidth(int _arg) {
    vtkd_im.vtkAffineRepresentation2D_SetBoxWidth(cast(void*)swigCPtr, _arg);
  }

  public int GetBoxWidthMinValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetBoxWidthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBoxWidthMaxValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetBoxWidthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBoxWidth() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetBoxWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCircleWidth(int _arg) {
    vtkd_im.vtkAffineRepresentation2D_SetCircleWidth(cast(void*)swigCPtr, _arg);
  }

  public int GetCircleWidthMinValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetCircleWidthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCircleWidthMaxValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetCircleWidthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetCircleWidth() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetCircleWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxesWidth(int _arg) {
    vtkd_im.vtkAffineRepresentation2D_SetAxesWidth(cast(void*)swigCPtr, _arg);
  }

  public int GetAxesWidthMinValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetAxesWidthMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxesWidthMaxValue() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetAxesWidthMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAxesWidth() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetAxesWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double o) {
    vtkd_im.vtkAffineRepresentation2D_SetOrigin__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(o));
  }

  public void SetOrigin(double ox, double oy, double oz) {
    vtkd_im.vtkAffineRepresentation2D_SetOrigin__SWIG_1(cast(void*)swigCPtr, ox, oy, oz);
  }

  public double* GetOrigin() {
    auto ret = cast(double*)vtkd_im.vtkAffineRepresentation2D_GetOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOrigin(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkAffineRepresentation2D_GetOrigin__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkAffineRepresentation2D_GetOrigin__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetProperty(vtkProperty2D.vtkProperty2D arg0) {
    vtkd_im.vtkAffineRepresentation2D_SetProperty(cast(void*)swigCPtr, vtkProperty2D.vtkProperty2D.swigGetCPtr(arg0));
  }

  public void SetSelectedProperty(vtkProperty2D.vtkProperty2D arg0) {
    vtkd_im.vtkAffineRepresentation2D_SetSelectedProperty(cast(void*)swigCPtr, vtkProperty2D.vtkProperty2D.swigGetCPtr(arg0));
  }

  public void SetTextProperty(vtkTextProperty.vtkTextProperty arg0) {
    vtkd_im.vtkAffineRepresentation2D_SetTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(arg0));
  }

  public vtkProperty2D.vtkProperty2D GetProperty() {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_GetProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkProperty2D.vtkProperty2D GetSelectedProperty() {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_GetSelectedProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetTextProperty() {
    void* cPtr = vtkd_im.vtkAffineRepresentation2D_GetTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetDisplayText(int _arg) {
    vtkd_im.vtkAffineRepresentation2D_SetDisplayText(cast(void*)swigCPtr, _arg);
  }

  public int GetDisplayText() {
    auto ret = vtkd_im.vtkAffineRepresentation2D_GetDisplayText(cast(void*)swigCPtr);
    return ret;
  }

  public void DisplayTextOn() {
    vtkd_im.vtkAffineRepresentation2D_DisplayTextOn(cast(void*)swigCPtr);
  }

  public void DisplayTextOff() {
    vtkd_im.vtkAffineRepresentation2D_DisplayTextOff(cast(void*)swigCPtr);
  }

  public void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkAffineRepresentation2D_PlaceWidget(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkAffineRepresentation2D_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkAffineRepresentation2D_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }
}
