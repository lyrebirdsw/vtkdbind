/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkContourHelper;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkIncrementalPointLocator;
static import vtkCellArray;
static import vtkPointData;
static import vtkCellData;
static import vtkCell;
static import vtkDataArray;

class vtkContourHelper {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkContourHelper obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkContourHelper(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this(vtkIncrementalPointLocator.vtkIncrementalPointLocator locator, vtkCellArray.vtkCellArray verts, vtkCellArray.vtkCellArray lines, vtkCellArray.vtkCellArray polys, vtkPointData.vtkPointData inPd, vtkCellData.vtkCellData inCd, vtkPointData.vtkPointData outPd, vtkCellData.vtkCellData outCd, int estimatedSize, bool outputTriangles) {
    this(vtkd_im.new_vtkContourHelper(vtkIncrementalPointLocator.vtkIncrementalPointLocator.swigGetCPtr(locator), vtkCellArray.vtkCellArray.swigGetCPtr(verts), vtkCellArray.vtkCellArray.swigGetCPtr(lines), vtkCellArray.vtkCellArray.swigGetCPtr(polys), vtkPointData.vtkPointData.swigGetCPtr(inPd), vtkCellData.vtkCellData.swigGetCPtr(inCd), vtkPointData.vtkPointData.swigGetCPtr(outPd), vtkCellData.vtkCellData.swigGetCPtr(outCd), estimatedSize, outputTriangles), true);
  }

  public void Contour(vtkCell.vtkCell cell, double value, vtkDataArray.vtkDataArray cellScalars, long cellId) {
    vtkd_im.vtkContourHelper_Contour(cast(void*)swigCPtr, vtkCell.vtkCell.swigGetCPtr(cell), value, vtkDataArray.vtkDataArray.swigGetCPtr(cellScalars), cellId);
  }
}
