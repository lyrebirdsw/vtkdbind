/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkActor2DCollection;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkActor2D;
static import vtkViewport;
static import vtkPropCollection;

class vtkActor2DCollection : vtkPropCollection.vtkPropCollection {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkActor2DCollection_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkActor2DCollection obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkActor2DCollection New() {
    void* cPtr = vtkd_im.vtkActor2DCollection_New();
    vtkActor2DCollection ret = (cPtr is null) ? null : new vtkActor2DCollection(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkActor2DCollection_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkActor2DCollection SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkActor2DCollection_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkActor2DCollection ret = (cPtr is null) ? null : new vtkActor2DCollection(cPtr, false);
    return ret;
  }

  public vtkActor2DCollection NewInstance() const {
    void* cPtr = vtkd_im.vtkActor2DCollection_NewInstance(cast(void*)swigCPtr);
    vtkActor2DCollection ret = (cPtr is null) ? null : new vtkActor2DCollection(cPtr, false);
    return ret;
  }

  alias vtkPropCollection.vtkPropCollection.NewInstance NewInstance;

  public void Sort() {
    vtkd_im.vtkActor2DCollection_Sort(cast(void*)swigCPtr);
  }

  public void AddItem(vtkActor2D.vtkActor2D a) {
    vtkd_im.vtkActor2DCollection_AddItem(cast(void*)swigCPtr, vtkActor2D.vtkActor2D.swigGetCPtr(a));
  }

  alias vtkPropCollection.vtkPropCollection.AddItem AddItem;

  public int IsItemPresent(vtkActor2D.vtkActor2D a) {
    auto ret = vtkd_im.vtkActor2DCollection_IsItemPresent(cast(void*)swigCPtr, vtkActor2D.vtkActor2D.swigGetCPtr(a));
    return ret;
  }

  public vtkActor2D.vtkActor2D GetNextActor2D() {
    void* cPtr = vtkd_im.vtkActor2DCollection_GetNextActor2D(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public vtkActor2D.vtkActor2D GetLastActor2D() {
    void* cPtr = vtkd_im.vtkActor2DCollection_GetLastActor2D(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public vtkActor2D.vtkActor2D GetNextItem() {
    void* cPtr = vtkd_im.vtkActor2DCollection_GetNextItem(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public vtkActor2D.vtkActor2D GetLastItem() {
    void* cPtr = vtkd_im.vtkActor2DCollection_GetLastItem(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public void RenderOverlay(vtkViewport.vtkViewport viewport) {
    vtkd_im.vtkActor2DCollection_RenderOverlay(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(viewport));
  }
}
