/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericEnSightReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkDataArrayCollection;
static import vtkDataArraySelection;
static import vtkMultiBlockDataSetAlgorithm;

class vtkGenericEnSightReader : vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericEnSightReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericEnSightReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGenericEnSightReader New() {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_New();
    vtkGenericEnSightReader ret = (cPtr is null) ? null : new vtkGenericEnSightReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericEnSightReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericEnSightReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericEnSightReader ret = (cPtr is null) ? null : new vtkGenericEnSightReader(cPtr, false);
    return ret;
  }

  public vtkGenericEnSightReader NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_NewInstance(cast(void*)swigCPtr);
    vtkGenericEnSightReader ret = (cPtr is null) ? null : new vtkGenericEnSightReader(cPtr, false);
    return ret;
  }

  alias vtkMultiBlockDataSetAlgorithm.vtkMultiBlockDataSetAlgorithm.NewInstance NewInstance;

  public void SetCaseFileName(string fileName) {
    vtkd_im.vtkGenericEnSightReader_SetCaseFileName(cast(void*)swigCPtr, (fileName ? std.string.toStringz(fileName) : null));
  }

  public string GetCaseFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetCaseFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFilePath(string _arg) {
    vtkd_im.vtkGenericEnSightReader_SetFilePath(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetFilePath() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetFilePath(cast(void*)swigCPtr));
    return ret;
  }

  public int GetEnSightVersion() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetEnSightVersion(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfVariables() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfVariables__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfComplexVariables() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfComplexVariables(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfVariables(int type) {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfVariables__SWIG_1(cast(void*)swigCPtr, type);
    return ret;
  }

  public int GetNumberOfScalarsPerNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfScalarsPerNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfVectorsPerNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfVectorsPerNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTensorsSymmPerNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfTensorsSymmPerNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfScalarsPerElement() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfScalarsPerElement(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfVectorsPerElement() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfVectorsPerElement(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTensorsSymmPerElement() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfTensorsSymmPerElement(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfScalarsPerMeasuredNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfScalarsPerMeasuredNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfVectorsPerMeasuredNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfVectorsPerMeasuredNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfComplexScalarsPerNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfComplexScalarsPerNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfComplexVectorsPerNode() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfComplexVectorsPerNode(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfComplexScalarsPerElement() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfComplexScalarsPerElement(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfComplexVectorsPerElement() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfComplexVectorsPerElement(cast(void*)swigCPtr);
    return ret;
  }

  public string GetDescription(int n) {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetDescription__SWIG_0(cast(void*)swigCPtr, n));
    return ret;
  }

  public string GetComplexDescription(int n) {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetComplexDescription(cast(void*)swigCPtr, n));
    return ret;
  }

  public string GetDescription(int n, int type) {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetDescription__SWIG_1(cast(void*)swigCPtr, n, type));
    return ret;
  }

  public int GetVariableType(int n) {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetVariableType(cast(void*)swigCPtr, n);
    return ret;
  }

  public int GetComplexVariableType(int n) {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetComplexVariableType(cast(void*)swigCPtr, n);
    return ret;
  }

  public void SetTimeValue(float value) {
    vtkd_im.vtkGenericEnSightReader_SetTimeValue(cast(void*)swigCPtr, value);
  }

  public float GetTimeValue() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetTimeValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetMinimumTimeValue() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetMinimumTimeValue(cast(void*)swigCPtr);
    return ret;
  }

  public float GetMaximumTimeValue() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetMaximumTimeValue(cast(void*)swigCPtr);
    return ret;
  }

  public vtkDataArrayCollection.vtkDataArrayCollection GetTimeSets() {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_GetTimeSets(cast(void*)swigCPtr);
    vtkDataArrayCollection.vtkDataArrayCollection ret = (cPtr is null) ? null : new vtkDataArrayCollection.vtkDataArrayCollection(cPtr, false);
    return ret;
  }

  public int DetermineEnSightVersion(int quiet) {
    auto ret = vtkd_im.vtkGenericEnSightReader_DetermineEnSightVersion__SWIG_0(cast(void*)swigCPtr, quiet);
    return ret;
  }

  public int DetermineEnSightVersion() {
    auto ret = vtkd_im.vtkGenericEnSightReader_DetermineEnSightVersion__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadAllVariablesOn() {
    vtkd_im.vtkGenericEnSightReader_ReadAllVariablesOn(cast(void*)swigCPtr);
  }

  public void ReadAllVariablesOff() {
    vtkd_im.vtkGenericEnSightReader_ReadAllVariablesOff(cast(void*)swigCPtr);
  }

  public void SetReadAllVariables(int _arg) {
    vtkd_im.vtkGenericEnSightReader_SetReadAllVariables(cast(void*)swigCPtr, _arg);
  }

  public int GetReadAllVariables() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetReadAllVariables(cast(void*)swigCPtr);
    return ret;
  }

  public vtkDataArraySelection.vtkDataArraySelection GetPointDataArraySelection() {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_GetPointDataArraySelection(cast(void*)swigCPtr);
    vtkDataArraySelection.vtkDataArraySelection ret = (cPtr is null) ? null : new vtkDataArraySelection.vtkDataArraySelection(cPtr, false);
    return ret;
  }

  public vtkDataArraySelection.vtkDataArraySelection GetCellDataArraySelection() {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_GetCellDataArraySelection(cast(void*)swigCPtr);
    vtkDataArraySelection.vtkDataArraySelection ret = (cPtr is null) ? null : new vtkDataArraySelection.vtkDataArraySelection(cPtr, false);
    return ret;
  }

  public int GetNumberOfPointArrays() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfPointArrays(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfCellArrays() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetNumberOfCellArrays(cast(void*)swigCPtr);
    return ret;
  }

  public string GetPointArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetPointArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public string GetCellArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetCellArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public int GetPointArrayStatus(string name) {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public int GetCellArrayStatus(string name) {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }

  public void SetPointArrayStatus(string name, int status) {
    vtkd_im.vtkGenericEnSightReader_SetPointArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void SetCellArrayStatus(string name, int status) {
    vtkd_im.vtkGenericEnSightReader_SetCellArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), status);
  }

  public void SetByteOrderToBigEndian() {
    vtkd_im.vtkGenericEnSightReader_SetByteOrderToBigEndian(cast(void*)swigCPtr);
  }

  public void SetByteOrderToLittleEndian() {
    vtkd_im.vtkGenericEnSightReader_SetByteOrderToLittleEndian(cast(void*)swigCPtr);
  }

  public void SetByteOrder(int _arg) {
    vtkd_im.vtkGenericEnSightReader_SetByteOrder(cast(void*)swigCPtr, _arg);
  }

  public int GetByteOrder() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetByteOrder(cast(void*)swigCPtr);
    return ret;
  }

  public string GetByteOrderAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetByteOrderAsString(cast(void*)swigCPtr));
    return ret;
  }

  public string GetGeometryFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericEnSightReader_GetGeometryFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetParticleCoordinatesByIndex(int _arg) {
    vtkd_im.vtkGenericEnSightReader_SetParticleCoordinatesByIndex(cast(void*)swigCPtr, _arg);
  }

  public int GetParticleCoordinatesByIndex() {
    auto ret = vtkd_im.vtkGenericEnSightReader_GetParticleCoordinatesByIndex(cast(void*)swigCPtr);
    return ret;
  }

  public void ParticleCoordinatesByIndexOn() {
    vtkd_im.vtkGenericEnSightReader_ParticleCoordinatesByIndexOn(cast(void*)swigCPtr);
  }

  public void ParticleCoordinatesByIndexOff() {
    vtkd_im.vtkGenericEnSightReader_ParticleCoordinatesByIndexOff(cast(void*)swigCPtr);
  }

  public static int CanReadFile(string casefilename) {
    auto ret = vtkd_im.vtkGenericEnSightReader_CanReadFile((casefilename ? std.string.toStringz(casefilename) : null));
    return ret;
  }

  public vtkGenericEnSightReader GetReader() {
    void* cPtr = vtkd_im.vtkGenericEnSightReader_GetReader(cast(void*)swigCPtr);
    vtkGenericEnSightReader ret = (cPtr is null) ? null : new vtkGenericEnSightReader(cPtr, false);
    return ret;
  }
}
