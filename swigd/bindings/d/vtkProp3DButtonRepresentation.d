/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkProp3DButtonRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkProp3D;
static import SWIGTYPE_p_double;
static import vtkButtonRepresentation;

class vtkProp3DButtonRepresentation : vtkButtonRepresentation.vtkButtonRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkProp3DButtonRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkProp3DButtonRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkProp3DButtonRepresentation New() {
    void* cPtr = vtkd_im.vtkProp3DButtonRepresentation_New();
    vtkProp3DButtonRepresentation ret = (cPtr is null) ? null : new vtkProp3DButtonRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkProp3DButtonRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkProp3DButtonRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkProp3DButtonRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkProp3DButtonRepresentation ret = (cPtr is null) ? null : new vtkProp3DButtonRepresentation(cPtr, false);
    return ret;
  }

  public vtkProp3DButtonRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkProp3DButtonRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkProp3DButtonRepresentation ret = (cPtr is null) ? null : new vtkProp3DButtonRepresentation(cPtr, false);
    return ret;
  }

  alias vtkButtonRepresentation.vtkButtonRepresentation.NewInstance NewInstance;

  public void SetButtonProp(int i, vtkProp3D.vtkProp3D prop) {
    vtkd_im.vtkProp3DButtonRepresentation_SetButtonProp(cast(void*)swigCPtr, i, vtkProp3D.vtkProp3D.swigGetCPtr(prop));
  }

  public vtkProp3D.vtkProp3D GetButtonProp(int i) {
    void* cPtr = vtkd_im.vtkProp3DButtonRepresentation_GetButtonProp(cast(void*)swigCPtr, i);
    vtkProp3D.vtkProp3D ret = (cPtr is null) ? null : new vtkProp3D.vtkProp3D(cPtr, false);
    return ret;
  }

  public void SetFollowCamera(int _arg) {
    vtkd_im.vtkProp3DButtonRepresentation_SetFollowCamera(cast(void*)swigCPtr, _arg);
  }

  public int GetFollowCamera() {
    auto ret = vtkd_im.vtkProp3DButtonRepresentation_GetFollowCamera(cast(void*)swigCPtr);
    return ret;
  }

  public void FollowCameraOn() {
    vtkd_im.vtkProp3DButtonRepresentation_FollowCameraOn(cast(void*)swigCPtr);
  }

  public void FollowCameraOff() {
    vtkd_im.vtkProp3DButtonRepresentation_FollowCameraOff(cast(void*)swigCPtr);
  }

  public override int ComputeInteractionState(int X, int Y, int modify) {
    auto ret = vtkd_im.vtkProp3DButtonRepresentation_ComputeInteractionState__SWIG_0(cast(void*)swigCPtr, X, Y, modify);
    return ret;
  }

  public override int ComputeInteractionState(int X, int Y) {
    auto ret = vtkd_im.vtkProp3DButtonRepresentation_ComputeInteractionState__SWIG_1(cast(void*)swigCPtr, X, Y);
    return ret;
  }

  public void PlaceWidget(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkProp3DButtonRepresentation_PlaceWidget(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }
}
