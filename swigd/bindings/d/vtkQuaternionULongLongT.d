/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionULongLongT;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_unsigned_long_long;
static import SWIGTYPE_p_a_3__unsigned_long_long;
static import vtkUnsignedLongLongTuple4TN;

class vtkQuaternionULongLongT : vtkUnsignedLongLongTuple4TN.vtkUnsignedLongLongTuple4TN {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionULongLongT_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionULongLongT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionULongLongT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionULongLongT__SWIG_0(), true);
  }

  public this(ulong scalar) {
    this(vtkd_im.new_vtkQuaternionULongLongT__SWIG_1(scalar), true);
  }

  public this(ulong* init) {
    this(vtkd_im.new_vtkQuaternionULongLongT__SWIG_2(cast(void*)init), true);
  }

  public this(ulong w, ulong x, ulong y, ulong z) {
    this(vtkd_im.new_vtkQuaternionULongLongT__SWIG_3(w, x, y, z), true);
  }

  public ulong SquaredNorm() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_SquaredNorm(cast(void*)swigCPtr);
    return ret;
  }

  public ulong Norm() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_Norm(cast(void*)swigCPtr);
    return ret;
  }

  public void ToIdentity() {
    vtkd_im.vtkQuaternionULongLongT_ToIdentity(cast(void*)swigCPtr);
  }

  public static vtkQuaternionULongLongT Identity() {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_Identity(), true);
    return ret;
  }

  public ulong Normalize() {
    auto ret = vtkd_im.vtkQuaternionULongLongT_Normalize(cast(void*)swigCPtr);
    return ret;
  }

  public vtkQuaternionULongLongT Normalized() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Conjugate() {
    vtkd_im.vtkQuaternionULongLongT_Conjugate(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongLongT Conjugated() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Invert() {
    vtkd_im.vtkQuaternionULongLongT_Invert(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongLongT Inverse() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitLog() {
    vtkd_im.vtkQuaternionULongLongT_ToUnitLog(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongLongT UnitLog() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitExp() {
    vtkd_im.vtkQuaternionULongLongT_ToUnitExp(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongLongT UnitExp() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void NormalizeWithAngleInDegrees() {
    vtkd_im.vtkQuaternionULongLongT_NormalizeWithAngleInDegrees(cast(void*)swigCPtr);
  }

  public vtkQuaternionULongLongT NormalizedWithAngleInDegrees() const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Set(ulong w, ulong x, ulong y, ulong z) {
    vtkd_im.vtkQuaternionULongLongT_Set__SWIG_0(cast(void*)swigCPtr, w, x, y, z);
  }

  public void Set(SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long quat) {
    vtkd_im.vtkQuaternionULongLongT_Set__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long.swigGetCPtr(quat));
  }

  public void Get(SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long quat) const {
    vtkd_im.vtkQuaternionULongLongT_Get(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long.swigGetCPtr(quat));
  }

  public void SetW(ulong w) {
    vtkd_im.vtkQuaternionULongLongT_SetW(cast(void*)swigCPtr, w);
  }

  public ulong GetW() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_GetW(cast(void*)swigCPtr);
    return ret;
  }

  public void SetX(ulong x) {
    vtkd_im.vtkQuaternionULongLongT_SetX(cast(void*)swigCPtr, x);
  }

  public ulong GetX() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_GetX(cast(void*)swigCPtr);
    return ret;
  }

  public void SetY(ulong y) {
    vtkd_im.vtkQuaternionULongLongT_SetY(cast(void*)swigCPtr, y);
  }

  public ulong GetY() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_GetY(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZ(ulong z) {
    vtkd_im.vtkQuaternionULongLongT_SetZ(cast(void*)swigCPtr, z);
  }

  public ulong GetZ() const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_GetZ(cast(void*)swigCPtr);
    return ret;
  }

  public ulong GetRotationAngleAndAxis(SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long axis) const {
    auto ret = vtkd_im.vtkQuaternionULongLongT_GetRotationAngleAndAxis(cast(void*)swigCPtr, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long.swigGetCPtr(axis));
    return ret;
  }

  public void SetRotationAngleAndAxis(ulong angle, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long axis) {
    vtkd_im.vtkQuaternionULongLongT_SetRotationAngleAndAxis__SWIG_0(cast(void*)swigCPtr, angle, SWIGTYPE_p_unsigned_long_long.SWIGTYPE_p_unsigned_long_long.swigGetCPtr(axis));
  }

  public void SetRotationAngleAndAxis(ulong angle, ulong x, ulong y, ulong z) {
    vtkd_im.vtkQuaternionULongLongT_SetRotationAngleAndAxis__SWIG_1(cast(void*)swigCPtr, angle, x, y, z);
  }

  public void ToMatrix3x3(SWIGTYPE_p_a_3__unsigned_long_long.SWIGTYPE_p_a_3__unsigned_long_long A) const {
    vtkd_im.vtkQuaternionULongLongT_ToMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__unsigned_long_long.SWIGTYPE_p_a_3__unsigned_long_long.swigGetCPtr(A));
  }

  public void FromMatrix3x3(SWIGTYPE_p_a_3__unsigned_long_long.SWIGTYPE_p_a_3__unsigned_long_long A) {
    vtkd_im.vtkQuaternionULongLongT_FromMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__unsigned_long_long.SWIGTYPE_p_a_3__unsigned_long_long.swigGetCPtr(A));
  }

  public vtkQuaternionULongLongT Slerp(ulong t, vtkQuaternionULongLongT q) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_Slerp(cast(void*)swigCPtr, t, vtkQuaternionULongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongLongT InnerPoint(vtkQuaternionULongLongT q1, vtkQuaternionULongLongT q2) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_InnerPoint(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q1), vtkQuaternionULongLongT.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Equal(vtkQuaternionULongLongT q) {
    vtkd_im.vtkQuaternionULongLongT_Equal(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkQuaternionULongLongT swigOpAdd(vtkQuaternionULongLongT q) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongLongT swigOpSub(vtkQuaternionULongLongT q) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpSub(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongLongT swigOpMul(vtkQuaternionULongLongT q) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongLongT swigOpMul(ulong scalar) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpMulAssign(ulong scalar) const {
    vtkd_im.vtkQuaternionULongLongT_swigOpMulAssign(cast(void*)swigCPtr, scalar);
  }

  public vtkQuaternionULongLongT swigOpDiv(vtkQuaternionULongLongT q) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionULongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionULongLongT swigOpDiv(ulong scalar) const {
    vtkQuaternionULongLongT ret = new vtkQuaternionULongLongT(vtkd_im.vtkQuaternionULongLongT_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpDivAssign(ulong scalar) {
    vtkd_im.vtkQuaternionULongLongT_swigOpDivAssign(cast(void*)swigCPtr, scalar);
  }
}
