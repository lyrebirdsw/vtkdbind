/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module group_element_compare;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t;

class group_element_compare {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(group_element_compare obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_group_element_compare(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public bool opCall(SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t p1, SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t p2) const {
    bool ret = vtkd_im.group_element_compare_opCall(cast(void*)swigCPtr, SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.swigGetCPtr(p1), SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.SWIGTYPE_p_std__pairT_unsigned_short_unsigned_short_t.swigGetCPtr(p2)) ? true : false;
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public this() {
    this(vtkd_im.new_group_element_compare(), true);
  }
}
