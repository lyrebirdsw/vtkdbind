/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkXMLDataElement;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_ostream;
static import vtkIndent;
static import vtkObject;

class vtkXMLDataElement : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkXMLDataElement_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkXMLDataElement obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkXMLDataElement_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkXMLDataElement SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkXMLDataElement_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement NewInstance() const {
    void* cPtr = vtkd_im.vtkXMLDataElement_NewInstance(cast(void*)swigCPtr);
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkXMLDataElement New() {
    void* cPtr = vtkd_im.vtkXMLDataElement_New();
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public string GetName() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetName(string _arg) {
    vtkd_im.vtkXMLDataElement_SetName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetId() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetId(cast(void*)swigCPtr));
    return ret;
  }

  public void SetId(string _arg) {
    vtkd_im.vtkXMLDataElement_SetId(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetAttribute(string name) {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null)));
    return ret;
  }

  public void SetAttribute(string name, string value) {
    vtkd_im.vtkXMLDataElement_SetAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), (value ? std.string.toStringz(value) : null));
  }

  public void SetCharacterData(string c, int length) {
    vtkd_im.vtkXMLDataElement_SetCharacterData(cast(void*)swigCPtr, (c ? std.string.toStringz(c) : null), length);
  }

  public void AddCharacterData(string c, size_t length) {
    vtkd_im.vtkXMLDataElement_AddCharacterData(cast(void*)swigCPtr, (c ? std.string.toStringz(c) : null), length);
  }

  public string GetCharacterData() {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetCharacterData(cast(void*)swigCPtr));
    return ret;
  }

  public int GetScalarAttribute(string name, int* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetScalarAttribute__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), cast(void*)value);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetScalarAttribute(string name, float* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetScalarAttribute__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), cast(void*)value);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetScalarAttribute(string name, double* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetScalarAttribute__SWIG_2(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), cast(void*)value);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetScalarAttribute(string name, core.stdc.config.c_ulong* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetScalarAttribute__SWIG_3(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), cast(void*)value);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void SetIntAttribute(string name, int value) {
    vtkd_im.vtkXMLDataElement_SetIntAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), value);
  }

  public void SetFloatAttribute(string name, float value) {
    vtkd_im.vtkXMLDataElement_SetFloatAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), value);
  }

  public void SetDoubleAttribute(string name, double value) {
    vtkd_im.vtkXMLDataElement_SetDoubleAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), value);
  }

  public void SetUnsignedLongAttribute(string name, core.stdc.config.c_ulong value) {
    vtkd_im.vtkXMLDataElement_SetUnsignedLongAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), value);
  }

  public int GetVectorAttribute(string name, int length, int* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetVectorAttribute__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
    return ret;
  }

  public int GetVectorAttribute(string name, int length, float* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetVectorAttribute__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
    return ret;
  }

  public int GetVectorAttribute(string name, int length, double* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetVectorAttribute__SWIG_2(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
    return ret;
  }

  public int GetVectorAttribute(string name, int length, core.stdc.config.c_ulong* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetVectorAttribute__SWIG_3(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
    return ret;
  }

  public void SetVectorAttribute(string name, int length, int* value) {
    vtkd_im.vtkXMLDataElement_SetVectorAttribute__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
  }

  public void SetVectorAttribute(string name, int length, float* value) {
    vtkd_im.vtkXMLDataElement_SetVectorAttribute__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
  }

  public void SetVectorAttribute(string name, int length, double* value) {
    vtkd_im.vtkXMLDataElement_SetVectorAttribute__SWIG_2(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
  }

  public void SetVectorAttribute(string name, int length, core.stdc.config.c_ulong* value) {
    vtkd_im.vtkXMLDataElement_SetVectorAttribute__SWIG_3(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), length, cast(void*)value);
  }

  public int GetWordTypeAttribute(string name, int* value) {
    auto ret = vtkd_im.vtkXMLDataElement_GetWordTypeAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), cast(void*)value);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetNumberOfAttributes() {
    auto ret = vtkd_im.vtkXMLDataElement_GetNumberOfAttributes(cast(void*)swigCPtr);
    return ret;
  }

  public string GetAttributeName(int idx) {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetAttributeName(cast(void*)swigCPtr, idx));
    return ret;
  }

  public string GetAttributeValue(int idx) {
    string ret = std.conv.to!string(vtkd_im.vtkXMLDataElement_GetAttributeValue(cast(void*)swigCPtr, idx));
    return ret;
  }

  public void RemoveAttribute(string name) {
    vtkd_im.vtkXMLDataElement_RemoveAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
  }

  public void RemoveAllAttributes() {
    vtkd_im.vtkXMLDataElement_RemoveAllAttributes(cast(void*)swigCPtr);
  }

  public vtkXMLDataElement GetParent() {
    void* cPtr = vtkd_im.vtkXMLDataElement_GetParent(cast(void*)swigCPtr);
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public void SetParent(vtkXMLDataElement parent) {
    vtkd_im.vtkXMLDataElement_SetParent(cast(void*)swigCPtr, vtkXMLDataElement.swigGetCPtr(parent));
  }

  public vtkXMLDataElement GetRoot() {
    void* cPtr = vtkd_im.vtkXMLDataElement_GetRoot(cast(void*)swigCPtr);
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public int GetNumberOfNestedElements() {
    auto ret = vtkd_im.vtkXMLDataElement_GetNumberOfNestedElements(cast(void*)swigCPtr);
    return ret;
  }

  public vtkXMLDataElement GetNestedElement(int index) {
    void* cPtr = vtkd_im.vtkXMLDataElement_GetNestedElement(cast(void*)swigCPtr, index);
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public void AddNestedElement(vtkXMLDataElement element) {
    vtkd_im.vtkXMLDataElement_AddNestedElement(cast(void*)swigCPtr, vtkXMLDataElement.swigGetCPtr(element));
  }

  public void RemoveNestedElement(vtkXMLDataElement arg0) {
    vtkd_im.vtkXMLDataElement_RemoveNestedElement(cast(void*)swigCPtr, vtkXMLDataElement.swigGetCPtr(arg0));
  }

  public void RemoveAllNestedElements() {
    vtkd_im.vtkXMLDataElement_RemoveAllNestedElements(cast(void*)swigCPtr);
  }

  public vtkXMLDataElement FindNestedElement(string id) {
    void* cPtr = vtkd_im.vtkXMLDataElement_FindNestedElement(cast(void*)swigCPtr, (id ? std.string.toStringz(id) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement FindNestedElementWithName(string name) {
    void* cPtr = vtkd_im.vtkXMLDataElement_FindNestedElementWithName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement FindNestedElementWithNameAndId(string name, string id) {
    void* cPtr = vtkd_im.vtkXMLDataElement_FindNestedElementWithNameAndId(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), (id ? std.string.toStringz(id) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement FindNestedElementWithNameAndAttribute(string name, string att_name, string att_value) {
    void* cPtr = vtkd_im.vtkXMLDataElement_FindNestedElementWithNameAndAttribute(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), (att_name ? std.string.toStringz(att_name) : null), (att_value ? std.string.toStringz(att_value) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement LookupElementWithName(string name) {
    void* cPtr = vtkd_im.vtkXMLDataElement_LookupElementWithName(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public vtkXMLDataElement LookupElement(string id) {
    void* cPtr = vtkd_im.vtkXMLDataElement_LookupElement(cast(void*)swigCPtr, (id ? std.string.toStringz(id) : null));
    vtkXMLDataElement ret = (cPtr is null) ? null : new vtkXMLDataElement(cPtr, false);
    return ret;
  }

  public long GetXMLByteIndex() {
    auto ret = vtkd_im.vtkXMLDataElement_GetXMLByteIndex(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXMLByteIndex(long _arg) {
    vtkd_im.vtkXMLDataElement_SetXMLByteIndex(cast(void*)swigCPtr, _arg);
  }

  public int IsEqualTo(vtkXMLDataElement elem) {
    auto ret = vtkd_im.vtkXMLDataElement_IsEqualTo(cast(void*)swigCPtr, vtkXMLDataElement.swigGetCPtr(elem));
    return ret;
  }

  public void DeepCopy(vtkXMLDataElement elem) {
    vtkd_im.vtkXMLDataElement_DeepCopy(cast(void*)swigCPtr, vtkXMLDataElement.swigGetCPtr(elem));
  }

  public void SetAttributeEncoding(int _arg) {
    vtkd_im.vtkXMLDataElement_SetAttributeEncoding(cast(void*)swigCPtr, _arg);
  }

  public int GetAttributeEncodingMinValue() {
    auto ret = vtkd_im.vtkXMLDataElement_GetAttributeEncodingMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAttributeEncodingMaxValue() {
    auto ret = vtkd_im.vtkXMLDataElement_GetAttributeEncodingMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetAttributeEncoding() {
    auto ret = vtkd_im.vtkXMLDataElement_GetAttributeEncoding(cast(void*)swigCPtr);
    return ret;
  }

  public void PrintXML(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream os, vtkIndent.vtkIndent indent) {
    vtkd_im.vtkXMLDataElement_PrintXML__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(os), vtkIndent.vtkIndent.swigGetCPtr(indent));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void PrintXML(string fname) {
    vtkd_im.vtkXMLDataElement_PrintXML__SWIG_1(cast(void*)swigCPtr, (fname ? std.string.toStringz(fname) : null));
  }

  public int GetCharacterDataWidth() {
    auto ret = vtkd_im.vtkXMLDataElement_GetCharacterDataWidth(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCharacterDataWidth(int _arg) {
    vtkd_im.vtkXMLDataElement_SetCharacterDataWidth(cast(void*)swigCPtr, _arg);
  }
}
