/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkQuaternionLongLongT;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import SWIGTYPE_p_long_long;
static import SWIGTYPE_p_a_3__long_long;
static import vtkLongLongTuple4TN;

class vtkQuaternionLongLongT : vtkLongLongTuple4TN.vtkLongLongTuple4TN {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkQuaternionLongLongT_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkQuaternionLongLongT obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkQuaternionLongLongT(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkQuaternionLongLongT__SWIG_0(), true);
  }

  public this(long scalar) {
    this(vtkd_im.new_vtkQuaternionLongLongT__SWIG_1(scalar), true);
  }

  public this(long* init) {
    this(vtkd_im.new_vtkQuaternionLongLongT__SWIG_2(cast(void*)init), true);
  }

  public this(long w, long x, long y, long z) {
    this(vtkd_im.new_vtkQuaternionLongLongT__SWIG_3(w, x, y, z), true);
  }

  public long SquaredNorm() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_SquaredNorm(cast(void*)swigCPtr);
    return ret;
  }

  public long Norm() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_Norm(cast(void*)swigCPtr);
    return ret;
  }

  public void ToIdentity() {
    vtkd_im.vtkQuaternionLongLongT_ToIdentity(cast(void*)swigCPtr);
  }

  public static vtkQuaternionLongLongT Identity() {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_Identity(), true);
    return ret;
  }

  public long Normalize() {
    auto ret = vtkd_im.vtkQuaternionLongLongT_Normalize(cast(void*)swigCPtr);
    return ret;
  }

  public vtkQuaternionLongLongT Normalized() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_Normalized(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Conjugate() {
    vtkd_im.vtkQuaternionLongLongT_Conjugate(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongLongT Conjugated() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_Conjugated(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Invert() {
    vtkd_im.vtkQuaternionLongLongT_Invert(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongLongT Inverse() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_Inverse(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitLog() {
    vtkd_im.vtkQuaternionLongLongT_ToUnitLog(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongLongT UnitLog() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_UnitLog(cast(void*)swigCPtr), true);
    return ret;
  }

  public void ToUnitExp() {
    vtkd_im.vtkQuaternionLongLongT_ToUnitExp(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongLongT UnitExp() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_UnitExp(cast(void*)swigCPtr), true);
    return ret;
  }

  public void NormalizeWithAngleInDegrees() {
    vtkd_im.vtkQuaternionLongLongT_NormalizeWithAngleInDegrees(cast(void*)swigCPtr);
  }

  public vtkQuaternionLongLongT NormalizedWithAngleInDegrees() const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_NormalizedWithAngleInDegrees(cast(void*)swigCPtr), true);
    return ret;
  }

  public void Set(long w, long x, long y, long z) {
    vtkd_im.vtkQuaternionLongLongT_Set__SWIG_0(cast(void*)swigCPtr, w, x, y, z);
  }

  public void Set(SWIGTYPE_p_long_long.SWIGTYPE_p_long_long quat) {
    vtkd_im.vtkQuaternionLongLongT_Set__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(quat));
  }

  public void Get(SWIGTYPE_p_long_long.SWIGTYPE_p_long_long quat) const {
    vtkd_im.vtkQuaternionLongLongT_Get(cast(void*)swigCPtr, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(quat));
  }

  public void SetW(long w) {
    vtkd_im.vtkQuaternionLongLongT_SetW(cast(void*)swigCPtr, w);
  }

  public long GetW() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_GetW(cast(void*)swigCPtr);
    return ret;
  }

  public void SetX(long x) {
    vtkd_im.vtkQuaternionLongLongT_SetX(cast(void*)swigCPtr, x);
  }

  public long GetX() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_GetX(cast(void*)swigCPtr);
    return ret;
  }

  public void SetY(long y) {
    vtkd_im.vtkQuaternionLongLongT_SetY(cast(void*)swigCPtr, y);
  }

  public long GetY() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_GetY(cast(void*)swigCPtr);
    return ret;
  }

  public void SetZ(long z) {
    vtkd_im.vtkQuaternionLongLongT_SetZ(cast(void*)swigCPtr, z);
  }

  public long GetZ() const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_GetZ(cast(void*)swigCPtr);
    return ret;
  }

  public long GetRotationAngleAndAxis(SWIGTYPE_p_long_long.SWIGTYPE_p_long_long axis) const {
    auto ret = vtkd_im.vtkQuaternionLongLongT_GetRotationAngleAndAxis(cast(void*)swigCPtr, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(axis));
    return ret;
  }

  public void SetRotationAngleAndAxis(long angle, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long axis) {
    vtkd_im.vtkQuaternionLongLongT_SetRotationAngleAndAxis__SWIG_0(cast(void*)swigCPtr, angle, SWIGTYPE_p_long_long.SWIGTYPE_p_long_long.swigGetCPtr(axis));
  }

  public void SetRotationAngleAndAxis(long angle, long x, long y, long z) {
    vtkd_im.vtkQuaternionLongLongT_SetRotationAngleAndAxis__SWIG_1(cast(void*)swigCPtr, angle, x, y, z);
  }

  public void ToMatrix3x3(SWIGTYPE_p_a_3__long_long.SWIGTYPE_p_a_3__long_long A) const {
    vtkd_im.vtkQuaternionLongLongT_ToMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__long_long.SWIGTYPE_p_a_3__long_long.swigGetCPtr(A));
  }

  public void FromMatrix3x3(SWIGTYPE_p_a_3__long_long.SWIGTYPE_p_a_3__long_long A) {
    vtkd_im.vtkQuaternionLongLongT_FromMatrix3x3(cast(void*)swigCPtr, SWIGTYPE_p_a_3__long_long.SWIGTYPE_p_a_3__long_long.swigGetCPtr(A));
  }

  public vtkQuaternionLongLongT Slerp(long t, vtkQuaternionLongLongT q) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_Slerp(cast(void*)swigCPtr, t, vtkQuaternionLongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongLongT InnerPoint(vtkQuaternionLongLongT q1, vtkQuaternionLongLongT q2) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_InnerPoint(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q1), vtkQuaternionLongLongT.swigGetCPtr(q2)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public void Equal(vtkQuaternionLongLongT q) {
    vtkd_im.vtkQuaternionLongLongT_Equal(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public vtkQuaternionLongLongT swigOpAdd(vtkQuaternionLongLongT q) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpAdd(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongLongT swigOpSub(vtkQuaternionLongLongT q) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpSub(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongLongT swigOpMul(vtkQuaternionLongLongT q) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpMul__SWIG_0(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongLongT swigOpMul(long scalar) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpMul__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpMulAssign(long scalar) const {
    vtkd_im.vtkQuaternionLongLongT_swigOpMulAssign(cast(void*)swigCPtr, scalar);
  }

  public vtkQuaternionLongLongT swigOpDiv(vtkQuaternionLongLongT q) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpDiv__SWIG_0(cast(void*)swigCPtr, vtkQuaternionLongLongT.swigGetCPtr(q)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkQuaternionLongLongT swigOpDiv(long scalar) const {
    vtkQuaternionLongLongT ret = new vtkQuaternionLongLongT(vtkd_im.vtkQuaternionLongLongT_swigOpDiv__SWIG_1(cast(void*)swigCPtr, scalar), true);
    return ret;
  }

  public void swigOpDivAssign(long scalar) {
    vtkd_im.vtkQuaternionLongLongT_swigOpDivAssign(cast(void*)swigCPtr, scalar);
  }
}
