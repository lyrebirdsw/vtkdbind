/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkBYUReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyDataAlgorithm;

class vtkBYUReader : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkBYUReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkBYUReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkBYUReader New() {
    void* cPtr = vtkd_im.vtkBYUReader_New();
    vtkBYUReader ret = (cPtr is null) ? null : new vtkBYUReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkBYUReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkBYUReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkBYUReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkBYUReader ret = (cPtr is null) ? null : new vtkBYUReader(cPtr, false);
    return ret;
  }

  public vtkBYUReader NewInstance() const {
    void* cPtr = vtkd_im.vtkBYUReader_NewInstance(cast(void*)swigCPtr);
    vtkBYUReader ret = (cPtr is null) ? null : new vtkBYUReader(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetGeometryFileName(string _arg) {
    vtkd_im.vtkBYUReader_SetGeometryFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetGeometryFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkBYUReader_GetGeometryFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetFileName(string f) {
    vtkd_im.vtkBYUReader_SetFileName(cast(void*)swigCPtr, (f ? std.string.toStringz(f) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkBYUReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetDisplacementFileName(string _arg) {
    vtkd_im.vtkBYUReader_SetDisplacementFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetDisplacementFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkBYUReader_GetDisplacementFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetScalarFileName(string _arg) {
    vtkd_im.vtkBYUReader_SetScalarFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetScalarFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkBYUReader_GetScalarFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTextureFileName(string _arg) {
    vtkd_im.vtkBYUReader_SetTextureFileName(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetTextureFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkBYUReader_GetTextureFileName(cast(void*)swigCPtr));
    return ret;
  }

  public void SetReadDisplacement(int _arg) {
    vtkd_im.vtkBYUReader_SetReadDisplacement(cast(void*)swigCPtr, _arg);
  }

  public int GetReadDisplacement() {
    auto ret = vtkd_im.vtkBYUReader_GetReadDisplacement(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadDisplacementOn() {
    vtkd_im.vtkBYUReader_ReadDisplacementOn(cast(void*)swigCPtr);
  }

  public void ReadDisplacementOff() {
    vtkd_im.vtkBYUReader_ReadDisplacementOff(cast(void*)swigCPtr);
  }

  public void SetReadScalar(int _arg) {
    vtkd_im.vtkBYUReader_SetReadScalar(cast(void*)swigCPtr, _arg);
  }

  public int GetReadScalar() {
    auto ret = vtkd_im.vtkBYUReader_GetReadScalar(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadScalarOn() {
    vtkd_im.vtkBYUReader_ReadScalarOn(cast(void*)swigCPtr);
  }

  public void ReadScalarOff() {
    vtkd_im.vtkBYUReader_ReadScalarOff(cast(void*)swigCPtr);
  }

  public void SetReadTexture(int _arg) {
    vtkd_im.vtkBYUReader_SetReadTexture(cast(void*)swigCPtr, _arg);
  }

  public int GetReadTexture() {
    auto ret = vtkd_im.vtkBYUReader_GetReadTexture(cast(void*)swigCPtr);
    return ret;
  }

  public void ReadTextureOn() {
    vtkd_im.vtkBYUReader_ReadTextureOn(cast(void*)swigCPtr);
  }

  public void ReadTextureOff() {
    vtkd_im.vtkBYUReader_ReadTextureOff(cast(void*)swigCPtr);
  }

  public void SetPartNumber(int _arg) {
    vtkd_im.vtkBYUReader_SetPartNumber(cast(void*)swigCPtr, _arg);
  }

  public int GetPartNumberMinValue() {
    auto ret = vtkd_im.vtkBYUReader_GetPartNumberMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPartNumberMaxValue() {
    auto ret = vtkd_im.vtkBYUReader_GetPartNumberMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetPartNumber() {
    auto ret = vtkd_im.vtkBYUReader_GetPartNumber(cast(void*)swigCPtr);
    return ret;
  }

  public static int CanReadFile(string filename) {
    auto ret = vtkd_im.vtkBYUReader_CanReadFile((filename ? std.string.toStringz(filename) : null));
    return ret;
  }
}
