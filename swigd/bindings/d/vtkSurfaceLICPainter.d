/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSurfaceLICPainter;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderWindow;
static import vtkPainter;

class vtkSurfaceLICPainter : vtkPainter.vtkPainter {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSurfaceLICPainter_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSurfaceLICPainter obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkSurfaceLICPainter(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSurfaceLICPainter New() {
    void* cPtr = vtkd_im.vtkSurfaceLICPainter_New();
    vtkSurfaceLICPainter ret = (cPtr is null) ? null : new vtkSurfaceLICPainter(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSurfaceLICPainter_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSurfaceLICPainter SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSurfaceLICPainter_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSurfaceLICPainter ret = (cPtr is null) ? null : new vtkSurfaceLICPainter(cPtr, false);
    return ret;
  }

  public vtkSurfaceLICPainter NewInstance() const {
    void* cPtr = vtkd_im.vtkSurfaceLICPainter_NewInstance(cast(void*)swigCPtr);
    vtkSurfaceLICPainter ret = (cPtr is null) ? null : new vtkSurfaceLICPainter(cPtr, false);
    return ret;
  }

  alias vtkPainter.vtkPainter.NewInstance NewInstance;

  public void SetEnable(int _arg) {
    vtkd_im.vtkSurfaceLICPainter_SetEnable(cast(void*)swigCPtr, _arg);
  }

  public int GetEnable() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetEnable(cast(void*)swigCPtr);
    return ret;
  }

  public void EnableOn() {
    vtkd_im.vtkSurfaceLICPainter_EnableOn(cast(void*)swigCPtr);
  }

  public void EnableOff() {
    vtkd_im.vtkSurfaceLICPainter_EnableOff(cast(void*)swigCPtr);
  }

  public void SetInputArrayToProcess(int fieldAssociation, string name) {
    vtkd_im.vtkSurfaceLICPainter_SetInputArrayToProcess__SWIG_0(cast(void*)swigCPtr, fieldAssociation, (name ? std.string.toStringz(name) : null));
  }

  public void SetInputArrayToProcess(int fieldAssociation, int fieldAttributeType) {
    vtkd_im.vtkSurfaceLICPainter_SetInputArrayToProcess__SWIG_1(cast(void*)swigCPtr, fieldAssociation, fieldAttributeType);
  }

  public void SetEnhancedLIC(int _arg) {
    vtkd_im.vtkSurfaceLICPainter_SetEnhancedLIC(cast(void*)swigCPtr, _arg);
  }

  public int GetEnhancedLIC() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetEnhancedLIC(cast(void*)swigCPtr);
    return ret;
  }

  public void EnhancedLICOn() {
    vtkd_im.vtkSurfaceLICPainter_EnhancedLICOn(cast(void*)swigCPtr);
  }

  public void EnhancedLICOff() {
    vtkd_im.vtkSurfaceLICPainter_EnhancedLICOff(cast(void*)swigCPtr);
  }

  public void SetNumberOfSteps(int _arg) {
    vtkd_im.vtkSurfaceLICPainter_SetNumberOfSteps(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfSteps() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetNumberOfSteps(cast(void*)swigCPtr);
    return ret;
  }

  public void SetStepSize(double _arg) {
    vtkd_im.vtkSurfaceLICPainter_SetStepSize(cast(void*)swigCPtr, _arg);
  }

  public double GetStepSize() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetStepSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLICIntensity(double _arg) {
    vtkd_im.vtkSurfaceLICPainter_SetLICIntensity(cast(void*)swigCPtr, _arg);
  }

  public double GetLICIntensityMinValue() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetLICIntensityMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLICIntensityMaxValue() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetLICIntensityMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetLICIntensity() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetLICIntensity(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRenderingPreparationSuccess() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetRenderingPreparationSuccess(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLICSuccess() {
    auto ret = vtkd_im.vtkSurfaceLICPainter_GetLICSuccess(cast(void*)swigCPtr);
    return ret;
  }

  public static bool IsSupported(vtkRenderWindow.vtkRenderWindow arg0) {
    bool ret = vtkd_im.vtkSurfaceLICPainter_IsSupported(vtkRenderWindow.vtkRenderWindow.swigGetCPtr(arg0)) ? true : false;
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkSurfaceLICPainter(), true);
  }
}
