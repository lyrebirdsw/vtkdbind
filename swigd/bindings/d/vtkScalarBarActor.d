/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkScalarBarActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkScalarsToColors;
static import vtkTextProperty;
static import vtkActor2D;
static import vtkProperty2D;

class vtkScalarBarActor : vtkActor2D.vtkActor2D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkScalarBarActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkScalarBarActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkScalarBarActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkScalarBarActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkScalarBarActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkScalarBarActor ret = (cPtr is null) ? null : new vtkScalarBarActor(cPtr, false);
    return ret;
  }

  public vtkScalarBarActor NewInstance() const {
    void* cPtr = vtkd_im.vtkScalarBarActor_NewInstance(cast(void*)swigCPtr);
    vtkScalarBarActor ret = (cPtr is null) ? null : new vtkScalarBarActor(cPtr, false);
    return ret;
  }

  alias vtkActor2D.vtkActor2D.NewInstance NewInstance;

  public static vtkScalarBarActor New() {
    void* cPtr = vtkd_im.vtkScalarBarActor_New();
    vtkScalarBarActor ret = (cPtr is null) ? null : new vtkScalarBarActor(cPtr, false);
    return ret;
  }

  public void SetLookupTable(vtkScalarsToColors.vtkScalarsToColors arg0) {
    vtkd_im.vtkScalarBarActor_SetLookupTable(cast(void*)swigCPtr, vtkScalarsToColors.vtkScalarsToColors.swigGetCPtr(arg0));
  }

  public vtkScalarsToColors.vtkScalarsToColors GetLookupTable() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetLookupTable(cast(void*)swigCPtr);
    vtkScalarsToColors.vtkScalarsToColors ret = (cPtr is null) ? null : new vtkScalarsToColors.vtkScalarsToColors(cPtr, false);
    return ret;
  }

  public void SetUseOpacity(int _arg) {
    vtkd_im.vtkScalarBarActor_SetUseOpacity(cast(void*)swigCPtr, _arg);
  }

  public int GetUseOpacity() {
    auto ret = vtkd_im.vtkScalarBarActor_GetUseOpacity(cast(void*)swigCPtr);
    return ret;
  }

  public void UseOpacityOn() {
    vtkd_im.vtkScalarBarActor_UseOpacityOn(cast(void*)swigCPtr);
  }

  public void UseOpacityOff() {
    vtkd_im.vtkScalarBarActor_UseOpacityOff(cast(void*)swigCPtr);
  }

  public void SetMaximumNumberOfColors(int _arg) {
    vtkd_im.vtkScalarBarActor_SetMaximumNumberOfColors(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumNumberOfColorsMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetMaximumNumberOfColorsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaximumNumberOfColorsMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetMaximumNumberOfColorsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetMaximumNumberOfColors() {
    auto ret = vtkd_im.vtkScalarBarActor_GetMaximumNumberOfColors(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfLabels(int _arg) {
    vtkd_im.vtkScalarBarActor_SetNumberOfLabels(cast(void*)swigCPtr, _arg);
  }

  public int GetNumberOfLabelsMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetNumberOfLabelsMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfLabelsMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetNumberOfLabelsMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfLabels() {
    auto ret = vtkd_im.vtkScalarBarActor_GetNumberOfLabels(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOrientation(int _arg) {
    vtkd_im.vtkScalarBarActor_SetOrientation(cast(void*)swigCPtr, _arg);
  }

  public int GetOrientationMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetOrientationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOrientationMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetOrientationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetOrientation() {
    auto ret = vtkd_im.vtkScalarBarActor_GetOrientation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetOrientationToHorizontal() {
    vtkd_im.vtkScalarBarActor_SetOrientationToHorizontal(cast(void*)swigCPtr);
  }

  public void SetOrientationToVertical() {
    vtkd_im.vtkScalarBarActor_SetOrientationToVertical(cast(void*)swigCPtr);
  }

  public void SetTitleTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkScalarBarActor_SetTitleTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetTitleTextProperty() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetTitleTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetLabelTextProperty(vtkTextProperty.vtkTextProperty p) {
    vtkd_im.vtkScalarBarActor_SetLabelTextProperty(cast(void*)swigCPtr, vtkTextProperty.vtkTextProperty.swigGetCPtr(p));
  }

  public vtkTextProperty.vtkTextProperty GetLabelTextProperty() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetLabelTextProperty(cast(void*)swigCPtr);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetLabelFormat(string _arg) {
    vtkd_im.vtkScalarBarActor_SetLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkScalarBarActor_GetLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTitle(string _arg) {
    vtkd_im.vtkScalarBarActor_SetTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkScalarBarActor_GetTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetComponentTitle(string _arg) {
    vtkd_im.vtkScalarBarActor_SetComponentTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetComponentTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkScalarBarActor_GetComponentTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetTextureGridWidth(double _arg) {
    vtkd_im.vtkScalarBarActor_SetTextureGridWidth(cast(void*)swigCPtr, _arg);
  }

  public double GetTextureGridWidth() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTextureGridWidth(cast(void*)swigCPtr);
    return ret;
  }

  public vtkActor2D.vtkActor2D GetTextureActor() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetTextureActor(cast(void*)swigCPtr);
    vtkActor2D.vtkActor2D ret = (cPtr is null) ? null : new vtkActor2D.vtkActor2D(cPtr, false);
    return ret;
  }

  public void SetTextPosition(int _arg) {
    vtkd_im.vtkScalarBarActor_SetTextPosition(cast(void*)swigCPtr, _arg);
  }

  public int GetTextPositionMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTextPositionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTextPositionMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTextPositionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTextPosition() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTextPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTextPositionToPrecedeScalarBar() {
    vtkd_im.vtkScalarBarActor_SetTextPositionToPrecedeScalarBar(cast(void*)swigCPtr);
  }

  public void SetTextPositionToSucceedScalarBar() {
    vtkd_im.vtkScalarBarActor_SetTextPositionToSucceedScalarBar(cast(void*)swigCPtr);
  }

  public void SetMaximumWidthInPixels(int _arg) {
    vtkd_im.vtkScalarBarActor_SetMaximumWidthInPixels(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumWidthInPixels() {
    auto ret = vtkd_im.vtkScalarBarActor_GetMaximumWidthInPixels(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumHeightInPixels(int _arg) {
    vtkd_im.vtkScalarBarActor_SetMaximumHeightInPixels(cast(void*)swigCPtr, _arg);
  }

  public int GetMaximumHeightInPixels() {
    auto ret = vtkd_im.vtkScalarBarActor_GetMaximumHeightInPixels(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAnnotationLeaderPadding(double _arg) {
    vtkd_im.vtkScalarBarActor_SetAnnotationLeaderPadding(cast(void*)swigCPtr, _arg);
  }

  public double GetAnnotationLeaderPadding() {
    auto ret = vtkd_im.vtkScalarBarActor_GetAnnotationLeaderPadding(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDrawAnnotations(int _arg) {
    vtkd_im.vtkScalarBarActor_SetDrawAnnotations(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawAnnotations() {
    auto ret = vtkd_im.vtkScalarBarActor_GetDrawAnnotations(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawAnnotationsOn() {
    vtkd_im.vtkScalarBarActor_DrawAnnotationsOn(cast(void*)swigCPtr);
  }

  public void DrawAnnotationsOff() {
    vtkd_im.vtkScalarBarActor_DrawAnnotationsOff(cast(void*)swigCPtr);
  }

  public void SetDrawNanAnnotation(int _arg) {
    vtkd_im.vtkScalarBarActor_SetDrawNanAnnotation(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawNanAnnotation() {
    auto ret = vtkd_im.vtkScalarBarActor_GetDrawNanAnnotation(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawNanAnnotationOn() {
    vtkd_im.vtkScalarBarActor_DrawNanAnnotationOn(cast(void*)swigCPtr);
  }

  public void DrawNanAnnotationOff() {
    vtkd_im.vtkScalarBarActor_DrawNanAnnotationOff(cast(void*)swigCPtr);
  }

  public void SetFixedAnnotationLeaderLineColor(int _arg) {
    vtkd_im.vtkScalarBarActor_SetFixedAnnotationLeaderLineColor(cast(void*)swigCPtr, _arg);
  }

  public int GetFixedAnnotationLeaderLineColor() {
    auto ret = vtkd_im.vtkScalarBarActor_GetFixedAnnotationLeaderLineColor(cast(void*)swigCPtr);
    return ret;
  }

  public void FixedAnnotationLeaderLineColorOn() {
    vtkd_im.vtkScalarBarActor_FixedAnnotationLeaderLineColorOn(cast(void*)swigCPtr);
  }

  public void FixedAnnotationLeaderLineColorOff() {
    vtkd_im.vtkScalarBarActor_FixedAnnotationLeaderLineColorOff(cast(void*)swigCPtr);
  }

  public void SetNanAnnotation(string _arg) {
    vtkd_im.vtkScalarBarActor_SetNanAnnotation(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetNanAnnotation() {
    string ret = std.conv.to!string(vtkd_im.vtkScalarBarActor_GetNanAnnotation(cast(void*)swigCPtr));
    return ret;
  }

  public void SetAnnotationTextScaling(int _arg) {
    vtkd_im.vtkScalarBarActor_SetAnnotationTextScaling(cast(void*)swigCPtr, _arg);
  }

  public int GetAnnotationTextScaling() {
    auto ret = vtkd_im.vtkScalarBarActor_GetAnnotationTextScaling(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDrawBackground(int _arg) {
    vtkd_im.vtkScalarBarActor_SetDrawBackground(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawBackground() {
    auto ret = vtkd_im.vtkScalarBarActor_GetDrawBackground(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawBackgroundOn() {
    vtkd_im.vtkScalarBarActor_DrawBackgroundOn(cast(void*)swigCPtr);
  }

  public void DrawBackgroundOff() {
    vtkd_im.vtkScalarBarActor_DrawBackgroundOff(cast(void*)swigCPtr);
  }

  public void SetDrawFrame(int _arg) {
    vtkd_im.vtkScalarBarActor_SetDrawFrame(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawFrame() {
    auto ret = vtkd_im.vtkScalarBarActor_GetDrawFrame(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawFrameOn() {
    vtkd_im.vtkScalarBarActor_DrawFrameOn(cast(void*)swigCPtr);
  }

  public void DrawFrameOff() {
    vtkd_im.vtkScalarBarActor_DrawFrameOff(cast(void*)swigCPtr);
  }

  public void SetDrawColorBar(int _arg) {
    vtkd_im.vtkScalarBarActor_SetDrawColorBar(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawColorBar() {
    auto ret = vtkd_im.vtkScalarBarActor_GetDrawColorBar(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawColorBarOn() {
    vtkd_im.vtkScalarBarActor_DrawColorBarOn(cast(void*)swigCPtr);
  }

  public void DrawColorBarOff() {
    vtkd_im.vtkScalarBarActor_DrawColorBarOff(cast(void*)swigCPtr);
  }

  public void SetBackgroundProperty(vtkProperty2D.vtkProperty2D p) {
    vtkd_im.vtkScalarBarActor_SetBackgroundProperty(cast(void*)swigCPtr, vtkProperty2D.vtkProperty2D.swigGetCPtr(p));
  }

  public vtkProperty2D.vtkProperty2D GetBackgroundProperty() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetBackgroundProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public void SetFrameProperty(vtkProperty2D.vtkProperty2D p) {
    vtkd_im.vtkScalarBarActor_SetFrameProperty(cast(void*)swigCPtr, vtkProperty2D.vtkProperty2D.swigGetCPtr(p));
  }

  public vtkProperty2D.vtkProperty2D GetFrameProperty() {
    void* cPtr = vtkd_im.vtkScalarBarActor_GetFrameProperty(cast(void*)swigCPtr);
    vtkProperty2D.vtkProperty2D ret = (cPtr is null) ? null : new vtkProperty2D.vtkProperty2D(cPtr, false);
    return ret;
  }

  public int GetTextPad() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTextPad(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTextPad(int _arg) {
    vtkd_im.vtkScalarBarActor_SetTextPad(cast(void*)swigCPtr, _arg);
  }

  public double GetBarRatio() {
    auto ret = vtkd_im.vtkScalarBarActor_GetBarRatio(cast(void*)swigCPtr);
    return ret;
  }

  public void SetBarRatio(double _arg) {
    vtkd_im.vtkScalarBarActor_SetBarRatio(cast(void*)swigCPtr, _arg);
  }

  public double GetBarRatioMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetBarRatioMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetBarRatioMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetBarRatioMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTitleRatio() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTitleRatio(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTitleRatio(double _arg) {
    vtkd_im.vtkScalarBarActor_SetTitleRatio(cast(void*)swigCPtr, _arg);
  }

  public double GetTitleRatioMinValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTitleRatioMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetTitleRatioMaxValue() {
    auto ret = vtkd_im.vtkScalarBarActor_GetTitleRatioMaxValue(cast(void*)swigCPtr);
    return ret;
  }
}
