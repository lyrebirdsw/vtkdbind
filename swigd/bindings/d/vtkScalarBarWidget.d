/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkScalarBarWidget;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkScalarBarRepresentation;
static import vtkScalarBarActor;
static import vtkBorderWidget;

class vtkScalarBarWidget : vtkBorderWidget.vtkBorderWidget {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkScalarBarWidget_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkScalarBarWidget obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkScalarBarWidget New() {
    void* cPtr = vtkd_im.vtkScalarBarWidget_New();
    vtkScalarBarWidget ret = (cPtr is null) ? null : new vtkScalarBarWidget(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkScalarBarWidget_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkScalarBarWidget SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkScalarBarWidget_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkScalarBarWidget ret = (cPtr is null) ? null : new vtkScalarBarWidget(cPtr, false);
    return ret;
  }

  public vtkScalarBarWidget NewInstance() const {
    void* cPtr = vtkd_im.vtkScalarBarWidget_NewInstance(cast(void*)swigCPtr);
    vtkScalarBarWidget ret = (cPtr is null) ? null : new vtkScalarBarWidget(cPtr, false);
    return ret;
  }

  alias vtkBorderWidget.vtkBorderWidget.NewInstance NewInstance;

  public void SetRepresentation(vtkScalarBarRepresentation.vtkScalarBarRepresentation rep) {
    vtkd_im.vtkScalarBarWidget_SetRepresentation(cast(void*)swigCPtr, vtkScalarBarRepresentation.vtkScalarBarRepresentation.swigGetCPtr(rep));
  }

  alias vtkBorderWidget.vtkBorderWidget.SetRepresentation SetRepresentation;

  public vtkScalarBarRepresentation.vtkScalarBarRepresentation GetScalarBarRepresentation() {
    void* cPtr = vtkd_im.vtkScalarBarWidget_GetScalarBarRepresentation(cast(void*)swigCPtr);
    vtkScalarBarRepresentation.vtkScalarBarRepresentation ret = (cPtr is null) ? null : new vtkScalarBarRepresentation.vtkScalarBarRepresentation(cPtr, false);
    return ret;
  }

  public void SetScalarBarActor(vtkScalarBarActor.vtkScalarBarActor actor) {
    vtkd_im.vtkScalarBarWidget_SetScalarBarActor(cast(void*)swigCPtr, vtkScalarBarActor.vtkScalarBarActor.swigGetCPtr(actor));
  }

  public vtkScalarBarActor.vtkScalarBarActor GetScalarBarActor() {
    void* cPtr = vtkd_im.vtkScalarBarWidget_GetScalarBarActor(cast(void*)swigCPtr);
    vtkScalarBarActor.vtkScalarBarActor ret = (cPtr is null) ? null : new vtkScalarBarActor.vtkScalarBarActor(cPtr, false);
    return ret;
  }

  public void SetRepositionable(int _arg) {
    vtkd_im.vtkScalarBarWidget_SetRepositionable(cast(void*)swigCPtr, _arg);
  }

  public int GetRepositionable() {
    auto ret = vtkd_im.vtkScalarBarWidget_GetRepositionable(cast(void*)swigCPtr);
    return ret;
  }

  public void RepositionableOn() {
    vtkd_im.vtkScalarBarWidget_RepositionableOn(cast(void*)swigCPtr);
  }

  public void RepositionableOff() {
    vtkd_im.vtkScalarBarWidget_RepositionableOff(cast(void*)swigCPtr);
  }
}
