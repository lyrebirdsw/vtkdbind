/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGenericStreamTracer;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_double;
static import vtkDataSet;
static import vtkAlgorithmOutput;
static import vtkInformation;
static import vtkInitialValueProblemSolver;
static import vtkGenericDataSet;
static import vtkGenericInterpolatedVelocityField;
static import vtkPolyDataAlgorithm;

class vtkGenericStreamTracer : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGenericStreamTracer_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGenericStreamTracer obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGenericStreamTracer_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGenericStreamTracer SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGenericStreamTracer_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGenericStreamTracer ret = (cPtr is null) ? null : new vtkGenericStreamTracer(cPtr, false);
    return ret;
  }

  public vtkGenericStreamTracer NewInstance() const {
    void* cPtr = vtkd_im.vtkGenericStreamTracer_NewInstance(cast(void*)swigCPtr);
    vtkGenericStreamTracer ret = (cPtr is null) ? null : new vtkGenericStreamTracer(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public static vtkGenericStreamTracer New() {
    void* cPtr = vtkd_im.vtkGenericStreamTracer_New();
    vtkGenericStreamTracer ret = (cPtr is null) ? null : new vtkGenericStreamTracer(cPtr, false);
    return ret;
  }

  public void SetStartPosition(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkGenericStreamTracer_SetStartPosition__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetStartPosition(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGenericStreamTracer_SetStartPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetStartPosition() {
    auto ret = cast(double*)vtkd_im.vtkGenericStreamTracer_GetStartPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetStartPosition(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkGenericStreamTracer_GetStartPosition__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetStartPosition(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkGenericStreamTracer_GetStartPosition__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetSourceData(vtkDataSet.vtkDataSet source) {
    vtkd_im.vtkGenericStreamTracer_SetSourceData(cast(void*)swigCPtr, vtkDataSet.vtkDataSet.swigGetCPtr(source));
  }

  public vtkDataSet.vtkDataSet GetSource() {
    void* cPtr = vtkd_im.vtkGenericStreamTracer_GetSource(cast(void*)swigCPtr);
    vtkDataSet.vtkDataSet ret = (cPtr is null) ? null : new vtkDataSet.vtkDataSet(cPtr, false);
    return ret;
  }

  public void SetSourceConnection(vtkAlgorithmOutput.vtkAlgorithmOutput algOutput) {
    vtkd_im.vtkGenericStreamTracer_SetSourceConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(algOutput));
  }

  public int FillInputPortInformation(int port, vtkInformation.vtkInformation info) {
    auto ret = vtkd_im.vtkGenericStreamTracer_FillInputPortInformation(cast(void*)swigCPtr, port, vtkInformation.vtkInformation.swigGetCPtr(info));
    return ret;
  }

  public void SetIntegrator(vtkInitialValueProblemSolver.vtkInitialValueProblemSolver arg0) {
    vtkd_im.vtkGenericStreamTracer_SetIntegrator(cast(void*)swigCPtr, vtkInitialValueProblemSolver.vtkInitialValueProblemSolver.swigGetCPtr(arg0));
  }

  public vtkInitialValueProblemSolver.vtkInitialValueProblemSolver GetIntegrator() {
    void* cPtr = vtkd_im.vtkGenericStreamTracer_GetIntegrator(cast(void*)swigCPtr);
    vtkInitialValueProblemSolver.vtkInitialValueProblemSolver ret = (cPtr is null) ? null : new vtkInitialValueProblemSolver.vtkInitialValueProblemSolver(cPtr, false);
    return ret;
  }

  public void SetIntegratorType(int type) {
    vtkd_im.vtkGenericStreamTracer_SetIntegratorType(cast(void*)swigCPtr, type);
  }

  public int GetIntegratorType() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetIntegratorType(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegratorTypeToRungeKutta2() {
    vtkd_im.vtkGenericStreamTracer_SetIntegratorTypeToRungeKutta2(cast(void*)swigCPtr);
  }

  public void SetIntegratorTypeToRungeKutta4() {
    vtkd_im.vtkGenericStreamTracer_SetIntegratorTypeToRungeKutta4(cast(void*)swigCPtr);
  }

  public void SetIntegratorTypeToRungeKutta45() {
    vtkd_im.vtkGenericStreamTracer_SetIntegratorTypeToRungeKutta45(cast(void*)swigCPtr);
  }

  public void SetMaximumPropagation(int unit, double max) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagation__SWIG_0(cast(void*)swigCPtr, unit, max);
  }

  public void SetMaximumPropagation(double max) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagation__SWIG_1(cast(void*)swigCPtr, max);
  }

  public void SetMaximumPropagationUnit(int unit) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagationUnit(cast(void*)swigCPtr, unit);
  }

  public int GetMaximumPropagationUnit() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumPropagationUnit(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumPropagation() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumPropagation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumPropagationUnitToTimeUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagationUnitToTimeUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumPropagationUnitToLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagationUnitToLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumPropagationUnitToCellLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumPropagationUnitToCellLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMinimumIntegrationStep(int unit, double step) {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStep__SWIG_0(cast(void*)swigCPtr, unit, step);
  }

  public void SetMinimumIntegrationStepUnit(int unit) {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStepUnit(cast(void*)swigCPtr, unit);
  }

  public void SetMinimumIntegrationStep(double step) {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStep__SWIG_1(cast(void*)swigCPtr, step);
  }

  public int GetMinimumIntegrationStepUnit() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMinimumIntegrationStepUnit(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMinimumIntegrationStep() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMinimumIntegrationStep(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMinimumIntegrationStepUnitToTimeUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStepUnitToTimeUnit(cast(void*)swigCPtr);
  }

  public void SetMinimumIntegrationStepUnitToLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStepUnitToLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMinimumIntegrationStepUnitToCellLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMinimumIntegrationStepUnitToCellLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumIntegrationStep(int unit, double step) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStep__SWIG_0(cast(void*)swigCPtr, unit, step);
  }

  public void SetMaximumIntegrationStepUnit(int unit) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStepUnit(cast(void*)swigCPtr, unit);
  }

  public void SetMaximumIntegrationStep(double step) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStep__SWIG_1(cast(void*)swigCPtr, step);
  }

  public int GetMaximumIntegrationStepUnit() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumIntegrationStepUnit(cast(void*)swigCPtr);
    return ret;
  }

  public double GetMaximumIntegrationStep() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumIntegrationStep(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumIntegrationStepUnitToTimeUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStepUnitToTimeUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumIntegrationStepUnitToLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStepUnitToLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumIntegrationStepUnitToCellLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetMaximumIntegrationStepUnitToCellLengthUnit(cast(void*)swigCPtr);
  }

  public void SetInitialIntegrationStep(int unit, double step) {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStep__SWIG_0(cast(void*)swigCPtr, unit, step);
  }

  public void SetInitialIntegrationStepUnit(int unit) {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStepUnit(cast(void*)swigCPtr, unit);
  }

  public void SetInitialIntegrationStep(double step) {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStep__SWIG_1(cast(void*)swigCPtr, step);
  }

  public int GetInitialIntegrationStepUnit() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetInitialIntegrationStepUnit(cast(void*)swigCPtr);
    return ret;
  }

  public double GetInitialIntegrationStep() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetInitialIntegrationStep(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInitialIntegrationStepUnitToTimeUnit() {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStepUnitToTimeUnit(cast(void*)swigCPtr);
  }

  public void SetInitialIntegrationStepUnitToLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStepUnitToLengthUnit(cast(void*)swigCPtr);
  }

  public void SetInitialIntegrationStepUnitToCellLengthUnit() {
    vtkd_im.vtkGenericStreamTracer_SetInitialIntegrationStepUnitToCellLengthUnit(cast(void*)swigCPtr);
  }

  public void SetMaximumError(double _arg) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumError(cast(void*)swigCPtr, _arg);
  }

  public double GetMaximumError() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumError(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumNumberOfSteps(long _arg) {
    vtkd_im.vtkGenericStreamTracer_SetMaximumNumberOfSteps(cast(void*)swigCPtr, _arg);
  }

  public long GetMaximumNumberOfSteps() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetMaximumNumberOfSteps(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTerminalSpeed(double _arg) {
    vtkd_im.vtkGenericStreamTracer_SetTerminalSpeed(cast(void*)swigCPtr, _arg);
  }

  public double GetTerminalSpeed() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetTerminalSpeed(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegrationStepUnit(int unit) {
    vtkd_im.vtkGenericStreamTracer_SetIntegrationStepUnit(cast(void*)swigCPtr, unit);
  }

  public void SetIntegrationDirection(int _arg) {
    vtkd_im.vtkGenericStreamTracer_SetIntegrationDirection(cast(void*)swigCPtr, _arg);
  }

  public int GetIntegrationDirectionMinValue() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetIntegrationDirectionMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetIntegrationDirectionMaxValue() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetIntegrationDirectionMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetIntegrationDirection() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetIntegrationDirection(cast(void*)swigCPtr);
    return ret;
  }

  public void SetIntegrationDirectionToForward() {
    vtkd_im.vtkGenericStreamTracer_SetIntegrationDirectionToForward(cast(void*)swigCPtr);
  }

  public void SetIntegrationDirectionToBackward() {
    vtkd_im.vtkGenericStreamTracer_SetIntegrationDirectionToBackward(cast(void*)swigCPtr);
  }

  public void SetIntegrationDirectionToBoth() {
    vtkd_im.vtkGenericStreamTracer_SetIntegrationDirectionToBoth(cast(void*)swigCPtr);
  }

  public void SetComputeVorticity(int _arg) {
    vtkd_im.vtkGenericStreamTracer_SetComputeVorticity(cast(void*)swigCPtr, _arg);
  }

  public int GetComputeVorticity() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetComputeVorticity(cast(void*)swigCPtr);
    return ret;
  }

  public void ComputeVorticityOn() {
    vtkd_im.vtkGenericStreamTracer_ComputeVorticityOn(cast(void*)swigCPtr);
  }

  public void ComputeVorticityOff() {
    vtkd_im.vtkGenericStreamTracer_ComputeVorticityOff(cast(void*)swigCPtr);
  }

  public void SetRotationScale(double _arg) {
    vtkd_im.vtkGenericStreamTracer_SetRotationScale(cast(void*)swigCPtr, _arg);
  }

  public double GetRotationScale() {
    auto ret = vtkd_im.vtkGenericStreamTracer_GetRotationScale(cast(void*)swigCPtr);
    return ret;
  }

  public string GetInputVectorsSelection() {
    string ret = std.conv.to!string(vtkd_im.vtkGenericStreamTracer_GetInputVectorsSelection(cast(void*)swigCPtr));
    return ret;
  }

  public void SelectInputVectors(string fieldName) {
    vtkd_im.vtkGenericStreamTracer_SelectInputVectors(cast(void*)swigCPtr, (fieldName ? std.string.toStringz(fieldName) : null));
  }

  public void AddInputData(vtkGenericDataSet.vtkGenericDataSet arg0) {
    vtkd_im.vtkGenericStreamTracer_AddInputData(cast(void*)swigCPtr, vtkGenericDataSet.vtkGenericDataSet.swigGetCPtr(arg0));
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.AddInputData AddInputData;

  public void SetInterpolatorPrototype(vtkGenericInterpolatedVelocityField.vtkGenericInterpolatedVelocityField ivf) {
    vtkd_im.vtkGenericStreamTracer_SetInterpolatorPrototype(cast(void*)swigCPtr, vtkGenericInterpolatedVelocityField.vtkGenericInterpolatedVelocityField.swigGetCPtr(ivf));
  }
}
