/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGridTransform;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkAlgorithmOutput;
static import vtkImageData;
static import vtkWarpTransform;

class vtkGridTransform : vtkWarpTransform.vtkWarpTransform {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGridTransform_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGridTransform obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGridTransform New() {
    void* cPtr = vtkd_im.vtkGridTransform_New();
    vtkGridTransform ret = (cPtr is null) ? null : new vtkGridTransform(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGridTransform_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGridTransform SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGridTransform_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGridTransform ret = (cPtr is null) ? null : new vtkGridTransform(cPtr, false);
    return ret;
  }

  public vtkGridTransform NewInstance() const {
    void* cPtr = vtkd_im.vtkGridTransform_NewInstance(cast(void*)swigCPtr);
    vtkGridTransform ret = (cPtr is null) ? null : new vtkGridTransform(cPtr, false);
    return ret;
  }

  alias vtkWarpTransform.vtkWarpTransform.NewInstance NewInstance;

  public void SetDisplacementGridConnection(vtkAlgorithmOutput.vtkAlgorithmOutput arg0) {
    vtkd_im.vtkGridTransform_SetDisplacementGridConnection(cast(void*)swigCPtr, vtkAlgorithmOutput.vtkAlgorithmOutput.swigGetCPtr(arg0));
  }

  public void SetDisplacementGridData(vtkImageData.vtkImageData arg0) {
    vtkd_im.vtkGridTransform_SetDisplacementGridData(cast(void*)swigCPtr, vtkImageData.vtkImageData.swigGetCPtr(arg0));
  }

  public vtkImageData.vtkImageData GetDisplacementGrid() {
    void* cPtr = vtkd_im.vtkGridTransform_GetDisplacementGrid(cast(void*)swigCPtr);
    vtkImageData.vtkImageData ret = (cPtr is null) ? null : new vtkImageData.vtkImageData(cPtr, false);
    return ret;
  }

  public void SetDisplacementScale(double _arg) {
    vtkd_im.vtkGridTransform_SetDisplacementScale(cast(void*)swigCPtr, _arg);
  }

  public double GetDisplacementScale() {
    auto ret = vtkd_im.vtkGridTransform_GetDisplacementScale(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDisplacementShift(double _arg) {
    vtkd_im.vtkGridTransform_SetDisplacementShift(cast(void*)swigCPtr, _arg);
  }

  public double GetDisplacementShift() {
    auto ret = vtkd_im.vtkGridTransform_GetDisplacementShift(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInterpolationMode(int mode) {
    vtkd_im.vtkGridTransform_SetInterpolationMode(cast(void*)swigCPtr, mode);
  }

  public int GetInterpolationMode() {
    auto ret = vtkd_im.vtkGridTransform_GetInterpolationMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetInterpolationModeToNearestNeighbor() {
    vtkd_im.vtkGridTransform_SetInterpolationModeToNearestNeighbor(cast(void*)swigCPtr);
  }

  public void SetInterpolationModeToLinear() {
    vtkd_im.vtkGridTransform_SetInterpolationModeToLinear(cast(void*)swigCPtr);
  }

  public void SetInterpolationModeToCubic() {
    vtkd_im.vtkGridTransform_SetInterpolationModeToCubic(cast(void*)swigCPtr);
  }

  public string GetInterpolationModeAsString() {
    string ret = std.conv.to!string(vtkd_im.vtkGridTransform_GetInterpolationModeAsString(cast(void*)swigCPtr));
    return ret;
  }
}
