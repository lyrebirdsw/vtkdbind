/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkLargeInteger;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;

class vtkLargeInteger {
  private void* swigCPtr;
  protected bool swigCMemOwn;

  public this(void* cObject, bool ownCObject) {
    swigCPtr = cObject;
    swigCMemOwn = ownCObject;
  }

  public static void* swigGetCPtr(vtkLargeInteger obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkLargeInteger(cast(void*)swigCPtr);
        }
        swigCPtr = null;
      }
    }
  }

  public this() {
    this(vtkd_im.new_vtkLargeInteger__SWIG_0(), true);
  }

  public this(core.stdc.config.c_long n) {
    this(vtkd_im.new_vtkLargeInteger__SWIG_1(n), true);
  }

  public this(core.stdc.config.c_ulong n) {
    this(vtkd_im.new_vtkLargeInteger__SWIG_2(n), true);
  }

  public this(vtkLargeInteger n) {
    this(vtkd_im.new_vtkLargeInteger__SWIG_5(vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public this(long n) {
    this(vtkd_im.new_vtkLargeInteger__SWIG_6(n), true);
  }

  public this(ulong n) {
    this(vtkd_im.new_vtkLargeInteger__SWIG_7(n), true);
  }

  public char CastToChar() const {
    auto ret = vtkd_im.vtkLargeInteger_CastToChar(cast(void*)swigCPtr);
    return ret;
  }

  public short CastToShort() const {
    auto ret = vtkd_im.vtkLargeInteger_CastToShort(cast(void*)swigCPtr);
    return ret;
  }

  public int CastToInt() const {
    auto ret = vtkd_im.vtkLargeInteger_CastToInt(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_long CastToLong() const {
    auto ret = vtkd_im.vtkLargeInteger_CastToLong(cast(void*)swigCPtr);
    return ret;
  }

  public core.stdc.config.c_ulong CastToUnsignedLong() const {
    auto ret = vtkd_im.vtkLargeInteger_CastToUnsignedLong(cast(void*)swigCPtr);
    return ret;
  }

  public int IsEven() const {
    auto ret = vtkd_im.vtkLargeInteger_IsEven(cast(void*)swigCPtr);
    return ret;
  }

  public int IsOdd() const {
    auto ret = vtkd_im.vtkLargeInteger_IsOdd(cast(void*)swigCPtr);
    return ret;
  }

  public int GetLength() const {
    auto ret = vtkd_im.vtkLargeInteger_GetLength(cast(void*)swigCPtr);
    return ret;
  }

  public int GetBit(uint p) const {
    auto ret = vtkd_im.vtkLargeInteger_GetBit(cast(void*)swigCPtr, p);
    return ret;
  }

  public int IsZero() const {
    auto ret = vtkd_im.vtkLargeInteger_IsZero(cast(void*)swigCPtr);
    return ret;
  }

  public int GetSign() const {
    auto ret = vtkd_im.vtkLargeInteger_GetSign(cast(void*)swigCPtr);
    return ret;
  }

  public void Truncate(uint n) {
    vtkd_im.vtkLargeInteger_Truncate(cast(void*)swigCPtr, n);
  }

  public void Complement() {
    vtkd_im.vtkLargeInteger_Complement(cast(void*)swigCPtr);
  }

  public int swigOpEquals(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_swigOpEquals(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int NotEqual(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_NotEqual(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int swigOpLt(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_swigOpLt(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int swigOpLtEquals(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_swigOpLtEquals(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int swigOpGt(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_swigOpGt(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int swigOpGtEquals(vtkLargeInteger n) const {
    auto ret = vtkd_im.vtkLargeInteger_swigOpGtEquals(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger Equal(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_Equal(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpAddAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpAddAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpSubAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpSubAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpShlAssign(int n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpShlAssign(cast(void*)swigCPtr, n), false);
    return ret;
  }

  public vtkLargeInteger swigOpShrAssign(int n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpShrAssign(cast(void*)swigCPtr, n), false);
    return ret;
  }

  public vtkLargeInteger swigOpInc() {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpInc(cast(void*)swigCPtr), false);
    return ret;
  }

  public vtkLargeInteger swigOpDec() {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpDec(cast(void*)swigCPtr), false);
    return ret;
  }

  public vtkLargeInteger swigOpMulAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpMulAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpDivAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpDivAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpModAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpModAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpAndAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpAndAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpOrAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpOrAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpXorAssign(vtkLargeInteger n) {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpXorAssign(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), false);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpAdd(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpAdd(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpSub(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpSub(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpMul(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpMul(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpDiv(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpDiv(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpMod(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpMod(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpAnd(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpAnd(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpOr(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpOr(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpXor(vtkLargeInteger n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpXor(cast(void*)swigCPtr, vtkLargeInteger.swigGetCPtr(n)), true);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public vtkLargeInteger swigOpShl(int n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpShl(cast(void*)swigCPtr, n), true);
    return ret;
  }

  public vtkLargeInteger swigOpShr(int n) const {
    vtkLargeInteger ret = new vtkLargeInteger(vtkd_im.vtkLargeInteger_swigOpShr(cast(void*)swigCPtr, n), true);
    return ret;
  }
}
