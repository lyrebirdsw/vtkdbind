/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkConstrainedPointHandleRepresentation;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkPolyData;
static import vtkPlane;
static import vtkPlaneCollection;
static import vtkPlanes;
static import SWIGTYPE_p_double;
static import vtkProperty;
static import vtkHandleRepresentation;

class vtkConstrainedPointHandleRepresentation : vtkHandleRepresentation.vtkHandleRepresentation {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkConstrainedPointHandleRepresentation_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkConstrainedPointHandleRepresentation obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkConstrainedPointHandleRepresentation New() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_New();
    vtkConstrainedPointHandleRepresentation ret = (cPtr is null) ? null : new vtkConstrainedPointHandleRepresentation(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkConstrainedPointHandleRepresentation_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkConstrainedPointHandleRepresentation SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkConstrainedPointHandleRepresentation ret = (cPtr is null) ? null : new vtkConstrainedPointHandleRepresentation(cPtr, false);
    return ret;
  }

  public vtkConstrainedPointHandleRepresentation NewInstance() const {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_NewInstance(cast(void*)swigCPtr);
    vtkConstrainedPointHandleRepresentation ret = (cPtr is null) ? null : new vtkConstrainedPointHandleRepresentation(cPtr, false);
    return ret;
  }

  alias vtkHandleRepresentation.vtkHandleRepresentation.NewInstance NewInstance;

  public void SetCursorShape(vtkPolyData.vtkPolyData cursorShape) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(cursorShape));
  }

  public vtkPolyData.vtkPolyData GetCursorShape() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetActiveCursorShape(vtkPolyData.vtkPolyData activeShape) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetActiveCursorShape(cast(void*)swigCPtr, vtkPolyData.vtkPolyData.swigGetCPtr(activeShape));
  }

  public vtkPolyData.vtkPolyData GetActiveCursorShape() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetActiveCursorShape(cast(void*)swigCPtr);
    vtkPolyData.vtkPolyData ret = (cPtr is null) ? null : new vtkPolyData.vtkPolyData(cPtr, false);
    return ret;
  }

  public void SetProjectionNormal(int _arg) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionNormal(cast(void*)swigCPtr, _arg);
  }

  public int GetProjectionNormalMinValue() {
    auto ret = vtkd_im.vtkConstrainedPointHandleRepresentation_GetProjectionNormalMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionNormalMaxValue() {
    auto ret = vtkd_im.vtkConstrainedPointHandleRepresentation_GetProjectionNormalMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetProjectionNormal() {
    auto ret = vtkd_im.vtkConstrainedPointHandleRepresentation_GetProjectionNormal(cast(void*)swigCPtr);
    return ret;
  }

  public void SetProjectionNormalToXAxis() {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionNormalToXAxis(cast(void*)swigCPtr);
  }

  public void SetProjectionNormalToYAxis() {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionNormalToYAxis(cast(void*)swigCPtr);
  }

  public void SetProjectionNormalToZAxis() {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionNormalToZAxis(cast(void*)swigCPtr);
  }

  public void SetProjectionNormalToOblique() {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionNormalToOblique(cast(void*)swigCPtr);
  }

  public void SetObliquePlane(vtkPlane.vtkPlane arg0) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetObliquePlane(cast(void*)swigCPtr, vtkPlane.vtkPlane.swigGetCPtr(arg0));
  }

  public vtkPlane.vtkPlane GetObliquePlane() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetObliquePlane(cast(void*)swigCPtr);
    vtkPlane.vtkPlane ret = (cPtr is null) ? null : new vtkPlane.vtkPlane(cPtr, false);
    return ret;
  }

  public void SetProjectionPosition(double position) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetProjectionPosition(cast(void*)swigCPtr, position);
  }

  public double GetProjectionPosition() {
    auto ret = vtkd_im.vtkConstrainedPointHandleRepresentation_GetProjectionPosition(cast(void*)swigCPtr);
    return ret;
  }

  public void AddBoundingPlane(vtkPlane.vtkPlane plane) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_AddBoundingPlane(cast(void*)swigCPtr, vtkPlane.vtkPlane.swigGetCPtr(plane));
  }

  public void RemoveBoundingPlane(vtkPlane.vtkPlane plane) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_RemoveBoundingPlane(cast(void*)swigCPtr, vtkPlane.vtkPlane.swigGetCPtr(plane));
  }

  public void RemoveAllBoundingPlanes() {
    vtkd_im.vtkConstrainedPointHandleRepresentation_RemoveAllBoundingPlanes(cast(void*)swigCPtr);
  }

  public void SetBoundingPlanes(vtkPlaneCollection.vtkPlaneCollection arg0) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetBoundingPlanes__SWIG_0(cast(void*)swigCPtr, vtkPlaneCollection.vtkPlaneCollection.swigGetCPtr(arg0));
  }

  public vtkPlaneCollection.vtkPlaneCollection GetBoundingPlanes() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetBoundingPlanes(cast(void*)swigCPtr);
    vtkPlaneCollection.vtkPlaneCollection ret = (cPtr is null) ? null : new vtkPlaneCollection.vtkPlaneCollection(cPtr, false);
    return ret;
  }

  public void SetBoundingPlanes(vtkPlanes.vtkPlanes planes) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetBoundingPlanes__SWIG_1(cast(void*)swigCPtr, vtkPlanes.vtkPlanes.swigGetCPtr(planes));
  }

  public void SetPosition(double x, double y, double z) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetPosition__SWIG_0(cast(void*)swigCPtr, x, y, z);
  }

  public void SetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_SetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public double* GetPosition() {
    auto ret = cast(double*)vtkd_im.vtkConstrainedPointHandleRepresentation_GetPosition__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetPosition(SWIGTYPE_p_double.SWIGTYPE_p_double xyz) {
    vtkd_im.vtkConstrainedPointHandleRepresentation_GetPosition__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(xyz));
  }

  public vtkProperty.vtkProperty GetProperty() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetSelectedProperty() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetSelectedProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public vtkProperty.vtkProperty GetActiveProperty() {
    void* cPtr = vtkd_im.vtkConstrainedPointHandleRepresentation_GetActiveProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }
}
