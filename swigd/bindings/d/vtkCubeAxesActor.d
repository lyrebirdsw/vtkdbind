/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkCubeAxesActor;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkViewport;
static import SWIGTYPE_p_double;
static import vtkStringArray;
static import vtkCamera;
static import vtkWindow;
static import vtkTextProperty;
static import vtkProperty;
static import vtkActor;

class vtkCubeAxesActor : vtkActor.vtkActor {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkCubeAxesActor_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkCubeAxesActor obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkCubeAxesActor_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkCubeAxesActor SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkCubeAxesActor_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkCubeAxesActor ret = (cPtr is null) ? null : new vtkCubeAxesActor(cPtr, false);
    return ret;
  }

  public vtkCubeAxesActor NewInstance() const {
    void* cPtr = vtkd_im.vtkCubeAxesActor_NewInstance(cast(void*)swigCPtr);
    vtkCubeAxesActor ret = (cPtr is null) ? null : new vtkCubeAxesActor(cPtr, false);
    return ret;
  }

  alias vtkActor.vtkActor.NewInstance NewInstance;

  public static vtkCubeAxesActor New() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_New();
    vtkCubeAxesActor ret = (cPtr is null) ? null : new vtkCubeAxesActor(cPtr, false);
    return ret;
  }

  public int RenderTranslucentGeometry(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkCubeAxesActor_RenderTranslucentGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public int RenderOverlay(vtkViewport.vtkViewport arg0) {
    auto ret = vtkd_im.vtkCubeAxesActor_RenderOverlay(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(arg0));
    return ret;
  }

  public void SetRebuildAxes(bool _arg) {
    vtkd_im.vtkCubeAxesActor_SetRebuildAxes(cast(void*)swigCPtr, _arg);
  }

  public bool GetRebuildAxes() {
    bool ret = vtkd_im.vtkCubeAxesActor_GetRebuildAxes(cast(void*)swigCPtr) ? true : false;
    return ret;
  }

  public void SetBounds(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkCubeAxesActor_SetBounds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(double* _arg1, double* _arg2, double* _arg3, double* _arg4, double* _arg5, double* _arg6) {
    vtkd_im.vtkCubeAxesActor_GetBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetBounds__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  alias vtkActor.vtkActor.GetBounds GetBounds;

  public void GetRenderedBounds(SWIGTYPE_p_double.SWIGTYPE_p_double rBounds) {
    vtkd_im.vtkCubeAxesActor_GetRenderedBounds__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(rBounds));
  }

  public double* GetRenderedBounds() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetRenderedBounds__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXAxisRange(double _arg1, double _arg2) {
    vtkd_im.vtkCubeAxesActor_SetXAxisRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetXAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetXAxisRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetYAxisRange(double _arg1, double _arg2) {
    vtkd_im.vtkCubeAxesActor_SetYAxisRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetYAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetYAxisRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetZAxisRange(double _arg1, double _arg2) {
    vtkd_im.vtkCubeAxesActor_SetZAxisRange__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2);
  }

  public void SetZAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetZAxisRange__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetXAxisRange() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetXAxisRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetXAxisRange(double* _arg1, double* _arg2) {
    vtkd_im.vtkCubeAxesActor_GetXAxisRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetXAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetXAxisRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetYAxisRange() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetYAxisRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetYAxisRange(double* _arg1, double* _arg2) {
    vtkd_im.vtkCubeAxesActor_GetYAxisRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetYAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetYAxisRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public vtkStringArray.vtkStringArray GetAxisLabels(int axis) {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetAxisLabels(cast(void*)swigCPtr, axis);
    vtkStringArray.vtkStringArray ret = (cPtr is null) ? null : new vtkStringArray.vtkStringArray(cPtr, false);
    return ret;
  }

  public void SetAxisLabels(int axis, vtkStringArray.vtkStringArray value) {
    vtkd_im.vtkCubeAxesActor_SetAxisLabels(cast(void*)swigCPtr, axis, vtkStringArray.vtkStringArray.swigGetCPtr(value));
  }

  public double* GetZAxisRange() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetZAxisRange__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetZAxisRange(double* _arg1, double* _arg2) {
    vtkd_im.vtkCubeAxesActor_GetZAxisRange__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetZAxisRange(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetZAxisRange__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetScreenSize(double screenSize) {
    vtkd_im.vtkCubeAxesActor_SetScreenSize(cast(void*)swigCPtr, screenSize);
  }

  public double GetScreenSize() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetScreenSize(cast(void*)swigCPtr);
    return ret;
  }

  public void SetLabelOffset(double offset) {
    vtkd_im.vtkCubeAxesActor_SetLabelOffset(cast(void*)swigCPtr, offset);
  }

  public double GetLabelOffset() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetLabelOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTitleOffset(double offset) {
    vtkd_im.vtkCubeAxesActor_SetTitleOffset(cast(void*)swigCPtr, offset);
  }

  public double GetTitleOffset() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetTitleOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCamera(vtkCamera.vtkCamera arg0) {
    vtkd_im.vtkCubeAxesActor_SetCamera(cast(void*)swigCPtr, vtkCamera.vtkCamera.swigGetCPtr(arg0));
  }

  public vtkCamera.vtkCamera GetCamera() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetCamera(cast(void*)swigCPtr);
    vtkCamera.vtkCamera ret = (cPtr is null) ? null : new vtkCamera.vtkCamera(cPtr, false);
    return ret;
  }

  public void SetFlyMode(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetFlyMode(cast(void*)swigCPtr, _arg);
  }

  public int GetFlyModeMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetFlyModeMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFlyModeMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetFlyModeMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetFlyMode() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetFlyMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetFlyModeToOuterEdges() {
    vtkd_im.vtkCubeAxesActor_SetFlyModeToOuterEdges(cast(void*)swigCPtr);
  }

  public void SetFlyModeToClosestTriad() {
    vtkd_im.vtkCubeAxesActor_SetFlyModeToClosestTriad(cast(void*)swigCPtr);
  }

  public void SetFlyModeToFurthestTriad() {
    vtkd_im.vtkCubeAxesActor_SetFlyModeToFurthestTriad(cast(void*)swigCPtr);
  }

  public void SetFlyModeToStaticTriad() {
    vtkd_im.vtkCubeAxesActor_SetFlyModeToStaticTriad(cast(void*)swigCPtr);
  }

  public void SetFlyModeToStaticEdges() {
    vtkd_im.vtkCubeAxesActor_SetFlyModeToStaticEdges(cast(void*)swigCPtr);
  }

  public void SetXTitle(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetXTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetXTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetXUnits(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetXUnits(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXUnits() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetXUnits(cast(void*)swigCPtr));
    return ret;
  }

  public void SetYTitle(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetYTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetYTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetYTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetYUnits(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetYUnits(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetYUnits() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetYUnits(cast(void*)swigCPtr));
    return ret;
  }

  public void SetZTitle(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetZTitle(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetZTitle() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetZTitle(cast(void*)swigCPtr));
    return ret;
  }

  public void SetZUnits(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetZUnits(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetZUnits() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetZUnits(cast(void*)swigCPtr));
    return ret;
  }

  public void SetXLabelFormat(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetXLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetXLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetXLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetYLabelFormat(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetYLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetYLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetYLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetZLabelFormat(string _arg) {
    vtkd_im.vtkCubeAxesActor_SetZLabelFormat(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetZLabelFormat() {
    string ret = std.conv.to!string(vtkd_im.vtkCubeAxesActor_GetZLabelFormat(cast(void*)swigCPtr));
    return ret;
  }

  public void SetInertia(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetInertia(cast(void*)swigCPtr, _arg);
  }

  public int GetInertiaMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetInertiaMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInertiaMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetInertiaMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetInertia() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetInertia(cast(void*)swigCPtr);
    return ret;
  }

  public void SetCornerOffset(double _arg) {
    vtkd_im.vtkCubeAxesActor_SetCornerOffset(cast(void*)swigCPtr, _arg);
  }

  public double GetCornerOffset() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetCornerOffset(cast(void*)swigCPtr);
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkCubeAxesActor_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  alias vtkActor.vtkActor.ReleaseGraphicsResources ReleaseGraphicsResources;

  public void SetEnableDistanceLOD(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetEnableDistanceLOD(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableDistanceLOD() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetEnableDistanceLOD(cast(void*)swigCPtr);
    return ret;
  }

  public void SetDistanceLODThreshold(double _arg) {
    vtkd_im.vtkCubeAxesActor_SetDistanceLODThreshold(cast(void*)swigCPtr, _arg);
  }

  public double GetDistanceLODThresholdMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDistanceLODThresholdMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistanceLODThresholdMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDistanceLODThresholdMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetDistanceLODThreshold() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDistanceLODThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public void SetEnableViewAngleLOD(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetEnableViewAngleLOD(cast(void*)swigCPtr, _arg);
  }

  public int GetEnableViewAngleLOD() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetEnableViewAngleLOD(cast(void*)swigCPtr);
    return ret;
  }

  public void SetViewAngleLODThreshold(double _arg) {
    vtkd_im.vtkCubeAxesActor_SetViewAngleLODThreshold(cast(void*)swigCPtr, _arg);
  }

  public double GetViewAngleLODThresholdMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetViewAngleLODThresholdMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetViewAngleLODThresholdMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetViewAngleLODThresholdMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public double GetViewAngleLODThreshold() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetViewAngleLODThreshold(cast(void*)swigCPtr);
    return ret;
  }

  public void SetXAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetXAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetXAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetXAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void XAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_XAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void XAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_XAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetYAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetYAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetYAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetYAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void YAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_YAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void YAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_YAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetZAxisVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetZAxisVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetZAxisVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetZAxisVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ZAxisVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_ZAxisVisibilityOn(cast(void*)swigCPtr);
  }

  public void ZAxisVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_ZAxisVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetXAxisLabelVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetXAxisLabelVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetXAxisLabelVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetXAxisLabelVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void XAxisLabelVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_XAxisLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void XAxisLabelVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_XAxisLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetYAxisLabelVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetYAxisLabelVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetYAxisLabelVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetYAxisLabelVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void YAxisLabelVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_YAxisLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void YAxisLabelVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_YAxisLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetZAxisLabelVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetZAxisLabelVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetZAxisLabelVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetZAxisLabelVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ZAxisLabelVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_ZAxisLabelVisibilityOn(cast(void*)swigCPtr);
  }

  public void ZAxisLabelVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_ZAxisLabelVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetXAxisTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetXAxisTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetXAxisTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetXAxisTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void XAxisTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_XAxisTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void XAxisTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_XAxisTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetYAxisTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetYAxisTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetYAxisTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetYAxisTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void YAxisTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_YAxisTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void YAxisTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_YAxisTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetZAxisTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetZAxisTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetZAxisTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetZAxisTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ZAxisTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_ZAxisTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void ZAxisTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_ZAxisTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetXAxisMinorTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetXAxisMinorTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetXAxisMinorTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetXAxisMinorTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void XAxisMinorTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_XAxisMinorTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void XAxisMinorTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_XAxisMinorTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetYAxisMinorTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetYAxisMinorTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetYAxisMinorTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetYAxisMinorTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void YAxisMinorTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_YAxisMinorTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void YAxisMinorTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_YAxisMinorTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetZAxisMinorTickVisibility(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetZAxisMinorTickVisibility(cast(void*)swigCPtr, _arg);
  }

  public int GetZAxisMinorTickVisibility() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetZAxisMinorTickVisibility(cast(void*)swigCPtr);
    return ret;
  }

  public void ZAxisMinorTickVisibilityOn() {
    vtkd_im.vtkCubeAxesActor_ZAxisMinorTickVisibilityOn(cast(void*)swigCPtr);
  }

  public void ZAxisMinorTickVisibilityOff() {
    vtkd_im.vtkCubeAxesActor_ZAxisMinorTickVisibilityOff(cast(void*)swigCPtr);
  }

  public void SetDrawXGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawXGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawXGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawXGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawXGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawXGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawXGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawXGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawYGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawYGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawYGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawYGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawYGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawYGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawYGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawYGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawZGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawZGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawZGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawZGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawZGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawZGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawZGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawZGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawXInnerGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawXInnerGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawXInnerGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawXInnerGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawXInnerGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawXInnerGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawXInnerGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawXInnerGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawYInnerGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawYInnerGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawYInnerGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawYInnerGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawYInnerGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawYInnerGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawYInnerGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawYInnerGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawZInnerGridlines(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawZInnerGridlines(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawZInnerGridlines() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawZInnerGridlines(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawZInnerGridlinesOn() {
    vtkd_im.vtkCubeAxesActor_DrawZInnerGridlinesOn(cast(void*)swigCPtr);
  }

  public void DrawZInnerGridlinesOff() {
    vtkd_im.vtkCubeAxesActor_DrawZInnerGridlinesOff(cast(void*)swigCPtr);
  }

  public void SetDrawXGridpolys(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawXGridpolys(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawXGridpolys() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawXGridpolys(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawXGridpolysOn() {
    vtkd_im.vtkCubeAxesActor_DrawXGridpolysOn(cast(void*)swigCPtr);
  }

  public void DrawXGridpolysOff() {
    vtkd_im.vtkCubeAxesActor_DrawXGridpolysOff(cast(void*)swigCPtr);
  }

  public void SetDrawYGridpolys(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawYGridpolys(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawYGridpolys() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawYGridpolys(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawYGridpolysOn() {
    vtkd_im.vtkCubeAxesActor_DrawYGridpolysOn(cast(void*)swigCPtr);
  }

  public void DrawYGridpolysOff() {
    vtkd_im.vtkCubeAxesActor_DrawYGridpolysOff(cast(void*)swigCPtr);
  }

  public void SetDrawZGridpolys(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetDrawZGridpolys(cast(void*)swigCPtr, _arg);
  }

  public int GetDrawZGridpolys() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetDrawZGridpolys(cast(void*)swigCPtr);
    return ret;
  }

  public void DrawZGridpolysOn() {
    vtkd_im.vtkCubeAxesActor_DrawZGridpolysOn(cast(void*)swigCPtr);
  }

  public void DrawZGridpolysOff() {
    vtkd_im.vtkCubeAxesActor_DrawZGridpolysOff(cast(void*)swigCPtr);
  }

  public vtkTextProperty.vtkTextProperty GetTitleTextProperty(int arg0) {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetTitleTextProperty(cast(void*)swigCPtr, arg0);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public vtkTextProperty.vtkTextProperty GetLabelTextProperty(int arg0) {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetLabelTextProperty(cast(void*)swigCPtr, arg0);
    vtkTextProperty.vtkTextProperty ret = (cPtr is null) ? null : new vtkTextProperty.vtkTextProperty(cPtr, false);
    return ret;
  }

  public void SetXAxesLinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetXAxesLinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetXAxesLinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetXAxesLinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetYAxesLinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetYAxesLinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetYAxesLinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetYAxesLinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetZAxesLinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetZAxesLinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetZAxesLinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetZAxesLinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetXAxesGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetXAxesGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetXAxesGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetXAxesGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetYAxesGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetYAxesGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetYAxesGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetYAxesGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetZAxesGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetZAxesGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetZAxesGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetZAxesGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetXAxesInnerGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetXAxesInnerGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetXAxesInnerGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetXAxesInnerGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetYAxesInnerGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetYAxesInnerGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetYAxesInnerGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetYAxesInnerGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetZAxesInnerGridlinesProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetZAxesInnerGridlinesProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetZAxesInnerGridlinesProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetZAxesInnerGridlinesProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetXAxesGridpolysProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetXAxesGridpolysProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetXAxesGridpolysProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetXAxesGridpolysProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetYAxesGridpolysProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetYAxesGridpolysProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetYAxesGridpolysProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetYAxesGridpolysProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetZAxesGridpolysProperty(vtkProperty.vtkProperty arg0) {
    vtkd_im.vtkCubeAxesActor_SetZAxesGridpolysProperty(cast(void*)swigCPtr, vtkProperty.vtkProperty.swigGetCPtr(arg0));
  }

  public vtkProperty.vtkProperty GetZAxesGridpolysProperty() {
    void* cPtr = vtkd_im.vtkCubeAxesActor_GetZAxesGridpolysProperty(cast(void*)swigCPtr);
    vtkProperty.vtkProperty ret = (cPtr is null) ? null : new vtkProperty.vtkProperty(cPtr, false);
    return ret;
  }

  public void SetTickLocation(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetTickLocation(cast(void*)swigCPtr, _arg);
  }

  public int GetTickLocationMinValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetTickLocationMinValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTickLocationMaxValue() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetTickLocationMaxValue(cast(void*)swigCPtr);
    return ret;
  }

  public int GetTickLocation() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetTickLocation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetTickLocationToInside() {
    vtkd_im.vtkCubeAxesActor_SetTickLocationToInside(cast(void*)swigCPtr);
  }

  public void SetTickLocationToOutside() {
    vtkd_im.vtkCubeAxesActor_SetTickLocationToOutside(cast(void*)swigCPtr);
  }

  public void SetTickLocationToBoth() {
    vtkd_im.vtkCubeAxesActor_SetTickLocationToBoth(cast(void*)swigCPtr);
  }

  public void SetLabelScaling(bool arg0, int arg1, int arg2, int arg3) {
    vtkd_im.vtkCubeAxesActor_SetLabelScaling(cast(void*)swigCPtr, arg0, arg1, arg2, arg3);
  }

  public void SetUse2DMode(int val) {
    vtkd_im.vtkCubeAxesActor_SetUse2DMode(cast(void*)swigCPtr, val);
  }

  public int GetUse2DMode() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetUse2DMode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetSaveTitlePosition(int val) {
    vtkd_im.vtkCubeAxesActor_SetSaveTitlePosition(cast(void*)swigCPtr, val);
  }

  public void SetOrientedBounds(double _arg1, double _arg2, double _arg3, double _arg4, double _arg5, double _arg6) {
    vtkd_im.vtkCubeAxesActor_SetOrientedBounds__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6);
  }

  public void SetOrientedBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetOrientedBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetOrientedBounds() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetOrientedBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetOrientedBounds(double* _arg1, double* _arg2, double* _arg3, double* _arg4, double* _arg5, double* _arg6) {
    vtkd_im.vtkCubeAxesActor_GetOrientedBounds__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3, cast(void*)_arg4, cast(void*)_arg5, cast(void*)_arg6);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetOrientedBounds(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetOrientedBounds__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetUseOrientedBounds(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetUseOrientedBounds(cast(void*)swigCPtr, _arg);
  }

  public int GetUseOrientedBounds() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetUseOrientedBounds(cast(void*)swigCPtr);
    return ret;
  }

  public void SetAxisBaseForX(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForX__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForX__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForX() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetAxisBaseForX__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForX(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForX__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForX(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForX__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisBaseForY(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForY__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForY(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForY__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForY() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetAxisBaseForY__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForY(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForY__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForY(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForY__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisBaseForZ(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForZ__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisBaseForZ(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetAxisBaseForZ__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisBaseForZ() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetAxisBaseForZ__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisBaseForZ(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForZ__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisBaseForZ(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetAxisBaseForZ__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetAxisOrigin(double _arg1, double _arg2, double _arg3) {
    vtkd_im.vtkCubeAxesActor_SetAxisOrigin__SWIG_0(cast(void*)swigCPtr, _arg1, _arg2, _arg3);
  }

  public void SetAxisOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_SetAxisOrigin__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public double* GetAxisOrigin() {
    auto ret = cast(double*)vtkd_im.vtkCubeAxesActor_GetAxisOrigin__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetAxisOrigin(double* _arg1, double* _arg2, double* _arg3) {
    vtkd_im.vtkCubeAxesActor_GetAxisOrigin__SWIG_1(cast(void*)swigCPtr, cast(void*)_arg1, cast(void*)_arg2, cast(void*)_arg3);
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public void GetAxisOrigin(SWIGTYPE_p_double.SWIGTYPE_p_double _arg) {
    vtkd_im.vtkCubeAxesActor_GetAxisOrigin__SWIG_2(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(_arg));
  }

  public void SetUseAxisOrigin(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetUseAxisOrigin(cast(void*)swigCPtr, _arg);
  }

  public int GetUseAxisOrigin() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetUseAxisOrigin(cast(void*)swigCPtr);
    return ret;
  }

  public void SetGridLineLocation(int _arg) {
    vtkd_im.vtkCubeAxesActor_SetGridLineLocation(cast(void*)swigCPtr, _arg);
  }

  public int GetGridLineLocation() {
    auto ret = vtkd_im.vtkCubeAxesActor_GetGridLineLocation(cast(void*)swigCPtr);
    return ret;
  }
}
