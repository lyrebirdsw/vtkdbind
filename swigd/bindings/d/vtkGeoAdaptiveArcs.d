/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkGeoAdaptiveArcs;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderer;
static import vtkPolyDataAlgorithm;

class vtkGeoAdaptiveArcs : vtkPolyDataAlgorithm.vtkPolyDataAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkGeoAdaptiveArcs_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkGeoAdaptiveArcs obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkGeoAdaptiveArcs New() {
    void* cPtr = vtkd_im.vtkGeoAdaptiveArcs_New();
    vtkGeoAdaptiveArcs ret = (cPtr is null) ? null : new vtkGeoAdaptiveArcs(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkGeoAdaptiveArcs_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkGeoAdaptiveArcs SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkGeoAdaptiveArcs_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkGeoAdaptiveArcs ret = (cPtr is null) ? null : new vtkGeoAdaptiveArcs(cPtr, false);
    return ret;
  }

  public vtkGeoAdaptiveArcs NewInstance() const {
    void* cPtr = vtkd_im.vtkGeoAdaptiveArcs_NewInstance(cast(void*)swigCPtr);
    vtkGeoAdaptiveArcs ret = (cPtr is null) ? null : new vtkGeoAdaptiveArcs(cPtr, false);
    return ret;
  }

  alias vtkPolyDataAlgorithm.vtkPolyDataAlgorithm.NewInstance NewInstance;

  public void SetGlobeRadius(double _arg) {
    vtkd_im.vtkGeoAdaptiveArcs_SetGlobeRadius(cast(void*)swigCPtr, _arg);
  }

  public double GetGlobeRadius() {
    auto ret = vtkd_im.vtkGeoAdaptiveArcs_GetGlobeRadius(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMaximumPixelSeparation(double _arg) {
    vtkd_im.vtkGeoAdaptiveArcs_SetMaximumPixelSeparation(cast(void*)swigCPtr, _arg);
  }

  public double GetMaximumPixelSeparation() {
    auto ret = vtkd_im.vtkGeoAdaptiveArcs_GetMaximumPixelSeparation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetMinimumPixelSeparation(double _arg) {
    vtkd_im.vtkGeoAdaptiveArcs_SetMinimumPixelSeparation(cast(void*)swigCPtr, _arg);
  }

  public double GetMinimumPixelSeparation() {
    auto ret = vtkd_im.vtkGeoAdaptiveArcs_GetMinimumPixelSeparation(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRenderer(vtkRenderer.vtkRenderer ren) {
    vtkd_im.vtkGeoAdaptiveArcs_SetRenderer(cast(void*)swigCPtr, vtkRenderer.vtkRenderer.swigGetCPtr(ren));
  }

  public vtkRenderer.vtkRenderer GetRenderer() {
    void* cPtr = vtkd_im.vtkGeoAdaptiveArcs_GetRenderer(cast(void*)swigCPtr);
    vtkRenderer.vtkRenderer ret = (cPtr is null) ? null : new vtkRenderer.vtkRenderer(cPtr, false);
    return ret;
  }
}
