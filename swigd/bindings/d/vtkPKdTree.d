/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkPKdTree;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import SWIGTYPE_p_ostream;
static import vtkIndent;
static import vtkMultiProcessController;
static import vtkIntArray;
static import vtkIdList;
static import vtkDataSet;
static import SWIGTYPE_p_double;
static import SWIGTYPE_p_float;
static import vtkKdTree;

class vtkPKdTree : vtkKdTree.vtkKdTree {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkPKdTree_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkPKdTree obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkPKdTree_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkPKdTree SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkPKdTree_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkPKdTree ret = (cPtr is null) ? null : new vtkPKdTree(cPtr, false);
    return ret;
  }

  public vtkPKdTree NewInstance() const {
    void* cPtr = vtkd_im.vtkPKdTree_NewInstance(cast(void*)swigCPtr);
    vtkPKdTree ret = (cPtr is null) ? null : new vtkPKdTree(cPtr, false);
    return ret;
  }

  alias vtkKdTree.vtkKdTree.NewInstance NewInstance;

  public void PrintTables(SWIGTYPE_p_ostream.SWIGTYPE_p_ostream os, vtkIndent.vtkIndent indent) {
    vtkd_im.vtkPKdTree_PrintTables(cast(void*)swigCPtr, SWIGTYPE_p_ostream.SWIGTYPE_p_ostream.swigGetCPtr(os), vtkIndent.vtkIndent.swigGetCPtr(indent));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public static vtkPKdTree New() {
    void* cPtr = vtkd_im.vtkPKdTree_New();
    vtkPKdTree ret = (cPtr is null) ? null : new vtkPKdTree(cPtr, false);
    return ret;
  }

  public long GetTotalNumberOfCells() {
    auto ret = vtkd_im.vtkPKdTree_GetTotalNumberOfCells(cast(void*)swigCPtr);
    return ret;
  }

  public int CreateProcessCellCountData() {
    auto ret = vtkd_im.vtkPKdTree_CreateProcessCellCountData(cast(void*)swigCPtr);
    return ret;
  }

  public int CreateGlobalDataArrayBounds() {
    auto ret = vtkd_im.vtkPKdTree_CreateGlobalDataArrayBounds(cast(void*)swigCPtr);
    return ret;
  }

  public void SetController(vtkMultiProcessController.vtkMultiProcessController c) {
    vtkd_im.vtkPKdTree_SetController(cast(void*)swigCPtr, vtkMultiProcessController.vtkMultiProcessController.swigGetCPtr(c));
  }

  public vtkMultiProcessController.vtkMultiProcessController GetController() {
    void* cPtr = vtkd_im.vtkPKdTree_GetController(cast(void*)swigCPtr);
    vtkMultiProcessController.vtkMultiProcessController ret = (cPtr is null) ? null : new vtkMultiProcessController.vtkMultiProcessController(cPtr, false);
    return ret;
  }

  public int GetRegionAssignment() {
    auto ret = vtkd_im.vtkPKdTree_GetRegionAssignment(cast(void*)swigCPtr);
    return ret;
  }

  public static int NoRegionAssignment() @property {
    auto ret = vtkd_im.vtkPKdTree_NoRegionAssignment_get();
    return ret;
  }

  public static int ContiguousAssignment() @property {
    auto ret = vtkd_im.vtkPKdTree_ContiguousAssignment_get();
    return ret;
  }

  public static int UserDefinedAssignment() @property {
    auto ret = vtkd_im.vtkPKdTree_UserDefinedAssignment_get();
    return ret;
  }

  public static int RoundRobinAssignment() @property {
    auto ret = vtkd_im.vtkPKdTree_RoundRobinAssignment_get();
    return ret;
  }

  public int AssignRegions(int* map, int numRegions) {
    auto ret = vtkd_im.vtkPKdTree_AssignRegions(cast(void*)swigCPtr, cast(void*)map, numRegions);
    return ret;
  }

  public int AssignRegionsRoundRobin() {
    auto ret = vtkd_im.vtkPKdTree_AssignRegionsRoundRobin(cast(void*)swigCPtr);
    return ret;
  }

  public int AssignRegionsContiguous() {
    auto ret = vtkd_im.vtkPKdTree_AssignRegionsContiguous(cast(void*)swigCPtr);
    return ret;
  }

  public int* GetRegionAssignmentMap() {
    auto ret = cast(int*)vtkd_im.vtkPKdTree_GetRegionAssignmentMap(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRegionAssignmentMapLength() {
    auto ret = vtkd_im.vtkPKdTree_GetRegionAssignmentMapLength(cast(void*)swigCPtr);
    return ret;
  }

  public int GetRegionAssignmentList(int procId, vtkIntArray.vtkIntArray list) {
    auto ret = vtkd_im.vtkPKdTree_GetRegionAssignmentList(cast(void*)swigCPtr, procId, vtkIntArray.vtkIntArray.swigGetCPtr(list));
    return ret;
  }

  public void GetAllProcessesBorderingOnPoint(float x, float y, float z, vtkIntArray.vtkIntArray list) {
    vtkd_im.vtkPKdTree_GetAllProcessesBorderingOnPoint(cast(void*)swigCPtr, x, y, z, vtkIntArray.vtkIntArray.swigGetCPtr(list));
  }

  public int GetProcessAssignedToRegion(int regionId) {
    auto ret = vtkd_im.vtkPKdTree_GetProcessAssignedToRegion(cast(void*)swigCPtr, regionId);
    return ret;
  }

  public int HasData(int processId, int regionId) {
    auto ret = vtkd_im.vtkPKdTree_HasData(cast(void*)swigCPtr, processId, regionId);
    return ret;
  }

  public int GetProcessCellCountForRegion(int processId, int regionId) {
    auto ret = vtkd_im.vtkPKdTree_GetProcessCellCountForRegion(cast(void*)swigCPtr, processId, regionId);
    return ret;
  }

  public int GetTotalProcessesInRegion(int regionId) {
    auto ret = vtkd_im.vtkPKdTree_GetTotalProcessesInRegion(cast(void*)swigCPtr, regionId);
    return ret;
  }

  public int GetProcessListForRegion(int regionId, vtkIntArray.vtkIntArray processes) {
    auto ret = vtkd_im.vtkPKdTree_GetProcessListForRegion(cast(void*)swigCPtr, regionId, vtkIntArray.vtkIntArray.swigGetCPtr(processes));
    return ret;
  }

  public int GetProcessesCellCountForRegion(int regionId, int* count, int len) {
    auto ret = vtkd_im.vtkPKdTree_GetProcessesCellCountForRegion(cast(void*)swigCPtr, regionId, cast(void*)count, len);
    return ret;
  }

  public int GetTotalRegionsForProcess(int processId) {
    auto ret = vtkd_im.vtkPKdTree_GetTotalRegionsForProcess(cast(void*)swigCPtr, processId);
    return ret;
  }

  public int GetRegionListForProcess(int processId, vtkIntArray.vtkIntArray regions) {
    auto ret = vtkd_im.vtkPKdTree_GetRegionListForProcess(cast(void*)swigCPtr, processId, vtkIntArray.vtkIntArray.swigGetCPtr(regions));
    return ret;
  }

  public int GetRegionsCellCountForProcess(int ProcessId, int* count, int len) {
    auto ret = vtkd_im.vtkPKdTree_GetRegionsCellCountForProcess(cast(void*)swigCPtr, ProcessId, cast(void*)count, len);
    return ret;
  }

  public long GetCellListsForProcessRegions(int ProcessId, int set, vtkIdList.vtkIdList inRegionCells, vtkIdList.vtkIdList onBoundaryCells) {
    auto ret = vtkd_im.vtkPKdTree_GetCellListsForProcessRegions__SWIG_0(cast(void*)swigCPtr, ProcessId, set, vtkIdList.vtkIdList.swigGetCPtr(inRegionCells), vtkIdList.vtkIdList.swigGetCPtr(onBoundaryCells));
    return ret;
  }

  public long GetCellListsForProcessRegions(int ProcessId, vtkDataSet.vtkDataSet set, vtkIdList.vtkIdList inRegionCells, vtkIdList.vtkIdList onBoundaryCells) {
    auto ret = vtkd_im.vtkPKdTree_GetCellListsForProcessRegions__SWIG_1(cast(void*)swigCPtr, ProcessId, vtkDataSet.vtkDataSet.swigGetCPtr(set), vtkIdList.vtkIdList.swigGetCPtr(inRegionCells), vtkIdList.vtkIdList.swigGetCPtr(onBoundaryCells));
    return ret;
  }

  public long GetCellListsForProcessRegions(int ProcessId, vtkIdList.vtkIdList inRegionCells, vtkIdList.vtkIdList onBoundaryCells) {
    auto ret = vtkd_im.vtkPKdTree_GetCellListsForProcessRegions__SWIG_2(cast(void*)swigCPtr, ProcessId, vtkIdList.vtkIdList.swigGetCPtr(inRegionCells), vtkIdList.vtkIdList.swigGetCPtr(onBoundaryCells));
    return ret;
  }

  public int ViewOrderAllProcessesInDirection(SWIGTYPE_p_double.SWIGTYPE_p_double directionOfProjection, vtkIntArray.vtkIntArray orderedList) {
    auto ret = vtkd_im.vtkPKdTree_ViewOrderAllProcessesInDirection(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(directionOfProjection), vtkIntArray.vtkIntArray.swigGetCPtr(orderedList));
    return ret;
  }

  public int ViewOrderAllProcessesFromPosition(SWIGTYPE_p_double.SWIGTYPE_p_double cameraPosition, vtkIntArray.vtkIntArray orderedList) {
    auto ret = vtkd_im.vtkPKdTree_ViewOrderAllProcessesFromPosition(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(cameraPosition), vtkIntArray.vtkIntArray.swigGetCPtr(orderedList));
    return ret;
  }

  public int GetCellArrayGlobalRange(string name, SWIGTYPE_p_float.SWIGTYPE_p_float range) {
    auto ret = vtkd_im.vtkPKdTree_GetCellArrayGlobalRange__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(range));
    return ret;
  }

  public int GetPointArrayGlobalRange(string name, SWIGTYPE_p_float.SWIGTYPE_p_float range) {
    auto ret = vtkd_im.vtkPKdTree_GetPointArrayGlobalRange__SWIG_0(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(range));
    return ret;
  }

  public int GetCellArrayGlobalRange(string name, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkPKdTree_GetCellArrayGlobalRange__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public int GetPointArrayGlobalRange(string name, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkPKdTree_GetPointArrayGlobalRange__SWIG_1(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public int GetCellArrayGlobalRange(int arrayIndex, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkPKdTree_GetCellArrayGlobalRange__SWIG_2(cast(void*)swigCPtr, arrayIndex, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public int GetPointArrayGlobalRange(int arrayIndex, SWIGTYPE_p_double.SWIGTYPE_p_double range) {
    auto ret = vtkd_im.vtkPKdTree_GetPointArrayGlobalRange__SWIG_2(cast(void*)swigCPtr, arrayIndex, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(range));
    return ret;
  }

  public int GetCellArrayGlobalRange(int arrayIndex, SWIGTYPE_p_float.SWIGTYPE_p_float range) {
    auto ret = vtkd_im.vtkPKdTree_GetCellArrayGlobalRange__SWIG_3(cast(void*)swigCPtr, arrayIndex, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(range));
    return ret;
  }

  public int GetPointArrayGlobalRange(int arrayIndex, SWIGTYPE_p_float.SWIGTYPE_p_float range) {
    auto ret = vtkd_im.vtkPKdTree_GetPointArrayGlobalRange__SWIG_3(cast(void*)swigCPtr, arrayIndex, SWIGTYPE_p_float.SWIGTYPE_p_float.swigGetCPtr(range));
    return ret;
  }
}
