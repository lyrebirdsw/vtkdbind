/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkImageStack;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkImageSlice;
static import vtkImageSliceCollection;
static import SWIGTYPE_p_double;
static import vtkPropCollection;
static import vtkWindow;
static import vtkAssemblyPaths;
static import vtkAssemblyPath;

class vtkImageStack : vtkImageSlice.vtkImageSlice {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkImageStack_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkImageStack obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkImageStack_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkImageStack SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkImageStack_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkImageStack ret = (cPtr is null) ? null : new vtkImageStack(cPtr, false);
    return ret;
  }

  public vtkImageStack NewInstance() const {
    void* cPtr = vtkd_im.vtkImageStack_NewInstance(cast(void*)swigCPtr);
    vtkImageStack ret = (cPtr is null) ? null : new vtkImageStack(cPtr, false);
    return ret;
  }

  alias vtkImageSlice.vtkImageSlice.NewInstance NewInstance;

  public static vtkImageStack New() {
    void* cPtr = vtkd_im.vtkImageStack_New();
    vtkImageStack ret = (cPtr is null) ? null : new vtkImageStack(cPtr, false);
    return ret;
  }

  public void AddImage(vtkImageSlice.vtkImageSlice prop) {
    vtkd_im.vtkImageStack_AddImage(cast(void*)swigCPtr, vtkImageSlice.vtkImageSlice.swigGetCPtr(prop));
  }

  public void RemoveImage(vtkImageSlice.vtkImageSlice prop) {
    vtkd_im.vtkImageStack_RemoveImage(cast(void*)swigCPtr, vtkImageSlice.vtkImageSlice.swigGetCPtr(prop));
  }

  public int HasImage(vtkImageSlice.vtkImageSlice prop) {
    auto ret = vtkd_im.vtkImageStack_HasImage(cast(void*)swigCPtr, vtkImageSlice.vtkImageSlice.swigGetCPtr(prop));
    return ret;
  }

  public vtkImageSliceCollection.vtkImageSliceCollection GetImages() {
    void* cPtr = vtkd_im.vtkImageStack_GetImages__SWIG_0(cast(void*)swigCPtr);
    vtkImageSliceCollection.vtkImageSliceCollection ret = (cPtr is null) ? null : new vtkImageSliceCollection.vtkImageSliceCollection(cPtr, false);
    return ret;
  }

  public void SetActiveLayer(int _arg) {
    vtkd_im.vtkImageStack_SetActiveLayer(cast(void*)swigCPtr, _arg);
  }

  public int GetActiveLayer() {
    auto ret = vtkd_im.vtkImageStack_GetActiveLayer(cast(void*)swigCPtr);
    return ret;
  }

  public vtkImageSlice.vtkImageSlice GetActiveImage() {
    void* cPtr = vtkd_im.vtkImageStack_GetActiveImage(cast(void*)swigCPtr);
    vtkImageSlice.vtkImageSlice ret = (cPtr is null) ? null : new vtkImageSlice.vtkImageSlice(cPtr, false);
    return ret;
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkImageStack_GetBounds__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkImageStack_GetBounds__SWIG_1(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  alias vtkImageSlice.vtkImageSlice.GetBounds GetBounds;

  public void GetImages(vtkPropCollection.vtkPropCollection arg0) {
    vtkd_im.vtkImageStack_GetImages__SWIG_1(cast(void*)swigCPtr, vtkPropCollection.vtkPropCollection.swigGetCPtr(arg0));
  }

  alias vtkImageSlice.vtkImageSlice.GetImages GetImages;

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow win) {
    vtkd_im.vtkImageStack_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(win));
  }

  alias vtkImageSlice.vtkImageSlice.ReleaseGraphicsResources ReleaseGraphicsResources;

  public void BuildPaths(vtkAssemblyPaths.vtkAssemblyPaths paths, vtkAssemblyPath.vtkAssemblyPath path) {
    vtkd_im.vtkImageStack_BuildPaths(cast(void*)swigCPtr, vtkAssemblyPaths.vtkAssemblyPaths.swigGetCPtr(paths), vtkAssemblyPath.vtkAssemblyPath.swigGetCPtr(path));
  }
}
