/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkAssembly;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkProp3D;
static import vtkProp3DCollection;
static import vtkViewport;
static import vtkWindow;
static import SWIGTYPE_p_double;

class vtkAssembly : vtkProp3D.vtkProp3D {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkAssembly_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkAssembly obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkAssembly New() {
    void* cPtr = vtkd_im.vtkAssembly_New();
    vtkAssembly ret = (cPtr is null) ? null : new vtkAssembly(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkAssembly_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkAssembly SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkAssembly_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkAssembly ret = (cPtr is null) ? null : new vtkAssembly(cPtr, false);
    return ret;
  }

  public vtkAssembly NewInstance() const {
    void* cPtr = vtkd_im.vtkAssembly_NewInstance(cast(void*)swigCPtr);
    vtkAssembly ret = (cPtr is null) ? null : new vtkAssembly(cPtr, false);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.NewInstance NewInstance;

  public void AddPart(vtkProp3D.vtkProp3D arg0) {
    vtkd_im.vtkAssembly_AddPart(cast(void*)swigCPtr, vtkProp3D.vtkProp3D.swigGetCPtr(arg0));
  }

  public void RemovePart(vtkProp3D.vtkProp3D arg0) {
    vtkd_im.vtkAssembly_RemovePart(cast(void*)swigCPtr, vtkProp3D.vtkProp3D.swigGetCPtr(arg0));
  }

  public vtkProp3DCollection.vtkProp3DCollection GetParts() {
    void* cPtr = vtkd_im.vtkAssembly_GetParts(cast(void*)swigCPtr);
    vtkProp3DCollection.vtkProp3DCollection ret = (cPtr is null) ? null : new vtkProp3DCollection.vtkProp3DCollection(cPtr, false);
    return ret;
  }

  public int RenderOpaqueGeometry(vtkViewport.vtkViewport ren) {
    auto ret = vtkd_im.vtkAssembly_RenderOpaqueGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(ren));
    return ret;
  }

  public int RenderTranslucentPolygonalGeometry(vtkViewport.vtkViewport ren) {
    auto ret = vtkd_im.vtkAssembly_RenderTranslucentPolygonalGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(ren));
    return ret;
  }

  public int RenderVolumetricGeometry(vtkViewport.vtkViewport ren) {
    auto ret = vtkd_im.vtkAssembly_RenderVolumetricGeometry(cast(void*)swigCPtr, vtkViewport.vtkViewport.swigGetCPtr(ren));
    return ret;
  }

  public int HasTranslucentPolygonalGeometry() {
    auto ret = vtkd_im.vtkAssembly_HasTranslucentPolygonalGeometry(cast(void*)swigCPtr);
    return ret;
  }

  public void ReleaseGraphicsResources(vtkWindow.vtkWindow arg0) {
    vtkd_im.vtkAssembly_ReleaseGraphicsResources(cast(void*)swigCPtr, vtkWindow.vtkWindow.swigGetCPtr(arg0));
  }

  public void GetBounds(SWIGTYPE_p_double.SWIGTYPE_p_double bounds) {
    vtkd_im.vtkAssembly_GetBounds__SWIG_0(cast(void*)swigCPtr, SWIGTYPE_p_double.SWIGTYPE_p_double.swigGetCPtr(bounds));
  }

  public override double* GetBounds() {
    auto ret = cast(double*)vtkd_im.vtkAssembly_GetBounds__SWIG_1(cast(void*)swigCPtr);
    return ret;
  }

  alias vtkProp3D.vtkProp3D.GetBounds GetBounds;
}
