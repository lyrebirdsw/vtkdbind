/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkEvent;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkRenderWindowInteractor;
static import vtkObject;

class vtkEvent : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkEvent_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkEvent obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkEvent New() {
    void* cPtr = vtkd_im.vtkEvent_New();
    vtkEvent ret = (cPtr is null) ? null : new vtkEvent(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkEvent_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkEvent SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkEvent_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkEvent ret = (cPtr is null) ? null : new vtkEvent(cPtr, false);
    return ret;
  }

  public vtkEvent NewInstance() const {
    void* cPtr = vtkd_im.vtkEvent_NewInstance(cast(void*)swigCPtr);
    vtkEvent ret = (cPtr is null) ? null : new vtkEvent(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public void SetEventId(core.stdc.config.c_ulong _arg) {
    vtkd_im.vtkEvent_SetEventId(cast(void*)swigCPtr, _arg);
  }

  public core.stdc.config.c_ulong GetEventId() {
    auto ret = vtkd_im.vtkEvent_GetEventId(cast(void*)swigCPtr);
    return ret;
  }

  public void SetModifier(int _arg) {
    vtkd_im.vtkEvent_SetModifier(cast(void*)swigCPtr, _arg);
  }

  public int GetModifier() {
    auto ret = vtkd_im.vtkEvent_GetModifier__SWIG_0(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeyCode(char _arg) {
    vtkd_im.vtkEvent_SetKeyCode(cast(void*)swigCPtr, _arg);
  }

  public char GetKeyCode() {
    auto ret = vtkd_im.vtkEvent_GetKeyCode(cast(void*)swigCPtr);
    return ret;
  }

  public void SetRepeatCount(int _arg) {
    vtkd_im.vtkEvent_SetRepeatCount(cast(void*)swigCPtr, _arg);
  }

  public int GetRepeatCount() {
    auto ret = vtkd_im.vtkEvent_GetRepeatCount(cast(void*)swigCPtr);
    return ret;
  }

  public void SetKeySym(string _arg) {
    vtkd_im.vtkEvent_SetKeySym(cast(void*)swigCPtr, (_arg ? std.string.toStringz(_arg) : null));
  }

  public string GetKeySym() {
    string ret = std.conv.to!string(vtkd_im.vtkEvent_GetKeySym(cast(void*)swigCPtr));
    return ret;
  }

  public static int GetModifier(vtkRenderWindowInteractor.vtkRenderWindowInteractor arg0) {
    auto ret = vtkd_im.vtkEvent_GetModifier__SWIG_1(vtkRenderWindowInteractor.vtkRenderWindowInteractor.swigGetCPtr(arg0));
    return ret;
  }
}
