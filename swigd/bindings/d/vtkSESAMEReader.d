/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkSESAMEReader;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkIntArray;
static import vtkRectilinearGridAlgorithm;

class vtkSESAMEReader : vtkRectilinearGridAlgorithm.vtkRectilinearGridAlgorithm {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkSESAMEReader_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkSESAMEReader obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new object.Exception("C++ destructor does not have public access");
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static vtkSESAMEReader New() {
    void* cPtr = vtkd_im.vtkSESAMEReader_New();
    vtkSESAMEReader ret = (cPtr is null) ? null : new vtkSESAMEReader(cPtr, false);
    return ret;
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkSESAMEReader_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkSESAMEReader SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkSESAMEReader_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkSESAMEReader ret = (cPtr is null) ? null : new vtkSESAMEReader(cPtr, false);
    return ret;
  }

  public vtkSESAMEReader NewInstance() const {
    void* cPtr = vtkd_im.vtkSESAMEReader_NewInstance(cast(void*)swigCPtr);
    vtkSESAMEReader ret = (cPtr is null) ? null : new vtkSESAMEReader(cPtr, false);
    return ret;
  }

  alias vtkRectilinearGridAlgorithm.vtkRectilinearGridAlgorithm.NewInstance NewInstance;

  public void SetFileName(string file) {
    vtkd_im.vtkSESAMEReader_SetFileName(cast(void*)swigCPtr, (file ? std.string.toStringz(file) : null));
  }

  public string GetFileName() {
    string ret = std.conv.to!string(vtkd_im.vtkSESAMEReader_GetFileName(cast(void*)swigCPtr));
    return ret;
  }

  public int IsValidFile() {
    auto ret = vtkd_im.vtkSESAMEReader_IsValidFile(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTableIds() {
    auto ret = vtkd_im.vtkSESAMEReader_GetNumberOfTableIds(cast(void*)swigCPtr);
    return ret;
  }

  public int* GetTableIds() {
    auto ret = cast(int*)vtkd_im.vtkSESAMEReader_GetTableIds(cast(void*)swigCPtr);
    return ret;
  }

  public vtkIntArray.vtkIntArray GetTableIdsAsArray() {
    void* cPtr = vtkd_im.vtkSESAMEReader_GetTableIdsAsArray(cast(void*)swigCPtr);
    vtkIntArray.vtkIntArray ret = (cPtr is null) ? null : new vtkIntArray.vtkIntArray(cPtr, false);
    return ret;
  }

  public void SetTable(int tableId) {
    vtkd_im.vtkSESAMEReader_SetTable(cast(void*)swigCPtr, tableId);
  }

  public int GetTable() {
    auto ret = vtkd_im.vtkSESAMEReader_GetTable(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTableArrayNames() {
    auto ret = vtkd_im.vtkSESAMEReader_GetNumberOfTableArrayNames(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfTableArrays() {
    auto ret = vtkd_im.vtkSESAMEReader_GetNumberOfTableArrays(cast(void*)swigCPtr);
    return ret;
  }

  public string GetTableArrayName(int index) {
    string ret = std.conv.to!string(vtkd_im.vtkSESAMEReader_GetTableArrayName(cast(void*)swigCPtr, index));
    return ret;
  }

  public void SetTableArrayStatus(string name, int flag) {
    vtkd_im.vtkSESAMEReader_SetTableArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null), flag);
  }

  public int GetTableArrayStatus(string name) {
    auto ret = vtkd_im.vtkSESAMEReader_GetTableArrayStatus(cast(void*)swigCPtr, (name ? std.string.toStringz(name) : null));
    return ret;
  }
}
