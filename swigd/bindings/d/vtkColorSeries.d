/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

module vtkColorSeries;

static import vtkd_im;
static import core.stdc.config;

static import std.conv;
static import std.string;

static import std.conv;
static import std.string;
static import vtkObjectBase;
static import vtkStdString;
static import vtkLookupTable;
static import vtkObject;

class vtkColorSeries : vtkObject.vtkObject {
  private void* swigCPtr;

  public this(void* cObject, bool ownCObject) {
    super(vtkd_im.vtkColorSeries_Upcast(cObject), ownCObject);
    swigCPtr = cObject;
  }

  public static void* swigGetCPtr(vtkColorSeries obj) {
    return (obj is null) ? null : obj.swigCPtr;
  }

  mixin vtkd_im.SwigOperatorDefinitions;

  ~this() {
    dispose();
  }

  public override void dispose() {
    synchronized(this) {
      if (swigCPtr !is null) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          vtkd_im.delete_vtkColorSeries(cast(void*)swigCPtr);
        }
        swigCPtr = null;
        super.dispose();
      }
    }
  }

  public static int IsTypeOf(string type) {
    auto ret = vtkd_im.vtkColorSeries_IsTypeOf((type ? std.string.toStringz(type) : null));
    return ret;
  }

  public static vtkColorSeries SafeDownCast(vtkObjectBase.vtkObjectBase o) {
    void* cPtr = vtkd_im.vtkColorSeries_SafeDownCast(vtkObjectBase.vtkObjectBase.swigGetCPtr(o));
    vtkColorSeries ret = (cPtr is null) ? null : new vtkColorSeries(cPtr, false);
    return ret;
  }

  public vtkColorSeries NewInstance() const {
    void* cPtr = vtkd_im.vtkColorSeries_NewInstance(cast(void*)swigCPtr);
    vtkColorSeries ret = (cPtr is null) ? null : new vtkColorSeries(cPtr, false);
    return ret;
  }

  alias vtkObject.vtkObject.NewInstance NewInstance;

  public static vtkColorSeries New() {
    void* cPtr = vtkd_im.vtkColorSeries_New();
    vtkColorSeries ret = (cPtr is null) ? null : new vtkColorSeries(cPtr, false);
    return ret;
  }

  public void SetColorScheme(int scheme) {
    vtkd_im.vtkColorSeries_SetColorScheme(cast(void*)swigCPtr, scheme);
  }

  public int SetColorSchemeByName(vtkStdString.vtkStdString schemeName) {
    auto ret = vtkd_im.vtkColorSeries_SetColorSchemeByName(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(schemeName));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
    return ret;
  }

  public int GetNumberOfColorSchemes() const {
    auto ret = vtkd_im.vtkColorSeries_GetNumberOfColorSchemes(cast(void*)swigCPtr);
    return ret;
  }

  public vtkStdString.vtkStdString GetColorSchemeName() const {
    vtkStdString.vtkStdString ret = new vtkStdString.vtkStdString(vtkd_im.vtkColorSeries_GetColorSchemeName(cast(void*)swigCPtr), true);
    return ret;
  }

  public void SetColorSchemeName(vtkStdString.vtkStdString scheme) {
    vtkd_im.vtkColorSeries_SetColorSchemeName(cast(void*)swigCPtr, vtkStdString.vtkStdString.swigGetCPtr(scheme));
    if (vtkd_im.SwigPendingException.isPending) throw vtkd_im.SwigPendingException.retrieve();
  }

  public int GetColorScheme() const {
    auto ret = vtkd_im.vtkColorSeries_GetColorScheme(cast(void*)swigCPtr);
    return ret;
  }

  public int GetNumberOfColors() const {
    auto ret = vtkd_im.vtkColorSeries_GetNumberOfColors(cast(void*)swigCPtr);
    return ret;
  }

  public void SetNumberOfColors(int numColors) {
    vtkd_im.vtkColorSeries_SetNumberOfColors(cast(void*)swigCPtr, numColors);
  }

  public void RemoveColor(int index) {
    vtkd_im.vtkColorSeries_RemoveColor(cast(void*)swigCPtr, index);
  }

  public void ClearColors() {
    vtkd_im.vtkColorSeries_ClearColors(cast(void*)swigCPtr);
  }

  public void DeepCopy(vtkColorSeries chartColors) {
    vtkd_im.vtkColorSeries_DeepCopy(cast(void*)swigCPtr, vtkColorSeries.swigGetCPtr(chartColors));
  }

  public void BuildLookupTable(vtkLookupTable.vtkLookupTable lkup) {
    vtkd_im.vtkColorSeries_BuildLookupTable(cast(void*)swigCPtr, vtkLookupTable.vtkLookupTable.swigGetCPtr(lkup));
  }

  public vtkLookupTable.vtkLookupTable CreateLookupTable() {
    void* cPtr = vtkd_im.vtkColorSeries_CreateLookupTable(cast(void*)swigCPtr);
    vtkLookupTable.vtkLookupTable ret = (cPtr is null) ? null : new vtkLookupTable.vtkLookupTable(cPtr, false);
    return ret;
  }

  public this() {
    this(vtkd_im.new_vtkColorSeries(), true);
  }
}
